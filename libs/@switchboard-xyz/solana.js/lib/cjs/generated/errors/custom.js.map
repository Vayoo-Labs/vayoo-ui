{"version":3,"file":"custom.js","sourceRoot":"","sources":["../../../../src/generated/errors/custom.ts"],"names":[],"mappings":"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","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nexport type CustomError =\n  | ArrayOperationError\n  | QueueOperationError\n  | IncorrectProgramOwnerError\n  | InvalidAggregatorRound\n  | TooManyAggregatorJobs\n  | AggregatorCurrentRoundClosed\n  | AggregatorInvalidSaveResult\n  | InvalidStrDecimalConversion\n  | AccountLoaderMissingSignature\n  | MissingRequiredSignature\n  | ArrayOverflowError\n  | ArrayUnderflowError\n  | PubkeyNotFoundError\n  | AggregatorIllegalRoundOpenCall\n  | AggregatorIllegalRoundCloseCall\n  | AggregatorClosedError\n  | IllegalOracleIdxError\n  | OracleAlreadyRespondedError\n  | ProtoDeserializeError\n  | UnauthorizedStateUpdateError\n  | MissingOracleAccountsError\n  | OracleMismatchError\n  | CrankMaxCapacityError\n  | AggregatorLeaseInsufficientFunds\n  | IncorrectTokenAccountMint\n  | InvalidEscrowAccount\n  | CrankEmptyError\n  | PdaDeriveError\n  | AggregatorAccountNotFound\n  | PermissionAccountNotFound\n  | LeaseAccountDeriveFailure\n  | PermissionAccountDeriveFailure\n  | EscrowAccountNotFound\n  | LeaseAccountNotFound\n  | DecimalConversionError\n  | PermissionDenied\n  | QueueAtCapacity\n  | ExcessiveCrankRowsError\n  | AggregatorLockedError\n  | AggregatorInvalidBatchSizeError\n  | AggregatorJobChecksumMismatch\n  | IntegerOverflowError\n  | InvalidUpdatePeriodError\n  | NoResultsError\n  | InvalidExpirationError\n  | InsufficientStakeError\n  | LeaseInactiveError\n  | NoAggregatorJobsFound\n  | IntegerUnderflowError\n  | OracleQueueMismatch\n  | OracleWalletMismatchError\n  | InvalidBufferAccountError\n  | InsufficientOracleQueueError\n  | InvalidAuthorityError\n  | InvalidTokenAccountMintError\n  | ExcessiveLeaseWithdrawlError\n  | InvalideHistoryAccountError\n  | InvalidLeaseAccountEscrowError\n  | InvalidCrankAccountError\n  | CrankNoElementsReadyError\n  | IndexOutOfBoundsError\n  | VrfInvalidRequestError\n  | VrfInvalidProofSubmissionError\n  | VrfVerifyError\n  | VrfCallbackError\n  | VrfCallbackParamsError\n  | VrfCallbackAlreadyCalledError\n  | VrfInvalidPubkeyError\n  | VrfTooManyVerifyCallsError\n  | VrfRequestAlreadyLaunchedError\n  | VrfInsufficientVerificationError\n  | InvalidVrfProducerError\n  | InvalidGovernancePidError\n  | InvalidGovernanceAccountError\n  | MissingOptionalAccount\n  | InvalidSpawnRecordOwner\n  | NoopError\n  | MissingRequiredAccountsError\n  | InvalidMintError\n  | InvalidTokenAccountKeyError\n  | InvalidJobAccountError\n  | VoterStakeRegistryError\n  | AccountDiscriminatorMismatch\n  | FuckingImpossibleError\n  | InvalidVrfRound\n  | JobSizeExceeded\n  | JobChunksExceeded\n  | JobDataLocked\n  | JobNotInitialized\n  | BufferRelayerIllegalRoundOpenCall\n  | InvalidSliderAccount\n  | VrfLiteHasExistingPool\n  | VrfPoolFull\n  | VrfPoolEmpty\n  | VrfAccountNotFound\n  | AccountCloseNotReady\n  | VrfPoolRequestTooSoon\n  | VrfPoolMiss\n  | VrfLiteOwnedByPool\n  | InsufficientTokenBalance;\n\nexport class ArrayOperationError extends Error {\n  static readonly code = 6000;\n  readonly code = 6000;\n  readonly name = 'ArrayOperationError';\n  readonly msg = 'Illegal operation on a Switchboard array.';\n\n  constructor(readonly logs?: string[]) {\n    super('6000: Illegal operation on a Switchboard array.');\n  }\n}\n\nexport class QueueOperationError extends Error {\n  static readonly code = 6001;\n  readonly code = 6001;\n  readonly name = 'QueueOperationError';\n  readonly msg = 'Illegal operation on a Switchboard queue.';\n\n  constructor(readonly logs?: string[]) {\n    super('6001: Illegal operation on a Switchboard queue.');\n  }\n}\n\nexport class IncorrectProgramOwnerError extends Error {\n  static readonly code = 6002;\n  readonly code = 6002;\n  readonly name = 'IncorrectProgramOwnerError';\n  readonly msg =\n    'An account required to be owned by the program has a different owner.';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '6002: An account required to be owned by the program has a different owner.'\n    );\n  }\n}\n\nexport class InvalidAggregatorRound extends Error {\n  static readonly code = 6003;\n  readonly code = 6003;\n  readonly name = 'InvalidAggregatorRound';\n  readonly msg = 'Aggregator is not currently populated with a valid round.';\n\n  constructor(readonly logs?: string[]) {\n    super('6003: Aggregator is not currently populated with a valid round.');\n  }\n}\n\nexport class TooManyAggregatorJobs extends Error {\n  static readonly code = 6004;\n  readonly code = 6004;\n  readonly name = 'TooManyAggregatorJobs';\n  readonly msg = 'Aggregator cannot fit any more jobs.';\n\n  constructor(readonly logs?: string[]) {\n    super('6004: Aggregator cannot fit any more jobs.');\n  }\n}\n\nexport class AggregatorCurrentRoundClosed extends Error {\n  static readonly code = 6005;\n  readonly code = 6005;\n  readonly name = 'AggregatorCurrentRoundClosed';\n  readonly msg =\n    \"Aggregator's current round is closed. No results are being accepted.\";\n\n  constructor(readonly logs?: string[]) {\n    super(\n      \"6005: Aggregator's current round is closed. No results are being accepted.\"\n    );\n  }\n}\n\nexport class AggregatorInvalidSaveResult extends Error {\n  static readonly code = 6006;\n  readonly code = 6006;\n  readonly name = 'AggregatorInvalidSaveResult';\n  readonly msg = 'Aggregator received an invalid save result instruction.';\n\n  constructor(readonly logs?: string[]) {\n    super('6006: Aggregator received an invalid save result instruction.');\n  }\n}\n\nexport class InvalidStrDecimalConversion extends Error {\n  static readonly code = 6007;\n  readonly code = 6007;\n  readonly name = 'InvalidStrDecimalConversion';\n  readonly msg = 'Failed to convert string to decimal format.';\n\n  constructor(readonly logs?: string[]) {\n    super('6007: Failed to convert string to decimal format.');\n  }\n}\n\nexport class AccountLoaderMissingSignature extends Error {\n  static readonly code = 6008;\n  readonly code = 6008;\n  readonly name = 'AccountLoaderMissingSignature';\n  readonly msg = 'AccountLoader account is missing a required signature.';\n\n  constructor(readonly logs?: string[]) {\n    super('6008: AccountLoader account is missing a required signature.');\n  }\n}\n\nexport class MissingRequiredSignature extends Error {\n  static readonly code = 6009;\n  readonly code = 6009;\n  readonly name = 'MissingRequiredSignature';\n  readonly msg = 'Account is missing a required signature.';\n\n  constructor(readonly logs?: string[]) {\n    super('6009: Account is missing a required signature.');\n  }\n}\n\nexport class ArrayOverflowError extends Error {\n  static readonly code = 6010;\n  readonly code = 6010;\n  readonly name = 'ArrayOverflowError';\n  readonly msg =\n    'The attempted action will overflow a zero-copy account array.';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '6010: The attempted action will overflow a zero-copy account array.'\n    );\n  }\n}\n\nexport class ArrayUnderflowError extends Error {\n  static readonly code = 6011;\n  readonly code = 6011;\n  readonly name = 'ArrayUnderflowError';\n  readonly msg =\n    'The attempted action will underflow a zero-copy account array.';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '6011: The attempted action will underflow a zero-copy account array.'\n    );\n  }\n}\n\nexport class PubkeyNotFoundError extends Error {\n  static readonly code = 6012;\n  readonly code = 6012;\n  readonly name = 'PubkeyNotFoundError';\n  readonly msg = 'The queried public key was not found.';\n\n  constructor(readonly logs?: string[]) {\n    super('6012: The queried public key was not found.');\n  }\n}\n\nexport class AggregatorIllegalRoundOpenCall extends Error {\n  static readonly code = 6013;\n  readonly code = 6013;\n  readonly name = 'AggregatorIllegalRoundOpenCall';\n  readonly msg = 'Aggregator round open called too early.';\n\n  constructor(readonly logs?: string[]) {\n    super('6013: Aggregator round open called too early.');\n  }\n}\n\nexport class AggregatorIllegalRoundCloseCall extends Error {\n  static readonly code = 6014;\n  readonly code = 6014;\n  readonly name = 'AggregatorIllegalRoundCloseCall';\n  readonly msg = 'Aggregator round close called too early.';\n\n  constructor(readonly logs?: string[]) {\n    super('6014: Aggregator round close called too early.');\n  }\n}\n\nexport class AggregatorClosedError extends Error {\n  static readonly code = 6015;\n  readonly code = 6015;\n  readonly name = 'AggregatorClosedError';\n  readonly msg = 'Aggregator is closed. Illegal action.';\n\n  constructor(readonly logs?: string[]) {\n    super('6015: Aggregator is closed. Illegal action.');\n  }\n}\n\nexport class IllegalOracleIdxError extends Error {\n  static readonly code = 6016;\n  readonly code = 6016;\n  readonly name = 'IllegalOracleIdxError';\n  readonly msg = 'Illegal oracle index.';\n\n  constructor(readonly logs?: string[]) {\n    super('6016: Illegal oracle index.');\n  }\n}\n\nexport class OracleAlreadyRespondedError extends Error {\n  static readonly code = 6017;\n  readonly code = 6017;\n  readonly name = 'OracleAlreadyRespondedError';\n  readonly msg = 'The provided oracle has already responded this round.';\n\n  constructor(readonly logs?: string[]) {\n    super('6017: The provided oracle has already responded this round.');\n  }\n}\n\nexport class ProtoDeserializeError extends Error {\n  static readonly code = 6018;\n  readonly code = 6018;\n  readonly name = 'ProtoDeserializeError';\n  readonly msg = 'Failed to deserialize protocol buffer.';\n\n  constructor(readonly logs?: string[]) {\n    super('6018: Failed to deserialize protocol buffer.');\n  }\n}\n\nexport class UnauthorizedStateUpdateError extends Error {\n  static readonly code = 6019;\n  readonly code = 6019;\n  readonly name = 'UnauthorizedStateUpdateError';\n  readonly msg = 'Unauthorized program state modification attempted.';\n\n  constructor(readonly logs?: string[]) {\n    super('6019: Unauthorized program state modification attempted.');\n  }\n}\n\nexport class MissingOracleAccountsError extends Error {\n  static readonly code = 6020;\n  readonly code = 6020;\n  readonly name = 'MissingOracleAccountsError';\n  readonly msg = 'Not enough oracle accounts provided to closeRounds.';\n\n  constructor(readonly logs?: string[]) {\n    super('6020: Not enough oracle accounts provided to closeRounds.');\n  }\n}\n\nexport class OracleMismatchError extends Error {\n  static readonly code = 6021;\n  readonly code = 6021;\n  readonly name = 'OracleMismatchError';\n  readonly msg =\n    'An unexpected oracle account was provided for the transaction.';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '6021: An unexpected oracle account was provided for the transaction.'\n    );\n  }\n}\n\nexport class CrankMaxCapacityError extends Error {\n  static readonly code = 6022;\n  readonly code = 6022;\n  readonly name = 'CrankMaxCapacityError';\n  readonly msg = \"Attempted to push to a Crank that's at capacity\";\n\n  constructor(readonly logs?: string[]) {\n    super(\"6022: Attempted to push to a Crank that's at capacity\");\n  }\n}\n\nexport class AggregatorLeaseInsufficientFunds extends Error {\n  static readonly code = 6023;\n  readonly code = 6023;\n  readonly name = 'AggregatorLeaseInsufficientFunds';\n  readonly msg =\n    'Aggregator update call attempted but attached lease has insufficient funds.';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '6023: Aggregator update call attempted but attached lease has insufficient funds.'\n    );\n  }\n}\n\nexport class IncorrectTokenAccountMint extends Error {\n  static readonly code = 6024;\n  readonly code = 6024;\n  readonly name = 'IncorrectTokenAccountMint';\n  readonly msg =\n    'The provided token account does not point to the Switchboard token mint.';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '6024: The provided token account does not point to the Switchboard token mint.'\n    );\n  }\n}\n\nexport class InvalidEscrowAccount extends Error {\n  static readonly code = 6025;\n  readonly code = 6025;\n  readonly name = 'InvalidEscrowAccount';\n  readonly msg = 'An invalid escrow account was provided.';\n\n  constructor(readonly logs?: string[]) {\n    super('6025: An invalid escrow account was provided.');\n  }\n}\n\nexport class CrankEmptyError extends Error {\n  static readonly code = 6026;\n  readonly code = 6026;\n  readonly name = 'CrankEmptyError';\n  readonly msg = 'Crank empty. Pop failed.';\n\n  constructor(readonly logs?: string[]) {\n    super('6026: Crank empty. Pop failed.');\n  }\n}\n\nexport class PdaDeriveError extends Error {\n  static readonly code = 6027;\n  readonly code = 6027;\n  readonly name = 'PdaDeriveError';\n  readonly msg = 'Failed to derive a PDA from the provided seed.';\n\n  constructor(readonly logs?: string[]) {\n    super('6027: Failed to derive a PDA from the provided seed.');\n  }\n}\n\nexport class AggregatorAccountNotFound extends Error {\n  static readonly code = 6028;\n  readonly code = 6028;\n  readonly name = 'AggregatorAccountNotFound';\n  readonly msg = 'Aggregator account missing from provided account list.';\n\n  constructor(readonly logs?: string[]) {\n    super('6028: Aggregator account missing from provided account list.');\n  }\n}\n\nexport class PermissionAccountNotFound extends Error {\n  static readonly code = 6029;\n  readonly code = 6029;\n  readonly name = 'PermissionAccountNotFound';\n  readonly msg = 'Permission account missing from provided account list.';\n\n  constructor(readonly logs?: string[]) {\n    super('6029: Permission account missing from provided account list.');\n  }\n}\n\nexport class LeaseAccountDeriveFailure extends Error {\n  static readonly code = 6030;\n  readonly code = 6030;\n  readonly name = 'LeaseAccountDeriveFailure';\n  readonly msg = 'Failed to derive a lease account.';\n\n  constructor(readonly logs?: string[]) {\n    super('6030: Failed to derive a lease account.');\n  }\n}\n\nexport class PermissionAccountDeriveFailure extends Error {\n  static readonly code = 6031;\n  readonly code = 6031;\n  readonly name = 'PermissionAccountDeriveFailure';\n  readonly msg = 'Failed to derive a permission account.';\n\n  constructor(readonly logs?: string[]) {\n    super('6031: Failed to derive a permission account.');\n  }\n}\n\nexport class EscrowAccountNotFound extends Error {\n  static readonly code = 6032;\n  readonly code = 6032;\n  readonly name = 'EscrowAccountNotFound';\n  readonly msg = 'Escrow account missing from provided account list.';\n\n  constructor(readonly logs?: string[]) {\n    super('6032: Escrow account missing from provided account list.');\n  }\n}\n\nexport class LeaseAccountNotFound extends Error {\n  static readonly code = 6033;\n  readonly code = 6033;\n  readonly name = 'LeaseAccountNotFound';\n  readonly msg = 'Lease account missing from provided account list.';\n\n  constructor(readonly logs?: string[]) {\n    super('6033: Lease account missing from provided account list.');\n  }\n}\n\nexport class DecimalConversionError extends Error {\n  static readonly code = 6034;\n  readonly code = 6034;\n  readonly name = 'DecimalConversionError';\n  readonly msg = 'Decimal conversion method failed.';\n\n  constructor(readonly logs?: string[]) {\n    super('6034: Decimal conversion method failed.');\n  }\n}\n\nexport class PermissionDenied extends Error {\n  static readonly code = 6035;\n  readonly code = 6035;\n  readonly name = 'PermissionDenied';\n  readonly msg =\n    'Permission account is missing required flags for the given action.';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '6035: Permission account is missing required flags for the given action.'\n    );\n  }\n}\n\nexport class QueueAtCapacity extends Error {\n  static readonly code = 6036;\n  readonly code = 6036;\n  readonly name = 'QueueAtCapacity';\n  readonly msg = 'Oracle queue is at lease capacity.';\n\n  constructor(readonly logs?: string[]) {\n    super('6036: Oracle queue is at lease capacity.');\n  }\n}\n\nexport class ExcessiveCrankRowsError extends Error {\n  static readonly code = 6037;\n  readonly code = 6037;\n  readonly name = 'ExcessiveCrankRowsError';\n  readonly msg = 'Data feed is already pushed on a crank.';\n\n  constructor(readonly logs?: string[]) {\n    super('6037: Data feed is already pushed on a crank.');\n  }\n}\n\nexport class AggregatorLockedError extends Error {\n  static readonly code = 6038;\n  readonly code = 6038;\n  readonly name = 'AggregatorLockedError';\n  readonly msg =\n    'Aggregator is locked, no setting modifications or job additions allowed.';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '6038: Aggregator is locked, no setting modifications or job additions allowed.'\n    );\n  }\n}\n\nexport class AggregatorInvalidBatchSizeError extends Error {\n  static readonly code = 6039;\n  readonly code = 6039;\n  readonly name = 'AggregatorInvalidBatchSizeError';\n  readonly msg = 'Aggregator invalid batch size.';\n\n  constructor(readonly logs?: string[]) {\n    super('6039: Aggregator invalid batch size.');\n  }\n}\n\nexport class AggregatorJobChecksumMismatch extends Error {\n  static readonly code = 6040;\n  readonly code = 6040;\n  readonly name = 'AggregatorJobChecksumMismatch';\n  readonly msg = 'Oracle provided an incorrect aggregator job checksum.';\n\n  constructor(readonly logs?: string[]) {\n    super('6040: Oracle provided an incorrect aggregator job checksum.');\n  }\n}\n\nexport class IntegerOverflowError extends Error {\n  static readonly code = 6041;\n  readonly code = 6041;\n  readonly name = 'IntegerOverflowError';\n  readonly msg = 'An integer overflow occurred.';\n\n  constructor(readonly logs?: string[]) {\n    super('6041: An integer overflow occurred.');\n  }\n}\n\nexport class InvalidUpdatePeriodError extends Error {\n  static readonly code = 6042;\n  readonly code = 6042;\n  readonly name = 'InvalidUpdatePeriodError';\n  readonly msg = 'Minimum update period is 5 seconds.';\n\n  constructor(readonly logs?: string[]) {\n    super('6042: Minimum update period is 5 seconds.');\n  }\n}\n\nexport class NoResultsError extends Error {\n  static readonly code = 6043;\n  readonly code = 6043;\n  readonly name = 'NoResultsError';\n  readonly msg = 'Aggregator round evaluation attempted with no results.';\n\n  constructor(readonly logs?: string[]) {\n    super('6043: Aggregator round evaluation attempted with no results.');\n  }\n}\n\nexport class InvalidExpirationError extends Error {\n  static readonly code = 6044;\n  readonly code = 6044;\n  readonly name = 'InvalidExpirationError';\n  readonly msg = 'An expiration constraint was broken.';\n\n  constructor(readonly logs?: string[]) {\n    super('6044: An expiration constraint was broken.');\n  }\n}\n\nexport class InsufficientStakeError extends Error {\n  static readonly code = 6045;\n  readonly code = 6045;\n  readonly name = 'InsufficientStakeError';\n  readonly msg = 'An account provided insufficient stake for action.';\n\n  constructor(readonly logs?: string[]) {\n    super('6045: An account provided insufficient stake for action.');\n  }\n}\n\nexport class LeaseInactiveError extends Error {\n  static readonly code = 6046;\n  readonly code = 6046;\n  readonly name = 'LeaseInactiveError';\n  readonly msg = 'The provided lease account is not active.';\n\n  constructor(readonly logs?: string[]) {\n    super('6046: The provided lease account is not active.');\n  }\n}\n\nexport class NoAggregatorJobsFound extends Error {\n  static readonly code = 6047;\n  readonly code = 6047;\n  readonly name = 'NoAggregatorJobsFound';\n  readonly msg = 'No jobs are currently included in the aggregator.';\n\n  constructor(readonly logs?: string[]) {\n    super('6047: No jobs are currently included in the aggregator.');\n  }\n}\n\nexport class IntegerUnderflowError extends Error {\n  static readonly code = 6048;\n  readonly code = 6048;\n  readonly name = 'IntegerUnderflowError';\n  readonly msg = 'An integer underflow occurred.';\n\n  constructor(readonly logs?: string[]) {\n    super('6048: An integer underflow occurred.');\n  }\n}\n\nexport class OracleQueueMismatch extends Error {\n  static readonly code = 6049;\n  readonly code = 6049;\n  readonly name = 'OracleQueueMismatch';\n  readonly msg = 'An invalid oracle queue account was provided.';\n\n  constructor(readonly logs?: string[]) {\n    super('6049: An invalid oracle queue account was provided.');\n  }\n}\n\nexport class OracleWalletMismatchError extends Error {\n  static readonly code = 6050;\n  readonly code = 6050;\n  readonly name = 'OracleWalletMismatchError';\n  readonly msg =\n    'An unexpected oracle wallet account was provided for the transaction.';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '6050: An unexpected oracle wallet account was provided for the transaction.'\n    );\n  }\n}\n\nexport class InvalidBufferAccountError extends Error {\n  static readonly code = 6051;\n  readonly code = 6051;\n  readonly name = 'InvalidBufferAccountError';\n  readonly msg = 'An invalid buffer account was provided.';\n\n  constructor(readonly logs?: string[]) {\n    super('6051: An invalid buffer account was provided.');\n  }\n}\n\nexport class InsufficientOracleQueueError extends Error {\n  static readonly code = 6052;\n  readonly code = 6052;\n  readonly name = 'InsufficientOracleQueueError';\n  readonly msg = 'Insufficient oracle queue size.';\n\n  constructor(readonly logs?: string[]) {\n    super('6052: Insufficient oracle queue size.');\n  }\n}\n\nexport class InvalidAuthorityError extends Error {\n  static readonly code = 6053;\n  readonly code = 6053;\n  readonly name = 'InvalidAuthorityError';\n  readonly msg = 'Invalid authority account provided.';\n\n  constructor(readonly logs?: string[]) {\n    super('6053: Invalid authority account provided.');\n  }\n}\n\nexport class InvalidTokenAccountMintError extends Error {\n  static readonly code = 6054;\n  readonly code = 6054;\n  readonly name = 'InvalidTokenAccountMintError';\n  readonly msg =\n    'A provided token wallet is associated with an incorrect mint.';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '6054: A provided token wallet is associated with an incorrect mint.'\n    );\n  }\n}\n\nexport class ExcessiveLeaseWithdrawlError extends Error {\n  static readonly code = 6055;\n  readonly code = 6055;\n  readonly name = 'ExcessiveLeaseWithdrawlError';\n  readonly msg =\n    'You must leave enough funds to perform at least 1 update in the lease.';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '6055: You must leave enough funds to perform at least 1 update in the lease.'\n    );\n  }\n}\n\nexport class InvalideHistoryAccountError extends Error {\n  static readonly code = 6056;\n  readonly code = 6056;\n  readonly name = 'InvalideHistoryAccountError';\n  readonly msg = 'Invalid history account provided.';\n\n  constructor(readonly logs?: string[]) {\n    super('6056: Invalid history account provided.');\n  }\n}\n\nexport class InvalidLeaseAccountEscrowError extends Error {\n  static readonly code = 6057;\n  readonly code = 6057;\n  readonly name = 'InvalidLeaseAccountEscrowError';\n  readonly msg = 'Invalid lease account escrow.';\n\n  constructor(readonly logs?: string[]) {\n    super('6057: Invalid lease account escrow.');\n  }\n}\n\nexport class InvalidCrankAccountError extends Error {\n  static readonly code = 6058;\n  readonly code = 6058;\n  readonly name = 'InvalidCrankAccountError';\n  readonly msg = 'Invalid crank provided.';\n\n  constructor(readonly logs?: string[]) {\n    super('6058: Invalid crank provided.');\n  }\n}\n\nexport class CrankNoElementsReadyError extends Error {\n  static readonly code = 6059;\n  readonly code = 6059;\n  readonly name = 'CrankNoElementsReadyError';\n  readonly msg = 'No elements ready to be popped.';\n\n  constructor(readonly logs?: string[]) {\n    super('6059: No elements ready to be popped.');\n  }\n}\n\nexport class IndexOutOfBoundsError extends Error {\n  static readonly code = 6060;\n  readonly code = 6060;\n  readonly name = 'IndexOutOfBoundsError';\n  readonly msg = 'Index out of bounds';\n\n  constructor(readonly logs?: string[]) {\n    super('6060: Index out of bounds');\n  }\n}\n\nexport class VrfInvalidRequestError extends Error {\n  static readonly code = 6061;\n  readonly code = 6061;\n  readonly name = 'VrfInvalidRequestError';\n  readonly msg = 'Invalid vrf request params';\n\n  constructor(readonly logs?: string[]) {\n    super('6061: Invalid vrf request params');\n  }\n}\n\nexport class VrfInvalidProofSubmissionError extends Error {\n  static readonly code = 6062;\n  readonly code = 6062;\n  readonly name = 'VrfInvalidProofSubmissionError';\n  readonly msg = 'Vrf proof failed to verify';\n\n  constructor(readonly logs?: string[]) {\n    super('6062: Vrf proof failed to verify');\n  }\n}\n\nexport class VrfVerifyError extends Error {\n  static readonly code = 6063;\n  readonly code = 6063;\n  readonly name = 'VrfVerifyError';\n  readonly msg = 'Error in verifying vrf proof.';\n\n  constructor(readonly logs?: string[]) {\n    super('6063: Error in verifying vrf proof.');\n  }\n}\n\nexport class VrfCallbackError extends Error {\n  static readonly code = 6064;\n  readonly code = 6064;\n  readonly name = 'VrfCallbackError';\n  readonly msg = 'Vrf callback function failed.';\n\n  constructor(readonly logs?: string[]) {\n    super('6064: Vrf callback function failed.');\n  }\n}\n\nexport class VrfCallbackParamsError extends Error {\n  static readonly code = 6065;\n  readonly code = 6065;\n  readonly name = 'VrfCallbackParamsError';\n  readonly msg = 'Invalid vrf callback params provided.';\n\n  constructor(readonly logs?: string[]) {\n    super('6065: Invalid vrf callback params provided.');\n  }\n}\n\nexport class VrfCallbackAlreadyCalledError extends Error {\n  static readonly code = 6066;\n  readonly code = 6066;\n  readonly name = 'VrfCallbackAlreadyCalledError';\n  readonly msg = 'Vrf callback has already been triggered.';\n\n  constructor(readonly logs?: string[]) {\n    super('6066: Vrf callback has already been triggered.');\n  }\n}\n\nexport class VrfInvalidPubkeyError extends Error {\n  static readonly code = 6067;\n  readonly code = 6067;\n  readonly name = 'VrfInvalidPubkeyError';\n  readonly msg = 'The provided pubkey is invalid to use in ecvrf proofs';\n\n  constructor(readonly logs?: string[]) {\n    super('6067: The provided pubkey is invalid to use in ecvrf proofs');\n  }\n}\n\nexport class VrfTooManyVerifyCallsError extends Error {\n  static readonly code = 6068;\n  readonly code = 6068;\n  readonly name = 'VrfTooManyVerifyCallsError';\n  readonly msg = 'Number of required verify calls exceeded';\n\n  constructor(readonly logs?: string[]) {\n    super('6068: Number of required verify calls exceeded');\n  }\n}\n\nexport class VrfRequestAlreadyLaunchedError extends Error {\n  static readonly code = 6069;\n  readonly code = 6069;\n  readonly name = 'VrfRequestAlreadyLaunchedError';\n  readonly msg = 'Vrf request is already pending';\n\n  constructor(readonly logs?: string[]) {\n    super('6069: Vrf request is already pending');\n  }\n}\n\nexport class VrfInsufficientVerificationError extends Error {\n  static readonly code = 6070;\n  readonly code = 6070;\n  readonly name = 'VrfInsufficientVerificationError';\n  readonly msg = 'Insufficient amount of proofs collected for VRF callback';\n\n  constructor(readonly logs?: string[]) {\n    super('6070: Insufficient amount of proofs collected for VRF callback');\n  }\n}\n\nexport class InvalidVrfProducerError extends Error {\n  static readonly code = 6071;\n  readonly code = 6071;\n  readonly name = 'InvalidVrfProducerError';\n  readonly msg = 'An incorrect oracle attempted to submit a proof';\n\n  constructor(readonly logs?: string[]) {\n    super('6071: An incorrect oracle attempted to submit a proof');\n  }\n}\n\nexport class InvalidGovernancePidError extends Error {\n  static readonly code = 6072;\n  readonly code = 6072;\n  readonly name = 'InvalidGovernancePidError';\n  readonly msg = 'Invalid SPLGovernance Account Supplied';\n\n  constructor(readonly logs?: string[]) {\n    super('6072: Invalid SPLGovernance Account Supplied');\n  }\n}\n\nexport class InvalidGovernanceAccountError extends Error {\n  static readonly code = 6073;\n  readonly code = 6073;\n  readonly name = 'InvalidGovernanceAccountError';\n  readonly msg = 'An Invalid Governance Account was supplied';\n\n  constructor(readonly logs?: string[]) {\n    super('6073: An Invalid Governance Account was supplied');\n  }\n}\n\nexport class MissingOptionalAccount extends Error {\n  static readonly code = 6074;\n  readonly code = 6074;\n  readonly name = 'MissingOptionalAccount';\n  readonly msg = 'Expected an optional account';\n\n  constructor(readonly logs?: string[]) {\n    super('6074: Expected an optional account');\n  }\n}\n\nexport class InvalidSpawnRecordOwner extends Error {\n  static readonly code = 6075;\n  readonly code = 6075;\n  readonly name = 'InvalidSpawnRecordOwner';\n  readonly msg = 'Invalid Owner for Spawn Record';\n\n  constructor(readonly logs?: string[]) {\n    super('6075: Invalid Owner for Spawn Record');\n  }\n}\n\nexport class NoopError extends Error {\n  static readonly code = 6076;\n  readonly code = 6076;\n  readonly name = 'NoopError';\n  readonly msg = 'Noop error';\n\n  constructor(readonly logs?: string[]) {\n    super('6076: Noop error');\n  }\n}\n\nexport class MissingRequiredAccountsError extends Error {\n  static readonly code = 6077;\n  readonly code = 6077;\n  readonly name = 'MissingRequiredAccountsError';\n  readonly msg = 'A required instruction account was not included';\n\n  constructor(readonly logs?: string[]) {\n    super('6077: A required instruction account was not included');\n  }\n}\n\nexport class InvalidMintError extends Error {\n  static readonly code = 6078;\n  readonly code = 6078;\n  readonly name = 'InvalidMintError';\n  readonly msg = 'Invalid mint account passed for instruction';\n\n  constructor(readonly logs?: string[]) {\n    super('6078: Invalid mint account passed for instruction');\n  }\n}\n\nexport class InvalidTokenAccountKeyError extends Error {\n  static readonly code = 6079;\n  readonly code = 6079;\n  readonly name = 'InvalidTokenAccountKeyError';\n  readonly msg = 'An invalid token account was passed into the instruction';\n\n  constructor(readonly logs?: string[]) {\n    super('6079: An invalid token account was passed into the instruction');\n  }\n}\n\nexport class InvalidJobAccountError extends Error {\n  static readonly code = 6080;\n  readonly code = 6080;\n  readonly name = 'InvalidJobAccountError';\n\n  constructor(readonly logs?: string[]) {\n    super('6080: ');\n  }\n}\n\nexport class VoterStakeRegistryError extends Error {\n  static readonly code = 6081;\n  readonly code = 6081;\n  readonly name = 'VoterStakeRegistryError';\n\n  constructor(readonly logs?: string[]) {\n    super('6081: ');\n  }\n}\n\nexport class AccountDiscriminatorMismatch extends Error {\n  static readonly code = 6082;\n  readonly code = 6082;\n  readonly name = 'AccountDiscriminatorMismatch';\n  readonly msg = 'Account discriminator did not match.';\n\n  constructor(readonly logs?: string[]) {\n    super('6082: Account discriminator did not match.');\n  }\n}\n\nexport class FuckingImpossibleError extends Error {\n  static readonly code = 6083;\n  readonly code = 6083;\n  readonly name = 'FuckingImpossibleError';\n  readonly msg = 'This error is fucking impossible.';\n\n  constructor(readonly logs?: string[]) {\n    super('6083: This error is fucking impossible.');\n  }\n}\n\nexport class InvalidVrfRound extends Error {\n  static readonly code = 6084;\n  readonly code = 6084;\n  readonly name = 'InvalidVrfRound';\n  readonly msg = 'Responding to the wrong VRF round';\n\n  constructor(readonly logs?: string[]) {\n    super('6084: Responding to the wrong VRF round');\n  }\n}\n\nexport class JobSizeExceeded extends Error {\n  static readonly code = 6085;\n  readonly code = 6085;\n  readonly name = 'JobSizeExceeded';\n  readonly msg = 'Job size has exceeded the max of 6400 bytes';\n\n  constructor(readonly logs?: string[]) {\n    super('6085: Job size has exceeded the max of 6400 bytes');\n  }\n}\n\nexport class JobChunksExceeded extends Error {\n  static readonly code = 6086;\n  readonly code = 6086;\n  readonly name = 'JobChunksExceeded';\n  readonly msg = 'Job loading can only support a maximum of 8 chunks';\n\n  constructor(readonly logs?: string[]) {\n    super('6086: Job loading can only support a maximum of 8 chunks');\n  }\n}\n\nexport class JobDataLocked extends Error {\n  static readonly code = 6087;\n  readonly code = 6087;\n  readonly name = 'JobDataLocked';\n  readonly msg = 'Job has finished initializing and is immutable';\n\n  constructor(readonly logs?: string[]) {\n    super('6087: Job has finished initializing and is immutable');\n  }\n}\n\nexport class JobNotInitialized extends Error {\n  static readonly code = 6088;\n  readonly code = 6088;\n  readonly name = 'JobNotInitialized';\n  readonly msg = 'Job account has not finished initializing';\n\n  constructor(readonly logs?: string[]) {\n    super('6088: Job account has not finished initializing');\n  }\n}\n\nexport class BufferRelayerIllegalRoundOpenCall extends Error {\n  static readonly code = 6089;\n  readonly code = 6089;\n  readonly name = 'BufferRelayerIllegalRoundOpenCall';\n  readonly msg = 'BufferRelayer round open called too early.';\n\n  constructor(readonly logs?: string[]) {\n    super('6089: BufferRelayer round open called too early.');\n  }\n}\n\nexport class InvalidSliderAccount extends Error {\n  static readonly code = 6090;\n  readonly code = 6090;\n  readonly name = 'InvalidSliderAccount';\n  readonly msg = 'Invalid slider account.';\n\n  constructor(readonly logs?: string[]) {\n    super('6090: Invalid slider account.');\n  }\n}\n\nexport class VrfLiteHasExistingPool extends Error {\n  static readonly code = 6091;\n  readonly code = 6091;\n  readonly name = 'VrfLiteHasExistingPool';\n  readonly msg = 'VRF lite account belongs to an existing pool.';\n\n  constructor(readonly logs?: string[]) {\n    super('6091: VRF lite account belongs to an existing pool.');\n  }\n}\n\nexport class VrfPoolFull extends Error {\n  static readonly code = 6092;\n  readonly code = 6092;\n  readonly name = 'VrfPoolFull';\n  readonly msg = 'VRF pool is at max capacity.';\n\n  constructor(readonly logs?: string[]) {\n    super('6092: VRF pool is at max capacity.');\n  }\n}\n\nexport class VrfPoolEmpty extends Error {\n  static readonly code = 6093;\n  readonly code = 6093;\n  readonly name = 'VrfPoolEmpty';\n  readonly msg = 'VRF pool is empty.';\n\n  constructor(readonly logs?: string[]) {\n    super('6093: VRF pool is empty.');\n  }\n}\n\nexport class VrfAccountNotFound extends Error {\n  static readonly code = 6094;\n  readonly code = 6094;\n  readonly name = 'VrfAccountNotFound';\n  readonly msg = 'Failed to find VRF account in remaining accounts array.';\n\n  constructor(readonly logs?: string[]) {\n    super('6094: Failed to find VRF account in remaining accounts array.');\n  }\n}\n\nexport class AccountCloseNotReady extends Error {\n  static readonly code = 6095;\n  readonly code = 6095;\n  readonly name = 'AccountCloseNotReady';\n  readonly msg = 'Account is not ready to be closed.';\n\n  constructor(readonly logs?: string[]) {\n    super('6095: Account is not ready to be closed.');\n  }\n}\n\nexport class VrfPoolRequestTooSoon extends Error {\n  static readonly code = 6096;\n  readonly code = 6096;\n  readonly name = 'VrfPoolRequestTooSoon';\n  readonly msg = 'VRF requested too soon.';\n\n  constructor(readonly logs?: string[]) {\n    super('6096: VRF requested too soon.');\n  }\n}\n\nexport class VrfPoolMiss extends Error {\n  static readonly code = 6097;\n  readonly code = 6097;\n  readonly name = 'VrfPoolMiss';\n  readonly msg = 'VRF pool miss.';\n\n  constructor(readonly logs?: string[]) {\n    super('6097: VRF pool miss.');\n  }\n}\n\nexport class VrfLiteOwnedByPool extends Error {\n  static readonly code = 6098;\n  readonly code = 6098;\n  readonly name = 'VrfLiteOwnedByPool';\n  readonly msg = 'VRF lite belongs to a pool.';\n\n  constructor(readonly logs?: string[]) {\n    super('6098: VRF lite belongs to a pool.');\n  }\n}\n\nexport class InsufficientTokenBalance extends Error {\n  static readonly code = 6099;\n  readonly code = 6099;\n  readonly name = 'InsufficientTokenBalance';\n  readonly msg = 'Escrow has insufficient funds to perform this action.';\n\n  constructor(readonly logs?: string[]) {\n    super('6099: Escrow has insufficient funds to perform this action.');\n  }\n}\n\nexport function fromCode(code: number, logs?: string[]): CustomError | null {\n  switch (code) {\n    case 6000:\n      return new ArrayOperationError(logs);\n    case 6001:\n      return new QueueOperationError(logs);\n    case 6002:\n      return new IncorrectProgramOwnerError(logs);\n    case 6003:\n      return new InvalidAggregatorRound(logs);\n    case 6004:\n      return new TooManyAggregatorJobs(logs);\n    case 6005:\n      return new AggregatorCurrentRoundClosed(logs);\n    case 6006:\n      return new AggregatorInvalidSaveResult(logs);\n    case 6007:\n      return new InvalidStrDecimalConversion(logs);\n    case 6008:\n      return new AccountLoaderMissingSignature(logs);\n    case 6009:\n      return new MissingRequiredSignature(logs);\n    case 6010:\n      return new ArrayOverflowError(logs);\n    case 6011:\n      return new ArrayUnderflowError(logs);\n    case 6012:\n      return new PubkeyNotFoundError(logs);\n    case 6013:\n      return new AggregatorIllegalRoundOpenCall(logs);\n    case 6014:\n      return new AggregatorIllegalRoundCloseCall(logs);\n    case 6015:\n      return new AggregatorClosedError(logs);\n    case 6016:\n      return new IllegalOracleIdxError(logs);\n    case 6017:\n      return new OracleAlreadyRespondedError(logs);\n    case 6018:\n      return new ProtoDeserializeError(logs);\n    case 6019:\n      return new UnauthorizedStateUpdateError(logs);\n    case 6020:\n      return new MissingOracleAccountsError(logs);\n    case 6021:\n      return new OracleMismatchError(logs);\n    case 6022:\n      return new CrankMaxCapacityError(logs);\n    case 6023:\n      return new AggregatorLeaseInsufficientFunds(logs);\n    case 6024:\n      return new IncorrectTokenAccountMint(logs);\n    case 6025:\n      return new InvalidEscrowAccount(logs);\n    case 6026:\n      return new CrankEmptyError(logs);\n    case 6027:\n      return new PdaDeriveError(logs);\n    case 6028:\n      return new AggregatorAccountNotFound(logs);\n    case 6029:\n      return new PermissionAccountNotFound(logs);\n    case 6030:\n      return new LeaseAccountDeriveFailure(logs);\n    case 6031:\n      return new PermissionAccountDeriveFailure(logs);\n    case 6032:\n      return new EscrowAccountNotFound(logs);\n    case 6033:\n      return new LeaseAccountNotFound(logs);\n    case 6034:\n      return new DecimalConversionError(logs);\n    case 6035:\n      return new PermissionDenied(logs);\n    case 6036:\n      return new QueueAtCapacity(logs);\n    case 6037:\n      return new ExcessiveCrankRowsError(logs);\n    case 6038:\n      return new AggregatorLockedError(logs);\n    case 6039:\n      return new AggregatorInvalidBatchSizeError(logs);\n    case 6040:\n      return new AggregatorJobChecksumMismatch(logs);\n    case 6041:\n      return new IntegerOverflowError(logs);\n    case 6042:\n      return new InvalidUpdatePeriodError(logs);\n    case 6043:\n      return new NoResultsError(logs);\n    case 6044:\n      return new InvalidExpirationError(logs);\n    case 6045:\n      return new InsufficientStakeError(logs);\n    case 6046:\n      return new LeaseInactiveError(logs);\n    case 6047:\n      return new NoAggregatorJobsFound(logs);\n    case 6048:\n      return new IntegerUnderflowError(logs);\n    case 6049:\n      return new OracleQueueMismatch(logs);\n    case 6050:\n      return new OracleWalletMismatchError(logs);\n    case 6051:\n      return new InvalidBufferAccountError(logs);\n    case 6052:\n      return new InsufficientOracleQueueError(logs);\n    case 6053:\n      return new InvalidAuthorityError(logs);\n    case 6054:\n      return new InvalidTokenAccountMintError(logs);\n    case 6055:\n      return new ExcessiveLeaseWithdrawlError(logs);\n    case 6056:\n      return new InvalideHistoryAccountError(logs);\n    case 6057:\n      return new InvalidLeaseAccountEscrowError(logs);\n    case 6058:\n      return new InvalidCrankAccountError(logs);\n    case 6059:\n      return new CrankNoElementsReadyError(logs);\n    case 6060:\n      return new IndexOutOfBoundsError(logs);\n    case 6061:\n      return new VrfInvalidRequestError(logs);\n    case 6062:\n      return new VrfInvalidProofSubmissionError(logs);\n    case 6063:\n      return new VrfVerifyError(logs);\n    case 6064:\n      return new VrfCallbackError(logs);\n    case 6065:\n      return new VrfCallbackParamsError(logs);\n    case 6066:\n      return new VrfCallbackAlreadyCalledError(logs);\n    case 6067:\n      return new VrfInvalidPubkeyError(logs);\n    case 6068:\n      return new VrfTooManyVerifyCallsError(logs);\n    case 6069:\n      return new VrfRequestAlreadyLaunchedError(logs);\n    case 6070:\n      return new VrfInsufficientVerificationError(logs);\n    case 6071:\n      return new InvalidVrfProducerError(logs);\n    case 6072:\n      return new InvalidGovernancePidError(logs);\n    case 6073:\n      return new InvalidGovernanceAccountError(logs);\n    case 6074:\n      return new MissingOptionalAccount(logs);\n    case 6075:\n      return new InvalidSpawnRecordOwner(logs);\n    case 6076:\n      return new NoopError(logs);\n    case 6077:\n      return new MissingRequiredAccountsError(logs);\n    case 6078:\n      return new InvalidMintError(logs);\n    case 6079:\n      return new InvalidTokenAccountKeyError(logs);\n    case 6080:\n      return new InvalidJobAccountError(logs);\n    case 6081:\n      return new VoterStakeRegistryError(logs);\n    case 6082:\n      return new AccountDiscriminatorMismatch(logs);\n    case 6083:\n      return new FuckingImpossibleError(logs);\n    case 6084:\n      return new InvalidVrfRound(logs);\n    case 6085:\n      return new JobSizeExceeded(logs);\n    case 6086:\n      return new JobChunksExceeded(logs);\n    case 6087:\n      return new JobDataLocked(logs);\n    case 6088:\n      return new JobNotInitialized(logs);\n    case 6089:\n      return new BufferRelayerIllegalRoundOpenCall(logs);\n    case 6090:\n      return new InvalidSliderAccount(logs);\n    case 6091:\n      return new VrfLiteHasExistingPool(logs);\n    case 6092:\n      return new VrfPoolFull(logs);\n    case 6093:\n      return new VrfPoolEmpty(logs);\n    case 6094:\n      return new VrfAccountNotFound(logs);\n    case 6095:\n      return new AccountCloseNotReady(logs);\n    case 6096:\n      return new VrfPoolRequestTooSoon(logs);\n    case 6097:\n      return new VrfPoolMiss(logs);\n    case 6098:\n      return new VrfLiteOwnedByPool(logs);\n    case 6099:\n      return new InsufficientTokenBalance(logs);\n  }\n\n  return null;\n}\n"]}