{"version":3,"file":"anchor.js","sourceRoot":"","sources":["../../../../src/generated/errors/anchor.ts"],"names":[],"mappings":"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","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nexport type AnchorError =\n  | InstructionMissing\n  | InstructionFallbackNotFound\n  | InstructionDidNotDeserialize\n  | InstructionDidNotSerialize\n  | IdlInstructionStub\n  | IdlInstructionInvalidProgram\n  | ConstraintMut\n  | ConstraintHasOne\n  | ConstraintSigner\n  | ConstraintRaw\n  | ConstraintOwner\n  | ConstraintRentExempt\n  | ConstraintSeeds\n  | ConstraintExecutable\n  | ConstraintState\n  | ConstraintAssociated\n  | ConstraintAssociatedInit\n  | ConstraintClose\n  | ConstraintAddress\n  | ConstraintZero\n  | ConstraintTokenMint\n  | ConstraintTokenOwner\n  | ConstraintMintMintAuthority\n  | ConstraintMintFreezeAuthority\n  | ConstraintMintDecimals\n  | ConstraintSpace\n  | RequireViolated\n  | RequireEqViolated\n  | RequireKeysEqViolated\n  | RequireNeqViolated\n  | RequireKeysNeqViolated\n  | RequireGtViolated\n  | RequireGteViolated\n  | AccountDiscriminatorAlreadySet\n  | AccountDiscriminatorNotFound\n  | AccountDiscriminatorMismatch\n  | AccountDidNotDeserialize\n  | AccountDidNotSerialize\n  | AccountNotEnoughKeys\n  | AccountNotMutable\n  | AccountOwnedByWrongProgram\n  | InvalidProgramId\n  | InvalidProgramExecutable\n  | AccountNotSigner\n  | AccountNotSystemOwned\n  | AccountNotInitialized\n  | AccountNotProgramData\n  | AccountNotAssociatedTokenAccount\n  | AccountSysvarMismatch\n  | AccountReallocExceedsLimit\n  | AccountDuplicateReallocs\n  | StateInvalidAddress\n  | DeclaredProgramIdMismatch\n  | Deprecated;\n\nexport class InstructionMissing extends Error {\n  static readonly code = 100;\n  readonly code = 100;\n  readonly name = 'InstructionMissing';\n  readonly msg = '8 byte instruction identifier not provided';\n\n  constructor(readonly logs?: string[]) {\n    super('100: 8 byte instruction identifier not provided');\n  }\n}\n\nexport class InstructionFallbackNotFound extends Error {\n  static readonly code = 101;\n  readonly code = 101;\n  readonly name = 'InstructionFallbackNotFound';\n  readonly msg = 'Fallback functions are not supported';\n\n  constructor(readonly logs?: string[]) {\n    super('101: Fallback functions are not supported');\n  }\n}\n\nexport class InstructionDidNotDeserialize extends Error {\n  static readonly code = 102;\n  readonly code = 102;\n  readonly name = 'InstructionDidNotDeserialize';\n  readonly msg = 'The program could not deserialize the given instruction';\n\n  constructor(readonly logs?: string[]) {\n    super('102: The program could not deserialize the given instruction');\n  }\n}\n\nexport class InstructionDidNotSerialize extends Error {\n  static readonly code = 103;\n  readonly code = 103;\n  readonly name = 'InstructionDidNotSerialize';\n  readonly msg = 'The program could not serialize the given instruction';\n\n  constructor(readonly logs?: string[]) {\n    super('103: The program could not serialize the given instruction');\n  }\n}\n\nexport class IdlInstructionStub extends Error {\n  static readonly code = 1000;\n  readonly code = 1000;\n  readonly name = 'IdlInstructionStub';\n  readonly msg = 'The program was compiled without idl instructions';\n\n  constructor(readonly logs?: string[]) {\n    super('1000: The program was compiled without idl instructions');\n  }\n}\n\nexport class IdlInstructionInvalidProgram extends Error {\n  static readonly code = 1001;\n  readonly code = 1001;\n  readonly name = 'IdlInstructionInvalidProgram';\n  readonly msg =\n    'The transaction was given an invalid program for the IDL instruction';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '1001: The transaction was given an invalid program for the IDL instruction'\n    );\n  }\n}\n\nexport class ConstraintMut extends Error {\n  static readonly code = 2000;\n  readonly code = 2000;\n  readonly name = 'ConstraintMut';\n  readonly msg = 'A mut constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2000: A mut constraint was violated');\n  }\n}\n\nexport class ConstraintHasOne extends Error {\n  static readonly code = 2001;\n  readonly code = 2001;\n  readonly name = 'ConstraintHasOne';\n  readonly msg = 'A has_one constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2001: A has_one constraint was violated');\n  }\n}\n\nexport class ConstraintSigner extends Error {\n  static readonly code = 2002;\n  readonly code = 2002;\n  readonly name = 'ConstraintSigner';\n  readonly msg = 'A signer constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2002: A signer constraint was violated');\n  }\n}\n\nexport class ConstraintRaw extends Error {\n  static readonly code = 2003;\n  readonly code = 2003;\n  readonly name = 'ConstraintRaw';\n  readonly msg = 'A raw constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2003: A raw constraint was violated');\n  }\n}\n\nexport class ConstraintOwner extends Error {\n  static readonly code = 2004;\n  readonly code = 2004;\n  readonly name = 'ConstraintOwner';\n  readonly msg = 'An owner constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2004: An owner constraint was violated');\n  }\n}\n\nexport class ConstraintRentExempt extends Error {\n  static readonly code = 2005;\n  readonly code = 2005;\n  readonly name = 'ConstraintRentExempt';\n  readonly msg = 'A rent exemption constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2005: A rent exemption constraint was violated');\n  }\n}\n\nexport class ConstraintSeeds extends Error {\n  static readonly code = 2006;\n  readonly code = 2006;\n  readonly name = 'ConstraintSeeds';\n  readonly msg = 'A seeds constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2006: A seeds constraint was violated');\n  }\n}\n\nexport class ConstraintExecutable extends Error {\n  static readonly code = 2007;\n  readonly code = 2007;\n  readonly name = 'ConstraintExecutable';\n  readonly msg = 'An executable constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2007: An executable constraint was violated');\n  }\n}\n\nexport class ConstraintState extends Error {\n  static readonly code = 2008;\n  readonly code = 2008;\n  readonly name = 'ConstraintState';\n  readonly msg = 'A state constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2008: A state constraint was violated');\n  }\n}\n\nexport class ConstraintAssociated extends Error {\n  static readonly code = 2009;\n  readonly code = 2009;\n  readonly name = 'ConstraintAssociated';\n  readonly msg = 'An associated constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2009: An associated constraint was violated');\n  }\n}\n\nexport class ConstraintAssociatedInit extends Error {\n  static readonly code = 2010;\n  readonly code = 2010;\n  readonly name = 'ConstraintAssociatedInit';\n  readonly msg = 'An associated init constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2010: An associated init constraint was violated');\n  }\n}\n\nexport class ConstraintClose extends Error {\n  static readonly code = 2011;\n  readonly code = 2011;\n  readonly name = 'ConstraintClose';\n  readonly msg = 'A close constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2011: A close constraint was violated');\n  }\n}\n\nexport class ConstraintAddress extends Error {\n  static readonly code = 2012;\n  readonly code = 2012;\n  readonly name = 'ConstraintAddress';\n  readonly msg = 'An address constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2012: An address constraint was violated');\n  }\n}\n\nexport class ConstraintZero extends Error {\n  static readonly code = 2013;\n  readonly code = 2013;\n  readonly name = 'ConstraintZero';\n  readonly msg = 'Expected zero account discriminant';\n\n  constructor(readonly logs?: string[]) {\n    super('2013: Expected zero account discriminant');\n  }\n}\n\nexport class ConstraintTokenMint extends Error {\n  static readonly code = 2014;\n  readonly code = 2014;\n  readonly name = 'ConstraintTokenMint';\n  readonly msg = 'A token mint constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2014: A token mint constraint was violated');\n  }\n}\n\nexport class ConstraintTokenOwner extends Error {\n  static readonly code = 2015;\n  readonly code = 2015;\n  readonly name = 'ConstraintTokenOwner';\n  readonly msg = 'A token owner constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2015: A token owner constraint was violated');\n  }\n}\n\nexport class ConstraintMintMintAuthority extends Error {\n  static readonly code = 2016;\n  readonly code = 2016;\n  readonly name = 'ConstraintMintMintAuthority';\n  readonly msg = 'A mint mint authority constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2016: A mint mint authority constraint was violated');\n  }\n}\n\nexport class ConstraintMintFreezeAuthority extends Error {\n  static readonly code = 2017;\n  readonly code = 2017;\n  readonly name = 'ConstraintMintFreezeAuthority';\n  readonly msg = 'A mint freeze authority constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2017: A mint freeze authority constraint was violated');\n  }\n}\n\nexport class ConstraintMintDecimals extends Error {\n  static readonly code = 2018;\n  readonly code = 2018;\n  readonly name = 'ConstraintMintDecimals';\n  readonly msg = 'A mint decimals constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2018: A mint decimals constraint was violated');\n  }\n}\n\nexport class ConstraintSpace extends Error {\n  static readonly code = 2019;\n  readonly code = 2019;\n  readonly name = 'ConstraintSpace';\n  readonly msg = 'A space constraint was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2019: A space constraint was violated');\n  }\n}\n\nexport class RequireViolated extends Error {\n  static readonly code = 2500;\n  readonly code = 2500;\n  readonly name = 'RequireViolated';\n  readonly msg = 'A require expression was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2500: A require expression was violated');\n  }\n}\n\nexport class RequireEqViolated extends Error {\n  static readonly code = 2501;\n  readonly code = 2501;\n  readonly name = 'RequireEqViolated';\n  readonly msg = 'A require_eq expression was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2501: A require_eq expression was violated');\n  }\n}\n\nexport class RequireKeysEqViolated extends Error {\n  static readonly code = 2502;\n  readonly code = 2502;\n  readonly name = 'RequireKeysEqViolated';\n  readonly msg = 'A require_keys_eq expression was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2502: A require_keys_eq expression was violated');\n  }\n}\n\nexport class RequireNeqViolated extends Error {\n  static readonly code = 2503;\n  readonly code = 2503;\n  readonly name = 'RequireNeqViolated';\n  readonly msg = 'A require_neq expression was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2503: A require_neq expression was violated');\n  }\n}\n\nexport class RequireKeysNeqViolated extends Error {\n  static readonly code = 2504;\n  readonly code = 2504;\n  readonly name = 'RequireKeysNeqViolated';\n  readonly msg = 'A require_keys_neq expression was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2504: A require_keys_neq expression was violated');\n  }\n}\n\nexport class RequireGtViolated extends Error {\n  static readonly code = 2505;\n  readonly code = 2505;\n  readonly name = 'RequireGtViolated';\n  readonly msg = 'A require_gt expression was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2505: A require_gt expression was violated');\n  }\n}\n\nexport class RequireGteViolated extends Error {\n  static readonly code = 2506;\n  readonly code = 2506;\n  readonly name = 'RequireGteViolated';\n  readonly msg = 'A require_gte expression was violated';\n\n  constructor(readonly logs?: string[]) {\n    super('2506: A require_gte expression was violated');\n  }\n}\n\nexport class AccountDiscriminatorAlreadySet extends Error {\n  static readonly code = 3000;\n  readonly code = 3000;\n  readonly name = 'AccountDiscriminatorAlreadySet';\n  readonly msg = 'The account discriminator was already set on this account';\n\n  constructor(readonly logs?: string[]) {\n    super('3000: The account discriminator was already set on this account');\n  }\n}\n\nexport class AccountDiscriminatorNotFound extends Error {\n  static readonly code = 3001;\n  readonly code = 3001;\n  readonly name = 'AccountDiscriminatorNotFound';\n  readonly msg = 'No 8 byte discriminator was found on the account';\n\n  constructor(readonly logs?: string[]) {\n    super('3001: No 8 byte discriminator was found on the account');\n  }\n}\n\nexport class AccountDiscriminatorMismatch extends Error {\n  static readonly code = 3002;\n  readonly code = 3002;\n  readonly name = 'AccountDiscriminatorMismatch';\n  readonly msg = '8 byte discriminator did not match what was expected';\n\n  constructor(readonly logs?: string[]) {\n    super('3002: 8 byte discriminator did not match what was expected');\n  }\n}\n\nexport class AccountDidNotDeserialize extends Error {\n  static readonly code = 3003;\n  readonly code = 3003;\n  readonly name = 'AccountDidNotDeserialize';\n  readonly msg = 'Failed to deserialize the account';\n\n  constructor(readonly logs?: string[]) {\n    super('3003: Failed to deserialize the account');\n  }\n}\n\nexport class AccountDidNotSerialize extends Error {\n  static readonly code = 3004;\n  readonly code = 3004;\n  readonly name = 'AccountDidNotSerialize';\n  readonly msg = 'Failed to serialize the account';\n\n  constructor(readonly logs?: string[]) {\n    super('3004: Failed to serialize the account');\n  }\n}\n\nexport class AccountNotEnoughKeys extends Error {\n  static readonly code = 3005;\n  readonly code = 3005;\n  readonly name = 'AccountNotEnoughKeys';\n  readonly msg = 'Not enough account keys given to the instruction';\n\n  constructor(readonly logs?: string[]) {\n    super('3005: Not enough account keys given to the instruction');\n  }\n}\n\nexport class AccountNotMutable extends Error {\n  static readonly code = 3006;\n  readonly code = 3006;\n  readonly name = 'AccountNotMutable';\n  readonly msg = 'The given account is not mutable';\n\n  constructor(readonly logs?: string[]) {\n    super('3006: The given account is not mutable');\n  }\n}\n\nexport class AccountOwnedByWrongProgram extends Error {\n  static readonly code = 3007;\n  readonly code = 3007;\n  readonly name = 'AccountOwnedByWrongProgram';\n  readonly msg =\n    'The given account is owned by a different program than expected';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '3007: The given account is owned by a different program than expected'\n    );\n  }\n}\n\nexport class InvalidProgramId extends Error {\n  static readonly code = 3008;\n  readonly code = 3008;\n  readonly name = 'InvalidProgramId';\n  readonly msg = 'Program ID was not as expected';\n\n  constructor(readonly logs?: string[]) {\n    super('3008: Program ID was not as expected');\n  }\n}\n\nexport class InvalidProgramExecutable extends Error {\n  static readonly code = 3009;\n  readonly code = 3009;\n  readonly name = 'InvalidProgramExecutable';\n  readonly msg = 'Program account is not executable';\n\n  constructor(readonly logs?: string[]) {\n    super('3009: Program account is not executable');\n  }\n}\n\nexport class AccountNotSigner extends Error {\n  static readonly code = 3010;\n  readonly code = 3010;\n  readonly name = 'AccountNotSigner';\n  readonly msg = 'The given account did not sign';\n\n  constructor(readonly logs?: string[]) {\n    super('3010: The given account did not sign');\n  }\n}\n\nexport class AccountNotSystemOwned extends Error {\n  static readonly code = 3011;\n  readonly code = 3011;\n  readonly name = 'AccountNotSystemOwned';\n  readonly msg = 'The given account is not owned by the system program';\n\n  constructor(readonly logs?: string[]) {\n    super('3011: The given account is not owned by the system program');\n  }\n}\n\nexport class AccountNotInitialized extends Error {\n  static readonly code = 3012;\n  readonly code = 3012;\n  readonly name = 'AccountNotInitialized';\n  readonly msg = 'The program expected this account to be already initialized';\n\n  constructor(readonly logs?: string[]) {\n    super('3012: The program expected this account to be already initialized');\n  }\n}\n\nexport class AccountNotProgramData extends Error {\n  static readonly code = 3013;\n  readonly code = 3013;\n  readonly name = 'AccountNotProgramData';\n  readonly msg = 'The given account is not a program data account';\n\n  constructor(readonly logs?: string[]) {\n    super('3013: The given account is not a program data account');\n  }\n}\n\nexport class AccountNotAssociatedTokenAccount extends Error {\n  static readonly code = 3014;\n  readonly code = 3014;\n  readonly name = 'AccountNotAssociatedTokenAccount';\n  readonly msg = 'The given account is not the associated token account';\n\n  constructor(readonly logs?: string[]) {\n    super('3014: The given account is not the associated token account');\n  }\n}\n\nexport class AccountSysvarMismatch extends Error {\n  static readonly code = 3015;\n  readonly code = 3015;\n  readonly name = 'AccountSysvarMismatch';\n  readonly msg = 'The given public key does not match the required sysvar';\n\n  constructor(readonly logs?: string[]) {\n    super('3015: The given public key does not match the required sysvar');\n  }\n}\n\nexport class AccountReallocExceedsLimit extends Error {\n  static readonly code = 3016;\n  readonly code = 3016;\n  readonly name = 'AccountReallocExceedsLimit';\n  readonly msg =\n    'The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '3016: The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit'\n    );\n  }\n}\n\nexport class AccountDuplicateReallocs extends Error {\n  static readonly code = 3017;\n  readonly code = 3017;\n  readonly name = 'AccountDuplicateReallocs';\n  readonly msg = 'The account was duplicated for more than one reallocation';\n\n  constructor(readonly logs?: string[]) {\n    super('3017: The account was duplicated for more than one reallocation');\n  }\n}\n\nexport class StateInvalidAddress extends Error {\n  static readonly code = 4000;\n  readonly code = 4000;\n  readonly name = 'StateInvalidAddress';\n  readonly msg = 'The given state account does not have the correct address';\n\n  constructor(readonly logs?: string[]) {\n    super('4000: The given state account does not have the correct address');\n  }\n}\n\nexport class DeclaredProgramIdMismatch extends Error {\n  static readonly code = 4100;\n  readonly code = 4100;\n  readonly name = 'DeclaredProgramIdMismatch';\n  readonly msg = 'The declared program id does not match the actual program id';\n\n  constructor(readonly logs?: string[]) {\n    super('4100: The declared program id does not match the actual program id');\n  }\n}\n\nexport class Deprecated extends Error {\n  static readonly code = 5000;\n  readonly code = 5000;\n  readonly name = 'Deprecated';\n  readonly msg =\n    'The API being used is deprecated and should no longer be used';\n\n  constructor(readonly logs?: string[]) {\n    super(\n      '5000: The API being used is deprecated and should no longer be used'\n    );\n  }\n}\n\nexport function fromCode(code: number, logs?: string[]): AnchorError | null {\n  switch (code) {\n    case 100:\n      return new InstructionMissing(logs);\n    case 101:\n      return new InstructionFallbackNotFound(logs);\n    case 102:\n      return new InstructionDidNotDeserialize(logs);\n    case 103:\n      return new InstructionDidNotSerialize(logs);\n    case 1000:\n      return new IdlInstructionStub(logs);\n    case 1001:\n      return new IdlInstructionInvalidProgram(logs);\n    case 2000:\n      return new ConstraintMut(logs);\n    case 2001:\n      return new ConstraintHasOne(logs);\n    case 2002:\n      return new ConstraintSigner(logs);\n    case 2003:\n      return new ConstraintRaw(logs);\n    case 2004:\n      return new ConstraintOwner(logs);\n    case 2005:\n      return new ConstraintRentExempt(logs);\n    case 2006:\n      return new ConstraintSeeds(logs);\n    case 2007:\n      return new ConstraintExecutable(logs);\n    case 2008:\n      return new ConstraintState(logs);\n    case 2009:\n      return new ConstraintAssociated(logs);\n    case 2010:\n      return new ConstraintAssociatedInit(logs);\n    case 2011:\n      return new ConstraintClose(logs);\n    case 2012:\n      return new ConstraintAddress(logs);\n    case 2013:\n      return new ConstraintZero(logs);\n    case 2014:\n      return new ConstraintTokenMint(logs);\n    case 2015:\n      return new ConstraintTokenOwner(logs);\n    case 2016:\n      return new ConstraintMintMintAuthority(logs);\n    case 2017:\n      return new ConstraintMintFreezeAuthority(logs);\n    case 2018:\n      return new ConstraintMintDecimals(logs);\n    case 2019:\n      return new ConstraintSpace(logs);\n    case 2500:\n      return new RequireViolated(logs);\n    case 2501:\n      return new RequireEqViolated(logs);\n    case 2502:\n      return new RequireKeysEqViolated(logs);\n    case 2503:\n      return new RequireNeqViolated(logs);\n    case 2504:\n      return new RequireKeysNeqViolated(logs);\n    case 2505:\n      return new RequireGtViolated(logs);\n    case 2506:\n      return new RequireGteViolated(logs);\n    case 3000:\n      return new AccountDiscriminatorAlreadySet(logs);\n    case 3001:\n      return new AccountDiscriminatorNotFound(logs);\n    case 3002:\n      return new AccountDiscriminatorMismatch(logs);\n    case 3003:\n      return new AccountDidNotDeserialize(logs);\n    case 3004:\n      return new AccountDidNotSerialize(logs);\n    case 3005:\n      return new AccountNotEnoughKeys(logs);\n    case 3006:\n      return new AccountNotMutable(logs);\n    case 3007:\n      return new AccountOwnedByWrongProgram(logs);\n    case 3008:\n      return new InvalidProgramId(logs);\n    case 3009:\n      return new InvalidProgramExecutable(logs);\n    case 3010:\n      return new AccountNotSigner(logs);\n    case 3011:\n      return new AccountNotSystemOwned(logs);\n    case 3012:\n      return new AccountNotInitialized(logs);\n    case 3013:\n      return new AccountNotProgramData(logs);\n    case 3014:\n      return new AccountNotAssociatedTokenAccount(logs);\n    case 3015:\n      return new AccountSysvarMismatch(logs);\n    case 3016:\n      return new AccountReallocExceedsLimit(logs);\n    case 3017:\n      return new AccountDuplicateReallocs(logs);\n    case 4000:\n      return new StateInvalidAddress(logs);\n    case 4100:\n      return new DeclaredProgramIdMismatch(logs);\n    case 5000:\n      return new Deprecated(logs);\n  }\n\n  return null;\n}\n"]}