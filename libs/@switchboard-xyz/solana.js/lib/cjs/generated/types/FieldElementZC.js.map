{"version":3,"file":"FieldElementZC.js","sourceRoot":"","sources":["../../../../src/generated/types/FieldElementZC.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,oDAA6C,CAAC,wDAAwD;AAEtG,wDAA0C;AAU1C,MAAa,cAAc;IAGzB,YAAY,MAA4B;QACtC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,QAAiB;QAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACxE,CAAC;IAED,8DAA8D;IAC9D,MAAM,CAAC,WAAW,CAAC,GAAQ;QACzB,OAAO,IAAI,cAAc,CAAC;YACxB,KAAK,EAAE,GAAG,CAAC,KAAK;SACjB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,MAA4B;QAC7C,OAAO;YACL,KAAK,EAAE,MAAM,CAAC,KAAK;SACpB,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;SAC/C,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,GAAuB;QACrC,OAAO,IAAI,cAAc,CAAC;YACxB,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,WAAE,CAAC,IAAI,CAAC,CAAC;SAC3C,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;CACF;AAvCD,wCAuCC","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface FieldElementZCFields {\n  bytes: Array<BN>;\n}\n\nexport interface FieldElementZCJSON {\n  bytes: Array<string>;\n}\n\nexport class FieldElementZC {\n  readonly bytes: Array<BN>;\n\n  constructor(fields: FieldElementZCFields) {\n    this.bytes = fields.bytes;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct([borsh.array(borsh.u64(), 5, 'bytes')], property);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new FieldElementZC({\n      bytes: obj.bytes,\n    });\n  }\n\n  static toEncodable(fields: FieldElementZCFields) {\n    return {\n      bytes: fields.bytes,\n    };\n  }\n\n  toJSON(): FieldElementZCJSON {\n    return {\n      bytes: this.bytes.map(item => item.toString()),\n    };\n  }\n\n  static fromJSON(obj: FieldElementZCJSON): FieldElementZC {\n    return new FieldElementZC({\n      bytes: obj.bytes.map(item => new BN(item)),\n    });\n  }\n\n  toEncodable() {\n    return FieldElementZC.toEncodable(this);\n  }\n}\n"]}