{"version":3,"file":"Shuffle.js","sourceRoot":"","sources":["../../../../src/generated/types/Shuffle.ts"],"names":[],"mappings":"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","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface AAAAJSON {\n  kind: 'AAAA';\n}\n\nexport class AAAA {\n  static readonly discriminator = 0;\n  static readonly kind = 'AAAA';\n  readonly discriminator = 0;\n  readonly kind = 'AAAA';\n\n  toJSON(): AAAAJSON {\n    return {\n      kind: 'AAAA',\n    };\n  }\n\n  toEncodable() {\n    return {\n      AAAA: {},\n    };\n  }\n}\n\nexport interface BBBBJSON {\n  kind: 'BBBB';\n}\n\nexport class BBBB {\n  static readonly discriminator = 1;\n  static readonly kind = 'BBBB';\n  readonly discriminator = 1;\n  readonly kind = 'BBBB';\n\n  toJSON(): BBBBJSON {\n    return {\n      kind: 'BBBB',\n    };\n  }\n\n  toEncodable() {\n    return {\n      BBBB: {},\n    };\n  }\n}\n\nexport interface BADCJSON {\n  kind: 'BADC';\n}\n\nexport class BADC {\n  static readonly discriminator = 2;\n  static readonly kind = 'BADC';\n  readonly discriminator = 2;\n  readonly kind = 'BADC';\n\n  toJSON(): BADCJSON {\n    return {\n      kind: 'BADC',\n    };\n  }\n\n  toEncodable() {\n    return {\n      BADC: {},\n    };\n  }\n}\n\nexport interface BACDJSON {\n  kind: 'BACD';\n}\n\nexport class BACD {\n  static readonly discriminator = 3;\n  static readonly kind = 'BACD';\n  readonly discriminator = 3;\n  readonly kind = 'BACD';\n\n  toJSON(): BACDJSON {\n    return {\n      kind: 'BACD',\n    };\n  }\n\n  toEncodable() {\n    return {\n      BACD: {},\n    };\n  }\n}\n\nexport interface ADDAJSON {\n  kind: 'ADDA';\n}\n\nexport class ADDA {\n  static readonly discriminator = 4;\n  static readonly kind = 'ADDA';\n  readonly discriminator = 4;\n  readonly kind = 'ADDA';\n\n  toJSON(): ADDAJSON {\n    return {\n      kind: 'ADDA',\n    };\n  }\n\n  toEncodable() {\n    return {\n      ADDA: {},\n    };\n  }\n}\n\nexport interface CBCBJSON {\n  kind: 'CBCB';\n}\n\nexport class CBCB {\n  static readonly discriminator = 5;\n  static readonly kind = 'CBCB';\n  readonly discriminator = 5;\n  readonly kind = 'CBCB';\n\n  toJSON(): CBCBJSON {\n    return {\n      kind: 'CBCB',\n    };\n  }\n\n  toEncodable() {\n    return {\n      CBCB: {},\n    };\n  }\n}\n\nexport interface ABDCJSON {\n  kind: 'ABDC';\n}\n\nexport class ABDC {\n  static readonly discriminator = 6;\n  static readonly kind = 'ABDC';\n  readonly discriminator = 6;\n  readonly kind = 'ABDC';\n\n  toJSON(): ABDCJSON {\n    return {\n      kind: 'ABDC',\n    };\n  }\n\n  toEncodable() {\n    return {\n      ABDC: {},\n    };\n  }\n}\n\nexport interface ABABJSON {\n  kind: 'ABAB';\n}\n\nexport class ABAB {\n  static readonly discriminator = 7;\n  static readonly kind = 'ABAB';\n  readonly discriminator = 7;\n  readonly kind = 'ABAB';\n\n  toJSON(): ABABJSON {\n    return {\n      kind: 'ABAB',\n    };\n  }\n\n  toEncodable() {\n    return {\n      ABAB: {},\n    };\n  }\n}\n\nexport interface DBBDJSON {\n  kind: 'DBBD';\n}\n\nexport class DBBD {\n  static readonly discriminator = 8;\n  static readonly kind = 'DBBD';\n  readonly discriminator = 8;\n  readonly kind = 'DBBD';\n\n  toJSON(): DBBDJSON {\n    return {\n      kind: 'DBBD',\n    };\n  }\n\n  toEncodable() {\n    return {\n      DBBD: {},\n    };\n  }\n}\n\nexport interface CACAJSON {\n  kind: 'CACA';\n}\n\nexport class CACA {\n  static readonly discriminator = 9;\n  static readonly kind = 'CACA';\n  readonly discriminator = 9;\n  readonly kind = 'CACA';\n\n  toJSON(): CACAJSON {\n    return {\n      kind: 'CACA',\n    };\n  }\n\n  toEncodable() {\n    return {\n      CACA: {},\n    };\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function fromDecoded(obj: any): types.ShuffleKind {\n  if (typeof obj !== 'object') {\n    throw new Error('Invalid enum object');\n  }\n\n  if ('AAAA' in obj) {\n    return new AAAA();\n  }\n  if ('BBBB' in obj) {\n    return new BBBB();\n  }\n  if ('BADC' in obj) {\n    return new BADC();\n  }\n  if ('BACD' in obj) {\n    return new BACD();\n  }\n  if ('ADDA' in obj) {\n    return new ADDA();\n  }\n  if ('CBCB' in obj) {\n    return new CBCB();\n  }\n  if ('ABDC' in obj) {\n    return new ABDC();\n  }\n  if ('ABAB' in obj) {\n    return new ABAB();\n  }\n  if ('DBBD' in obj) {\n    return new DBBD();\n  }\n  if ('CACA' in obj) {\n    return new CACA();\n  }\n\n  throw new Error('Invalid enum object');\n}\n\nexport function fromJSON(obj: types.ShuffleJSON): types.ShuffleKind {\n  switch (obj.kind) {\n    case 'AAAA': {\n      return new AAAA();\n    }\n    case 'BBBB': {\n      return new BBBB();\n    }\n    case 'BADC': {\n      return new BADC();\n    }\n    case 'BACD': {\n      return new BACD();\n    }\n    case 'ADDA': {\n      return new ADDA();\n    }\n    case 'CBCB': {\n      return new CBCB();\n    }\n    case 'ABDC': {\n      return new ABDC();\n    }\n    case 'ABAB': {\n      return new ABAB();\n    }\n    case 'DBBD': {\n      return new DBBD();\n    }\n    case 'CACA': {\n      return new CACA();\n    }\n  }\n}\n\nexport function layout(property?: string) {\n  const ret = borsh.rustEnum([\n    borsh.struct([], 'AAAA'),\n    borsh.struct([], 'BBBB'),\n    borsh.struct([], 'BADC'),\n    borsh.struct([], 'BACD'),\n    borsh.struct([], 'ADDA'),\n    borsh.struct([], 'CBCB'),\n    borsh.struct([], 'ABDC'),\n    borsh.struct([], 'ABAB'),\n    borsh.struct([], 'DBBD'),\n    borsh.struct([], 'CACA'),\n  ]);\n  if (property !== undefined) {\n    return ret.replicate(property);\n  }\n  return ret;\n}\n"]}