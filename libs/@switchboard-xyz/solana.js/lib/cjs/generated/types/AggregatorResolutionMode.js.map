{"version":3,"file":"AggregatorResolutionMode.js","sourceRoot":"","sources":["../../../../src/generated/types/AggregatorResolutionMode.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,wDAA0C;AAM1C,MAAa,mBAAmB;IAAhC;QAGW,kBAAa,GAAG,CAAC,CAAC;QAClB,SAAI,GAAG,qBAAqB,CAAC;IAaxC,CAAC;IAXC,MAAM;QACJ,OAAO;YACL,IAAI,EAAE,qBAAqB;SAC5B,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO;YACL,mBAAmB,EAAE,EAAE;SACxB,CAAC;IACJ,CAAC;;AAhBH,kDAiBC;AAhBiB,iCAAa,GAAG,CAAC,CAAC;AAClB,wBAAI,GAAG,qBAAqB,CAAC;AAqB/C,MAAa,qBAAqB;IAAlC;QAGW,kBAAa,GAAG,CAAC,CAAC;QAClB,SAAI,GAAG,uBAAuB,CAAC;IAa1C,CAAC;IAXC,MAAM;QACJ,OAAO;YACL,IAAI,EAAE,uBAAuB;SAC9B,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO;YACL,qBAAqB,EAAE,EAAE;SAC1B,CAAC;IACJ,CAAC;;AAhBH,sDAiBC;AAhBiB,mCAAa,GAAG,CAAC,CAAC;AAClB,0BAAI,GAAG,uBAAuB,CAAC;AAiBjD,8DAA8D;AAC9D,SAAgB,WAAW,CAAC,GAAQ;IAClC,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;KACxC;IAED,IAAI,qBAAqB,IAAI,GAAG,EAAE;QAChC,OAAO,IAAI,mBAAmB,EAAE,CAAC;KAClC;IACD,IAAI,uBAAuB,IAAI,GAAG,EAAE;QAClC,OAAO,IAAI,qBAAqB,EAAE,CAAC;KACpC;IAED,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AACzC,CAAC;AAbD,kCAaC;AAED,SAAgB,QAAQ,CACtB,GAAuC;IAEvC,QAAQ,GAAG,CAAC,IAAI,EAAE;QAChB,KAAK,qBAAqB,CAAC,CAAC;YAC1B,OAAO,IAAI,mBAAmB,EAAE,CAAC;SAClC;QACD,KAAK,uBAAuB,CAAC,CAAC;YAC5B,OAAO,IAAI,qBAAqB,EAAE,CAAC;SACpC;KACF;AACH,CAAC;AAXD,4BAWC;AAED,SAAgB,MAAM,CAAC,QAAiB;IACtC,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC;QACzB,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,qBAAqB,CAAC;QACvC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,uBAAuB,CAAC;KAC1C,CAAC,CAAC;IACH,IAAI,QAAQ,KAAK,SAAS,EAAE;QAC1B,OAAO,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;KAChC;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AATD,wBASC","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface ModeRoundResolutionJSON {\n  kind: 'ModeRoundResolution';\n}\n\nexport class ModeRoundResolution {\n  static readonly discriminator = 0;\n  static readonly kind = 'ModeRoundResolution';\n  readonly discriminator = 0;\n  readonly kind = 'ModeRoundResolution';\n\n  toJSON(): ModeRoundResolutionJSON {\n    return {\n      kind: 'ModeRoundResolution',\n    };\n  }\n\n  toEncodable() {\n    return {\n      ModeRoundResolution: {},\n    };\n  }\n}\n\nexport interface ModeSlidingResolutionJSON {\n  kind: 'ModeSlidingResolution';\n}\n\nexport class ModeSlidingResolution {\n  static readonly discriminator = 1;\n  static readonly kind = 'ModeSlidingResolution';\n  readonly discriminator = 1;\n  readonly kind = 'ModeSlidingResolution';\n\n  toJSON(): ModeSlidingResolutionJSON {\n    return {\n      kind: 'ModeSlidingResolution',\n    };\n  }\n\n  toEncodable() {\n    return {\n      ModeSlidingResolution: {},\n    };\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function fromDecoded(obj: any): types.AggregatorResolutionModeKind {\n  if (typeof obj !== 'object') {\n    throw new Error('Invalid enum object');\n  }\n\n  if ('ModeRoundResolution' in obj) {\n    return new ModeRoundResolution();\n  }\n  if ('ModeSlidingResolution' in obj) {\n    return new ModeSlidingResolution();\n  }\n\n  throw new Error('Invalid enum object');\n}\n\nexport function fromJSON(\n  obj: types.AggregatorResolutionModeJSON\n): types.AggregatorResolutionModeKind {\n  switch (obj.kind) {\n    case 'ModeRoundResolution': {\n      return new ModeRoundResolution();\n    }\n    case 'ModeSlidingResolution': {\n      return new ModeSlidingResolution();\n    }\n  }\n}\n\nexport function layout(property?: string) {\n  const ret = borsh.rustEnum([\n    borsh.struct([], 'ModeRoundResolution'),\n    borsh.struct([], 'ModeSlidingResolution'),\n  ]);\n  if (property !== undefined) {\n    return ret.replicate(property);\n  }\n  return ret;\n}\n"]}