{"version":3,"file":"Hash.js","sourceRoot":"","sources":["../../../../src/generated/types/Hash.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,wDAA0C;AAY1C,MAAa,IAAI;IAIf,YAAY,MAAkB;QAC5B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IAC1B,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,QAAiB;QAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACvE,CAAC;IAED,8DAA8D;IAC9D,MAAM,CAAC,WAAW,CAAC,GAAQ;QACzB,OAAO,IAAI,IAAI,CAAC;YACd,IAAI,EAAE,GAAG,CAAC,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,MAAkB;QACnC,OAAO;YACL,IAAI,EAAE,MAAM,CAAC,IAAI;SAClB,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,GAAa;QAC3B,OAAO,IAAI,IAAI,CAAC;YACd,IAAI,EAAE,GAAG,CAAC,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;CACF;AAxCD,oBAwCC","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface HashFields {\n  /** The bytes used to derive the hash. */\n  data: Array<number>;\n}\n\nexport interface HashJSON {\n  /** The bytes used to derive the hash. */\n  data: Array<number>;\n}\n\nexport class Hash {\n  /** The bytes used to derive the hash. */\n  readonly data: Array<number>;\n\n  constructor(fields: HashFields) {\n    this.data = fields.data;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct([borsh.array(borsh.u8(), 32, 'data')], property);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new Hash({\n      data: obj.data,\n    });\n  }\n\n  static toEncodable(fields: HashFields) {\n    return {\n      data: fields.data,\n    };\n  }\n\n  toJSON(): HashJSON {\n    return {\n      data: this.data,\n    };\n  }\n\n  static fromJSON(obj: HashJSON): Hash {\n    return new Hash({\n      data: obj.data,\n    });\n  }\n\n  toEncodable() {\n    return Hash.toEncodable(this);\n  }\n}\n"]}