{"version":3,"file":"AggregatorSetHistoryBufferParams.js","sourceRoot":"","sources":["../../../../src/generated/types/AggregatorSetHistoryBufferParams.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,wDAA0C;AAM1C,MAAa,gCAAgC;IAC3C,YAAY,MAA8C,IAAG,CAAC;IAE9D,MAAM,CAAC,MAAM,CAAC,QAAiB;QAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IACpC,CAAC;IAED,8DAA8D;IAC9D,MAAM,CAAC,WAAW,CAAC,GAAQ;QACzB,OAAO,IAAI,gCAAgC,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,MAA8C;QAC/D,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,MAAM;QACJ,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,MAAM,CAAC,QAAQ,CACb,GAAyC;QAEzC,OAAO,IAAI,gCAAgC,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,WAAW;QACT,OAAO,gCAAgC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC5D,CAAC;CACF;AA7BD,4EA6BC","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface AggregatorSetHistoryBufferParamsFields {}\n\nexport interface AggregatorSetHistoryBufferParamsJSON {}\n\nexport class AggregatorSetHistoryBufferParams {\n  constructor(fields: AggregatorSetHistoryBufferParamsFields) {}\n\n  static layout(property?: string) {\n    return borsh.struct([], property);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new AggregatorSetHistoryBufferParams({});\n  }\n\n  static toEncodable(fields: AggregatorSetHistoryBufferParamsFields) {\n    return {};\n  }\n\n  toJSON(): AggregatorSetHistoryBufferParamsJSON {\n    return {};\n  }\n\n  static fromJSON(\n    obj: AggregatorSetHistoryBufferParamsJSON\n  ): AggregatorSetHistoryBufferParams {\n    return new AggregatorSetHistoryBufferParams({});\n  }\n\n  toEncodable() {\n    return AggregatorSetHistoryBufferParams.toEncodable(this);\n  }\n}\n"]}