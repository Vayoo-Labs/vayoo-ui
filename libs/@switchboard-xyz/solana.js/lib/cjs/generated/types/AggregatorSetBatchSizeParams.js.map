{"version":3,"file":"AggregatorSetBatchSizeParams.js","sourceRoot":"","sources":["../../../../src/generated/types/AggregatorSetBatchSizeParams.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,wDAA0C;AAU1C,MAAa,4BAA4B;IAGvC,YAAY,MAA0C;QACpD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;IACpC,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,QAAiB;QAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC1D,CAAC;IAED,8DAA8D;IAC9D,MAAM,CAAC,WAAW,CAAC,GAAQ;QACzB,OAAO,IAAI,4BAA4B,CAAC;YACtC,SAAS,EAAE,GAAG,CAAC,SAAS;SACzB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,MAA0C;QAC3D,OAAO;YACL,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO;YACL,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CACb,GAAqC;QAErC,OAAO,IAAI,4BAA4B,CAAC;YACtC,SAAS,EAAE,GAAG,CAAC,SAAS;SACzB,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,4BAA4B,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACxD,CAAC;CACF;AAzCD,oEAyCC","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface AggregatorSetBatchSizeParamsFields {\n  batchSize: number;\n}\n\nexport interface AggregatorSetBatchSizeParamsJSON {\n  batchSize: number;\n}\n\nexport class AggregatorSetBatchSizeParams {\n  readonly batchSize: number;\n\n  constructor(fields: AggregatorSetBatchSizeParamsFields) {\n    this.batchSize = fields.batchSize;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct([borsh.u32('batchSize')], property);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new AggregatorSetBatchSizeParams({\n      batchSize: obj.batchSize,\n    });\n  }\n\n  static toEncodable(fields: AggregatorSetBatchSizeParamsFields) {\n    return {\n      batchSize: fields.batchSize,\n    };\n  }\n\n  toJSON(): AggregatorSetBatchSizeParamsJSON {\n    return {\n      batchSize: this.batchSize,\n    };\n  }\n\n  static fromJSON(\n    obj: AggregatorSetBatchSizeParamsJSON\n  ): AggregatorSetBatchSizeParams {\n    return new AggregatorSetBatchSizeParams({\n      batchSize: obj.batchSize,\n    });\n  }\n\n  toEncodable() {\n    return AggregatorSetBatchSizeParams.toEncodable(this);\n  }\n}\n"]}