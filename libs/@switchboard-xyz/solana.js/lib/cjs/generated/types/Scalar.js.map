{"version":3,"file":"Scalar.js","sourceRoot":"","sources":["../../../../src/generated/types/Scalar.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,wDAA0C;AAgC1C;;;GAGG;AACH,MAAa,MAAM;IAcjB,YAAY,MAAoB;QAC9B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,QAAiB;QAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACxE,CAAC;IAED,8DAA8D;IAC9D,MAAM,CAAC,WAAW,CAAC,GAAQ;QACzB,OAAO,IAAI,MAAM,CAAC;YAChB,KAAK,EAAE,GAAG,CAAC,KAAK;SACjB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,MAAoB;QACrC,OAAO;YACL,KAAK,EAAE,MAAM,CAAC,KAAK;SACpB,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,GAAe;QAC7B,OAAO,IAAI,MAAM,CAAC;YAChB,KAAK,EAAE,GAAG,CAAC,KAAK;SACjB,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;CACF;AAlDD,wBAkDC","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface ScalarFields {\n  /**\n   * `bytes` is a little-endian byte encoding of an integer representing a scalar modulo the\n   * group order.\n   *\n   * # Invariant\n   *\n   * The integer representing this scalar must be bounded above by \\\\(2\\^{255}\\\\), or\n   * equivalently the high bit of `bytes[31]` must be zero.\n   *\n   * This ensures that there is room for a carry bit when computing a NAF representation.\n   */\n  bytes: Array<number>;\n}\n\nexport interface ScalarJSON {\n  /**\n   * `bytes` is a little-endian byte encoding of an integer representing a scalar modulo the\n   * group order.\n   *\n   * # Invariant\n   *\n   * The integer representing this scalar must be bounded above by \\\\(2\\^{255}\\\\), or\n   * equivalently the high bit of `bytes[31]` must be zero.\n   *\n   * This ensures that there is room for a carry bit when computing a NAF representation.\n   */\n  bytes: Array<number>;\n}\n\n/**\n * The `Scalar` struct holds an integer \\\\(s < 2\\^{255} \\\\) which\n * represents an element of \\\\(\\mathbb Z / \\ell\\\\).\n */\nexport class Scalar {\n  /**\n   * `bytes` is a little-endian byte encoding of an integer representing a scalar modulo the\n   * group order.\n   *\n   * # Invariant\n   *\n   * The integer representing this scalar must be bounded above by \\\\(2\\^{255}\\\\), or\n   * equivalently the high bit of `bytes[31]` must be zero.\n   *\n   * This ensures that there is room for a carry bit when computing a NAF representation.\n   */\n  readonly bytes: Array<number>;\n\n  constructor(fields: ScalarFields) {\n    this.bytes = fields.bytes;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct([borsh.array(borsh.u8(), 32, 'bytes')], property);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new Scalar({\n      bytes: obj.bytes,\n    });\n  }\n\n  static toEncodable(fields: ScalarFields) {\n    return {\n      bytes: fields.bytes,\n    };\n  }\n\n  toJSON(): ScalarJSON {\n    return {\n      bytes: this.bytes,\n    };\n  }\n\n  static fromJSON(obj: ScalarJSON): Scalar {\n    return new Scalar({\n      bytes: obj.bytes,\n    });\n  }\n\n  toEncodable() {\n    return Scalar.toEncodable(this);\n  }\n}\n"]}