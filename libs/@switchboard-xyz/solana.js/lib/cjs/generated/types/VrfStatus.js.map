{"version":3,"file":"VrfStatus.js","sourceRoot":"","sources":["../../../../src/generated/types/VrfStatus.ts"],"names":[],"mappings":"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","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface StatusNoneJSON {\n  kind: 'StatusNone';\n}\n\nexport class StatusNone {\n  static readonly discriminator = 0;\n  static readonly kind = 'StatusNone';\n  readonly discriminator = 0;\n  readonly kind = 'StatusNone';\n\n  toJSON(): StatusNoneJSON {\n    return {\n      kind: 'StatusNone',\n    };\n  }\n\n  toEncodable() {\n    return {\n      StatusNone: {},\n    };\n  }\n}\n\nexport interface StatusRequestingJSON {\n  kind: 'StatusRequesting';\n}\n\nexport class StatusRequesting {\n  static readonly discriminator = 1;\n  static readonly kind = 'StatusRequesting';\n  readonly discriminator = 1;\n  readonly kind = 'StatusRequesting';\n\n  toJSON(): StatusRequestingJSON {\n    return {\n      kind: 'StatusRequesting',\n    };\n  }\n\n  toEncodable() {\n    return {\n      StatusRequesting: {},\n    };\n  }\n}\n\nexport interface StatusVerifyingJSON {\n  kind: 'StatusVerifying';\n}\n\nexport class StatusVerifying {\n  static readonly discriminator = 2;\n  static readonly kind = 'StatusVerifying';\n  readonly discriminator = 2;\n  readonly kind = 'StatusVerifying';\n\n  toJSON(): StatusVerifyingJSON {\n    return {\n      kind: 'StatusVerifying',\n    };\n  }\n\n  toEncodable() {\n    return {\n      StatusVerifying: {},\n    };\n  }\n}\n\nexport interface StatusVerifiedJSON {\n  kind: 'StatusVerified';\n}\n\nexport class StatusVerified {\n  static readonly discriminator = 3;\n  static readonly kind = 'StatusVerified';\n  readonly discriminator = 3;\n  readonly kind = 'StatusVerified';\n\n  toJSON(): StatusVerifiedJSON {\n    return {\n      kind: 'StatusVerified',\n    };\n  }\n\n  toEncodable() {\n    return {\n      StatusVerified: {},\n    };\n  }\n}\n\nexport interface StatusCallbackSuccessJSON {\n  kind: 'StatusCallbackSuccess';\n}\n\nexport class StatusCallbackSuccess {\n  static readonly discriminator = 4;\n  static readonly kind = 'StatusCallbackSuccess';\n  readonly discriminator = 4;\n  readonly kind = 'StatusCallbackSuccess';\n\n  toJSON(): StatusCallbackSuccessJSON {\n    return {\n      kind: 'StatusCallbackSuccess',\n    };\n  }\n\n  toEncodable() {\n    return {\n      StatusCallbackSuccess: {},\n    };\n  }\n}\n\nexport interface StatusVerifyFailureJSON {\n  kind: 'StatusVerifyFailure';\n}\n\nexport class StatusVerifyFailure {\n  static readonly discriminator = 5;\n  static readonly kind = 'StatusVerifyFailure';\n  readonly discriminator = 5;\n  readonly kind = 'StatusVerifyFailure';\n\n  toJSON(): StatusVerifyFailureJSON {\n    return {\n      kind: 'StatusVerifyFailure',\n    };\n  }\n\n  toEncodable() {\n    return {\n      StatusVerifyFailure: {},\n    };\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function fromDecoded(obj: any): types.VrfStatusKind {\n  if (typeof obj !== 'object') {\n    throw new Error('Invalid enum object');\n  }\n\n  if ('StatusNone' in obj) {\n    return new StatusNone();\n  }\n  if ('StatusRequesting' in obj) {\n    return new StatusRequesting();\n  }\n  if ('StatusVerifying' in obj) {\n    return new StatusVerifying();\n  }\n  if ('StatusVerified' in obj) {\n    return new StatusVerified();\n  }\n  if ('StatusCallbackSuccess' in obj) {\n    return new StatusCallbackSuccess();\n  }\n  if ('StatusVerifyFailure' in obj) {\n    return new StatusVerifyFailure();\n  }\n\n  throw new Error('Invalid enum object');\n}\n\nexport function fromJSON(obj: types.VrfStatusJSON): types.VrfStatusKind {\n  switch (obj.kind) {\n    case 'StatusNone': {\n      return new StatusNone();\n    }\n    case 'StatusRequesting': {\n      return new StatusRequesting();\n    }\n    case 'StatusVerifying': {\n      return new StatusVerifying();\n    }\n    case 'StatusVerified': {\n      return new StatusVerified();\n    }\n    case 'StatusCallbackSuccess': {\n      return new StatusCallbackSuccess();\n    }\n    case 'StatusVerifyFailure': {\n      return new StatusVerifyFailure();\n    }\n  }\n}\n\nexport function layout(property?: string) {\n  const ret = borsh.rustEnum([\n    borsh.struct([], 'StatusNone'),\n    borsh.struct([], 'StatusRequesting'),\n    borsh.struct([], 'StatusVerifying'),\n    borsh.struct([], 'StatusVerified'),\n    borsh.struct([], 'StatusCallbackSuccess'),\n    borsh.struct([], 'StatusVerifyFailure'),\n  ]);\n  if (property !== undefined) {\n    return ret.replicate(property);\n  }\n  return ret;\n}\n"]}