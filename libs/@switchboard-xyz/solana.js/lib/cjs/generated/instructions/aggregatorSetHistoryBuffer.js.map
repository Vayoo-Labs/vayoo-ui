{"version":3,"file":"aggregatorSetHistoryBuffer.js","sourceRoot":"","sources":["../../../../src/generated/instructions/aggregatorSetHistoryBuffer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,6CAIyB,CAAC,wDAAwD;AAElF,wDAA0C,CAAC,wDAAwD;AACnG,gDAAkC,CAAC,wDAAwD;AAY9E,QAAA,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IACjC,KAAK,CAAC,gCAAgC,CAAC,MAAM,CAAC,QAAQ,CAAC;CACxD,CAAC,CAAC;AAEH,SAAgB,0BAA0B,CACxC,OAA2B,EAC3B,IAAoC,EACpC,QAA4C;IAE5C,MAAM,IAAI,GAAuB;QAC/B,EAAE,MAAM,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE;QAClE,EAAE,MAAM,EAAE,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;QACjE,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE;KAC/D,CAAC;IACF,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IACrE,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAClC,MAAM,GAAG,GAAG,cAAM,CAAC,MAAM,CACvB;QACE,MAAM,EAAE,KAAK,CAAC,gCAAgC,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;KACxE,EACD,MAAM,CACP,CAAC;IACF,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;IACnE,MAAM,EAAE,GAAG,IAAI,gCAAsB,CAAC;QACpC,IAAI;QACJ,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,IAAI;KACL,CAAC,CAAC;IACH,OAAO,EAAE,CAAC;AACZ,CAAC;AAzBD,gEAyBC","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport {\n  TransactionInstruction,\n  PublicKey,\n  AccountMeta,\n} from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport interface AggregatorSetHistoryBufferArgs {\n  params: types.AggregatorSetHistoryBufferParamsFields;\n}\n\nexport interface AggregatorSetHistoryBufferAccounts {\n  aggregator: PublicKey;\n  authority: PublicKey;\n  buffer: PublicKey;\n}\n\nexport const layout = borsh.struct([\n  types.AggregatorSetHistoryBufferParams.layout('params'),\n]);\n\nexport function aggregatorSetHistoryBuffer(\n  program: SwitchboardProgram,\n  args: AggregatorSetHistoryBufferArgs,\n  accounts: AggregatorSetHistoryBufferAccounts\n) {\n  const keys: Array<AccountMeta> = [\n    { pubkey: accounts.aggregator, isSigner: false, isWritable: true },\n    { pubkey: accounts.authority, isSigner: true, isWritable: false },\n    { pubkey: accounts.buffer, isSigner: false, isWritable: true },\n  ];\n  const identifier = Buffer.from([88, 49, 214, 242, 229, 44, 171, 52]);\n  const buffer = Buffer.alloc(1000);\n  const len = layout.encode(\n    {\n      params: types.AggregatorSetHistoryBufferParams.toEncodable(args.params),\n    },\n    buffer\n  );\n  const data = Buffer.concat([identifier, buffer]).slice(0, 8 + len);\n  const ix = new TransactionInstruction({\n    keys,\n    programId: program.programId,\n    data,\n  });\n  return ix;\n}\n"]}