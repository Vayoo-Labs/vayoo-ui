{"version":3,"file":"leaseWithdraw.js","sourceRoot":"","sources":["../../../../src/generated/instructions/leaseWithdraw.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,6CAIyB,CAAC,wDAAwD;AAElF,wDAA0C,CAAC,wDAAwD;AACnG,gDAAkC,CAAC,wDAAwD;AAkB9E,QAAA,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IACjC,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC;CAC3C,CAAC,CAAC;AAEH,SAAgB,aAAa,CAC3B,OAA2B,EAC3B,IAAuB,EACvB,QAA+B;IAE/B,MAAM,IAAI,GAAuB;QAC/B,EAAE,MAAM,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE;QAC7D,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE;QAC9D,EAAE,MAAM,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;QACnE,EAAE,MAAM,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;QAC9D,EAAE,MAAM,EAAE,QAAQ,CAAC,iBAAiB,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;QACzE,EAAE,MAAM,EAAE,QAAQ,CAAC,eAAe,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE;QACvE,EAAE,MAAM,EAAE,QAAQ,CAAC,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;QACrE,EAAE,MAAM,EAAE,QAAQ,CAAC,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;QACrE,EAAE,MAAM,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;KAC9D,CAAC;IACF,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IACtE,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAClC,MAAM,GAAG,GAAG,cAAM,CAAC,MAAM,CACvB;QACE,MAAM,EAAE,KAAK,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;KAC3D,EACD,MAAM,CACP,CAAC;IACF,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;IACnE,MAAM,EAAE,GAAG,IAAI,gCAAsB,CAAC;QACpC,IAAI;QACJ,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,IAAI;KACL,CAAC,CAAC;IACH,OAAO,EAAE,CAAC;AACZ,CAAC;AA/BD,sCA+BC","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport {\n  TransactionInstruction,\n  PublicKey,\n  AccountMeta,\n} from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport interface LeaseWithdrawArgs {\n  params: types.LeaseWithdrawParamsFields;\n}\n\nexport interface LeaseWithdrawAccounts {\n  lease: PublicKey;\n  escrow: PublicKey;\n  aggregator: PublicKey;\n  queue: PublicKey;\n  withdrawAuthority: PublicKey;\n  withdrawAccount: PublicKey;\n  tokenProgram: PublicKey;\n  programState: PublicKey;\n  mint: PublicKey;\n}\n\nexport const layout = borsh.struct([\n  types.LeaseWithdrawParams.layout('params'),\n]);\n\nexport function leaseWithdraw(\n  program: SwitchboardProgram,\n  args: LeaseWithdrawArgs,\n  accounts: LeaseWithdrawAccounts\n) {\n  const keys: Array<AccountMeta> = [\n    { pubkey: accounts.lease, isSigner: false, isWritable: true },\n    { pubkey: accounts.escrow, isSigner: false, isWritable: true },\n    { pubkey: accounts.aggregator, isSigner: false, isWritable: false },\n    { pubkey: accounts.queue, isSigner: false, isWritable: false },\n    { pubkey: accounts.withdrawAuthority, isSigner: true, isWritable: false },\n    { pubkey: accounts.withdrawAccount, isSigner: false, isWritable: true },\n    { pubkey: accounts.tokenProgram, isSigner: false, isWritable: false },\n    { pubkey: accounts.programState, isSigner: false, isWritable: false },\n    { pubkey: accounts.mint, isSigner: false, isWritable: false },\n  ];\n  const identifier = Buffer.from([186, 41, 100, 248, 234, 81, 61, 169]);\n  const buffer = Buffer.alloc(1000);\n  const len = layout.encode(\n    {\n      params: types.LeaseWithdrawParams.toEncodable(args.params),\n    },\n    buffer\n  );\n  const data = Buffer.concat([identifier, buffer]).slice(0, 8 + len);\n  const ix = new TransactionInstruction({\n    keys,\n    programId: program.programId,\n    data,\n  });\n  return ix;\n}\n"]}