{"version":3,"file":"oracleInit.js","sourceRoot":"","sources":["../../../../src/generated/instructions/oracleInit.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,6CAIyB,CAAC,wDAAwD;AAElF,wDAA0C,CAAC,wDAAwD;AACnG,gDAAkC,CAAC,wDAAwD;AAgB9E,QAAA,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAE9E,SAAgB,UAAU,CACxB,OAA2B,EAC3B,IAAoB,EACpB,QAA4B;IAE5B,MAAM,IAAI,GAAuB;QAC/B,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE;QAC9D,EAAE,MAAM,EAAE,QAAQ,CAAC,eAAe,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;QACxE,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;QAC/D,EAAE,MAAM,EAAE,QAAQ,CAAC,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;QACrE,EAAE,MAAM,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;QAC9D,EAAE,MAAM,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;QAC5D,EAAE,MAAM,EAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;KACvE,CAAC;IACF,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IACpE,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAClC,MAAM,GAAG,GAAG,cAAM,CAAC,MAAM,CACvB;QACE,MAAM,EAAE,KAAK,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;KACxD,EACD,MAAM,CACP,CAAC;IACF,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;IACnE,MAAM,EAAE,GAAG,IAAI,gCAAsB,CAAC;QACpC,IAAI;QACJ,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,IAAI;KACL,CAAC,CAAC;IACH,OAAO,EAAE,CAAC;AACZ,CAAC;AA7BD,gCA6BC","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport {\n  TransactionInstruction,\n  PublicKey,\n  AccountMeta,\n} from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport interface OracleInitArgs {\n  params: types.OracleInitParamsFields;\n}\n\nexport interface OracleInitAccounts {\n  oracle: PublicKey;\n  oracleAuthority: PublicKey;\n  wallet: PublicKey;\n  programState: PublicKey;\n  queue: PublicKey;\n  payer: PublicKey;\n  systemProgram: PublicKey;\n}\n\nexport const layout = borsh.struct([types.OracleInitParams.layout('params')]);\n\nexport function oracleInit(\n  program: SwitchboardProgram,\n  args: OracleInitArgs,\n  accounts: OracleInitAccounts\n) {\n  const keys: Array<AccountMeta> = [\n    { pubkey: accounts.oracle, isSigner: false, isWritable: true },\n    { pubkey: accounts.oracleAuthority, isSigner: false, isWritable: false },\n    { pubkey: accounts.wallet, isSigner: false, isWritable: false },\n    { pubkey: accounts.programState, isSigner: false, isWritable: false },\n    { pubkey: accounts.queue, isSigner: false, isWritable: false },\n    { pubkey: accounts.payer, isSigner: true, isWritable: true },\n    { pubkey: accounts.systemProgram, isSigner: false, isWritable: false },\n  ];\n  const identifier = Buffer.from([21, 158, 66, 65, 60, 221, 148, 61]);\n  const buffer = Buffer.alloc(1000);\n  const len = layout.encode(\n    {\n      params: types.OracleInitParams.toEncodable(args.params),\n    },\n    buffer\n  );\n  const data = Buffer.concat([identifier, buffer]).slice(0, 8 + len);\n  const ix = new TransactionInstruction({\n    keys,\n    programId: program.programId,\n    data,\n  });\n  return ix;\n}\n"]}