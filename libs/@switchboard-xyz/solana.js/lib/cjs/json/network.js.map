{"version":3,"file":"network.js","sourceRoot":"","sources":["../../../src/json/network.ts"],"names":[],"mappings":";;;AAAA,6CAA8C;AAC9C,mCAAoC;AACpC,qCAAsC;AACtC,mCAAoC;AACpC,+BAAgC;AAEhC,MAAa,WAAW;IAStB,YAAY,MAA2B;QACrC,IAAI,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ,EAAE;YAC5D,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SACxD;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,iBAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEzC,YAAY;QACZ,IAAI,CAAC,MAAM,GAAG,iBAAS,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,mBAAU,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,2BAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,GAAG,aAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM;QACJ,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC1B,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YAChD,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YACpD,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YACpE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;SACzC,CAAC;IACJ,CAAC;CACF;AAhCD,kCAgCC","sourcesContent":["import { AggregatorJson } from './aggregator';\nimport { CrankJson } from './crank';\nimport { OracleJson } from './oracle';\nimport { QueueJson } from './queue';\nimport { VrfJson } from './vrf';\n\nexport class NetworkJSON {\n  queue: QueueJson;\n\n  // resources\n  cranks: Array<CrankJson>;\n  oracles: Array<OracleJson>;\n  aggregators: Array<AggregatorJson>;\n  vrfs: Array<VrfJson>;\n\n  constructor(object: Record<string, any>) {\n    if (!('queue' in object) && typeof object.queue === 'object') {\n      throw new Error(`NetworkJson is missing queue object`);\n    }\n\n    this.queue = new QueueJson(object.queue);\n\n    // resources\n    this.cranks = CrankJson.loadMultiple(object);\n    this.oracles = OracleJson.loadMultiple(object);\n    this.aggregators = AggregatorJson.loadMultiple(object);\n    this.vrfs = VrfJson.loadMultiple(object);\n  }\n\n  toJSON() {\n    return {\n      queue: this.queue.toJSON(),\n      cranks: this.cranks.map(crank => crank.toJSON()),\n      oracles: this.oracles.map(oracle => oracle.toJSON()),\n      aggregators: this.aggregators.map(aggregator => aggregator.toJSON()),\n      vrfs: this.vrfs.map(vrf => vrf.toJSON()),\n    };\n  }\n}\n"]}