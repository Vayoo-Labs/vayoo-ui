{"version":3,"file":"Callback.js","sourceRoot":"","sources":["../../../../src/generated/types/Callback.ts"],"names":[],"mappings":"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","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface CallbackFields {\n  programId: PublicKey;\n  accounts: Array<types.AccountMetaBorshFields>;\n  ixData: Uint8Array;\n}\n\nexport interface CallbackJSON {\n  programId: string;\n  accounts: Array<types.AccountMetaBorshJSON>;\n  ixData: Array<number>;\n}\n\nexport class Callback {\n  readonly programId: PublicKey;\n  readonly accounts: Array<types.AccountMetaBorsh>;\n  readonly ixData: Uint8Array;\n\n  constructor(fields: CallbackFields) {\n    this.programId = fields.programId;\n    this.accounts = fields.accounts.map(\n      item => new types.AccountMetaBorsh({ ...item })\n    );\n    this.ixData = fields.ixData;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct(\n      [\n        borsh.publicKey('programId'),\n        borsh.vec(types.AccountMetaBorsh.layout(), 'accounts'),\n        borsh.vecU8('ixData'),\n      ],\n      property\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new Callback({\n      programId: obj.programId,\n      accounts: obj.accounts.map(\n        (\n          item: any /* eslint-disable-line @typescript-eslint/no-explicit-any */\n        ) => types.AccountMetaBorsh.fromDecoded(item)\n      ),\n      ixData: new Uint8Array(\n        obj.ixData.buffer,\n        obj.ixData.byteOffset,\n        obj.ixData.length\n      ),\n    });\n  }\n\n  static toEncodable(fields: CallbackFields) {\n    return {\n      programId: fields.programId,\n      accounts: fields.accounts.map(item =>\n        types.AccountMetaBorsh.toEncodable(item)\n      ),\n      ixData: Buffer.from(\n        fields.ixData.buffer,\n        fields.ixData.byteOffset,\n        fields.ixData.length\n      ),\n    };\n  }\n\n  toJSON(): CallbackJSON {\n    return {\n      programId: this.programId.toString(),\n      accounts: this.accounts.map(item => item.toJSON()),\n      ixData: Array.from(this.ixData.values()),\n    };\n  }\n\n  static fromJSON(obj: CallbackJSON): Callback {\n    return new Callback({\n      programId: new PublicKey(obj.programId),\n      accounts: obj.accounts.map(item => types.AccountMetaBorsh.fromJSON(item)),\n      ixData: Uint8Array.from(obj.ixData),\n    });\n  }\n\n  toEncodable() {\n    return Callback.toEncodable(this);\n  }\n}\n"]}