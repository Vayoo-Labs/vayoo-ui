{"version":3,"file":"OracleResponseType.js","sourceRoot":"","sources":["../../../../src/generated/types/OracleResponseType.ts"],"names":[],"mappings":"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","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface TypeSuccessJSON {\n  kind: 'TypeSuccess';\n}\n\nexport class TypeSuccess {\n  static readonly discriminator = 0;\n  static readonly kind = 'TypeSuccess';\n  readonly discriminator = 0;\n  readonly kind = 'TypeSuccess';\n\n  toJSON(): TypeSuccessJSON {\n    return {\n      kind: 'TypeSuccess',\n    };\n  }\n\n  toEncodable() {\n    return {\n      TypeSuccess: {},\n    };\n  }\n}\n\nexport interface TypeErrorJSON {\n  kind: 'TypeError';\n}\n\nexport class TypeError {\n  static readonly discriminator = 1;\n  static readonly kind = 'TypeError';\n  readonly discriminator = 1;\n  readonly kind = 'TypeError';\n\n  toJSON(): TypeErrorJSON {\n    return {\n      kind: 'TypeError',\n    };\n  }\n\n  toEncodable() {\n    return {\n      TypeError: {},\n    };\n  }\n}\n\nexport interface TypeDisagreementJSON {\n  kind: 'TypeDisagreement';\n}\n\nexport class TypeDisagreement {\n  static readonly discriminator = 2;\n  static readonly kind = 'TypeDisagreement';\n  readonly discriminator = 2;\n  readonly kind = 'TypeDisagreement';\n\n  toJSON(): TypeDisagreementJSON {\n    return {\n      kind: 'TypeDisagreement',\n    };\n  }\n\n  toEncodable() {\n    return {\n      TypeDisagreement: {},\n    };\n  }\n}\n\nexport interface TypeNoResponseJSON {\n  kind: 'TypeNoResponse';\n}\n\nexport class TypeNoResponse {\n  static readonly discriminator = 3;\n  static readonly kind = 'TypeNoResponse';\n  readonly discriminator = 3;\n  readonly kind = 'TypeNoResponse';\n\n  toJSON(): TypeNoResponseJSON {\n    return {\n      kind: 'TypeNoResponse',\n    };\n  }\n\n  toEncodable() {\n    return {\n      TypeNoResponse: {},\n    };\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function fromDecoded(obj: any): types.OracleResponseTypeKind {\n  if (typeof obj !== 'object') {\n    throw new Error('Invalid enum object');\n  }\n\n  if ('TypeSuccess' in obj) {\n    return new TypeSuccess();\n  }\n  if ('TypeError' in obj) {\n    return new TypeError();\n  }\n  if ('TypeDisagreement' in obj) {\n    return new TypeDisagreement();\n  }\n  if ('TypeNoResponse' in obj) {\n    return new TypeNoResponse();\n  }\n\n  throw new Error('Invalid enum object');\n}\n\nexport function fromJSON(\n  obj: types.OracleResponseTypeJSON\n): types.OracleResponseTypeKind {\n  switch (obj.kind) {\n    case 'TypeSuccess': {\n      return new TypeSuccess();\n    }\n    case 'TypeError': {\n      return new TypeError();\n    }\n    case 'TypeDisagreement': {\n      return new TypeDisagreement();\n    }\n    case 'TypeNoResponse': {\n      return new TypeNoResponse();\n    }\n  }\n}\n\nexport function layout(property?: string) {\n  const ret = borsh.rustEnum([\n    borsh.struct([], 'TypeSuccess'),\n    borsh.struct([], 'TypeError'),\n    borsh.struct([], 'TypeDisagreement'),\n    borsh.struct([], 'TypeNoResponse'),\n  ]);\n  if (property !== undefined) {\n    return ret.replicate(property);\n  }\n  return ret;\n}\n"]}