{"version":3,"file":"VrfProveParams.js","sourceRoot":"","sources":["../../../../src/generated/types/VrfProveParams.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,KAAK,MAAM,kBAAkB,CAAC;AAY1C,MAAM,OAAO,cAAc;IAIzB,YAAY,MAA4B;QACtC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,QAAiB;QAC7B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC1E,CAAC;IAED,8DAA8D;IAC9D,MAAM,CAAC,WAAW,CAAC,GAAQ;QACzB,OAAO,IAAI,cAAc,CAAC;YACxB,KAAK,EAAE,IAAI,UAAU,CACnB,GAAG,CAAC,KAAK,CAAC,MAAM,EAChB,GAAG,CAAC,KAAK,CAAC,UAAU,EACpB,GAAG,CAAC,KAAK,CAAC,MAAM,CACjB;YACD,GAAG,EAAE,GAAG,CAAC,GAAG;SACb,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,MAA4B;QAC7C,OAAO;YACL,KAAK,EAAE,MAAM,CAAC,IAAI,CAChB,MAAM,CAAC,KAAK,CAAC,MAAM,EACnB,MAAM,CAAC,KAAK,CAAC,UAAU,EACvB,MAAM,CAAC,KAAK,CAAC,MAAM,CACpB;YACD,GAAG,EAAE,MAAM,CAAC,GAAG;SAChB,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO;YACL,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YACtC,GAAG,EAAE,IAAI,CAAC,GAAG;SACd,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,GAAuB;QACrC,OAAO,IAAI,cAAc,CAAC;YACxB,KAAK,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACjC,GAAG,EAAE,GAAG,CAAC,GAAG;SACb,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;CACF","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface VrfProveParamsFields {\n  proof: Uint8Array;\n  idx: number;\n}\n\nexport interface VrfProveParamsJSON {\n  proof: Array<number>;\n  idx: number;\n}\n\nexport class VrfProveParams {\n  readonly proof: Uint8Array;\n  readonly idx: number;\n\n  constructor(fields: VrfProveParamsFields) {\n    this.proof = fields.proof;\n    this.idx = fields.idx;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct([borsh.vecU8('proof'), borsh.u32('idx')], property);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new VrfProveParams({\n      proof: new Uint8Array(\n        obj.proof.buffer,\n        obj.proof.byteOffset,\n        obj.proof.length\n      ),\n      idx: obj.idx,\n    });\n  }\n\n  static toEncodable(fields: VrfProveParamsFields) {\n    return {\n      proof: Buffer.from(\n        fields.proof.buffer,\n        fields.proof.byteOffset,\n        fields.proof.length\n      ),\n      idx: fields.idx,\n    };\n  }\n\n  toJSON(): VrfProveParamsJSON {\n    return {\n      proof: Array.from(this.proof.values()),\n      idx: this.idx,\n    };\n  }\n\n  static fromJSON(obj: VrfProveParamsJSON): VrfProveParams {\n    return new VrfProveParams({\n      proof: Uint8Array.from(obj.proof),\n      idx: obj.idx,\n    });\n  }\n\n  toEncodable() {\n    return VrfProveParams.toEncodable(this);\n  }\n}\n"]}