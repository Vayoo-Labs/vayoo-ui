{"version":3,"file":"CrankInitParams.js","sourceRoot":"","sources":["../../../../src/generated/types/CrankInitParams.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,KAAK,MAAM,kBAAkB,CAAC;AAc1C,MAAM,OAAO,eAAe;IAK1B,YAAY,MAA6B;QACvC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;IACpC,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,QAAiB;QAC7B,OAAO,KAAK,CAAC,MAAM,CACjB,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EACtE,QAAQ,CACT,CAAC;IACJ,CAAC;IAED,8DAA8D;IAC9D,MAAM,CAAC,WAAW,CAAC,GAAQ;QACzB,OAAO,IAAI,eAAe,CAAC;YACzB,IAAI,EAAE,IAAI,UAAU,CAClB,GAAG,CAAC,IAAI,CAAC,MAAM,EACf,GAAG,CAAC,IAAI,CAAC,UAAU,EACnB,GAAG,CAAC,IAAI,CAAC,MAAM,CAChB;YACD,QAAQ,EAAE,IAAI,UAAU,CACtB,GAAG,CAAC,QAAQ,CAAC,MAAM,EACnB,GAAG,CAAC,QAAQ,CAAC,UAAU,EACvB,GAAG,CAAC,QAAQ,CAAC,MAAM,CACpB;YACD,SAAS,EAAE,GAAG,CAAC,SAAS;SACzB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,MAA6B;QAC9C,OAAO;YACL,IAAI,EAAE,MAAM,CAAC,IAAI,CACf,MAAM,CAAC,IAAI,CAAC,MAAM,EAClB,MAAM,CAAC,IAAI,CAAC,UAAU,EACtB,MAAM,CAAC,IAAI,CAAC,MAAM,CACnB;YACD,QAAQ,EAAE,MAAM,CAAC,IAAI,CACnB,MAAM,CAAC,QAAQ,CAAC,MAAM,EACtB,MAAM,CAAC,QAAQ,CAAC,UAAU,EAC1B,MAAM,CAAC,QAAQ,CAAC,MAAM,CACvB;YACD,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO;YACL,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACpC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAC5C,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,GAAwB;QACtC,OAAO,IAAI,eAAe,CAAC;YACzB,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;YAC/B,QAAQ,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;YACvC,SAAS,EAAE,GAAG,CAAC,SAAS;SACzB,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;CACF","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface CrankInitParamsFields {\n  name: Uint8Array;\n  metadata: Uint8Array;\n  crankSize: number;\n}\n\nexport interface CrankInitParamsJSON {\n  name: Array<number>;\n  metadata: Array<number>;\n  crankSize: number;\n}\n\nexport class CrankInitParams {\n  readonly name: Uint8Array;\n  readonly metadata: Uint8Array;\n  readonly crankSize: number;\n\n  constructor(fields: CrankInitParamsFields) {\n    this.name = fields.name;\n    this.metadata = fields.metadata;\n    this.crankSize = fields.crankSize;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct(\n      [borsh.vecU8('name'), borsh.vecU8('metadata'), borsh.u32('crankSize')],\n      property\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new CrankInitParams({\n      name: new Uint8Array(\n        obj.name.buffer,\n        obj.name.byteOffset,\n        obj.name.length\n      ),\n      metadata: new Uint8Array(\n        obj.metadata.buffer,\n        obj.metadata.byteOffset,\n        obj.metadata.length\n      ),\n      crankSize: obj.crankSize,\n    });\n  }\n\n  static toEncodable(fields: CrankInitParamsFields) {\n    return {\n      name: Buffer.from(\n        fields.name.buffer,\n        fields.name.byteOffset,\n        fields.name.length\n      ),\n      metadata: Buffer.from(\n        fields.metadata.buffer,\n        fields.metadata.byteOffset,\n        fields.metadata.length\n      ),\n      crankSize: fields.crankSize,\n    };\n  }\n\n  toJSON(): CrankInitParamsJSON {\n    return {\n      name: Array.from(this.name.values()),\n      metadata: Array.from(this.metadata.values()),\n      crankSize: this.crankSize,\n    };\n  }\n\n  static fromJSON(obj: CrankInitParamsJSON): CrankInitParams {\n    return new CrankInitParams({\n      name: Uint8Array.from(obj.name),\n      metadata: Uint8Array.from(obj.metadata),\n      crankSize: obj.crankSize,\n    });\n  }\n\n  toEncodable() {\n    return CrankInitParams.toEncodable(this);\n  }\n}\n"]}