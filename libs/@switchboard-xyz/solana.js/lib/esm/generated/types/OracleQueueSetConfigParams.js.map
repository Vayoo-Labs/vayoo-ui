{"version":3,"file":"OracleQueueSetConfigParams.js","sourceRoot":"","sources":["../../../../src/generated/types/OracleQueueSetConfigParams.ts"],"names":[],"mappings":"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","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface OracleQueueSetConfigParamsFields {\n  name: Array<number> | null;\n  metadata: Array<number> | null;\n  unpermissionedFeedsEnabled: boolean | null;\n  unpermissionedVrfEnabled: boolean | null;\n  enableBufferRelayers: boolean | null;\n  varianceToleranceMultiplier: types.BorshDecimalFields | null;\n  slashingEnabled: boolean | null;\n  reward: BN | null;\n  minStake: BN | null;\n  oracleTimeout: number | null;\n  consecutiveFeedFailureLimit: BN | null;\n  consecutiveOracleFailureLimit: BN | null;\n}\n\nexport interface OracleQueueSetConfigParamsJSON {\n  name: Array<number> | null;\n  metadata: Array<number> | null;\n  unpermissionedFeedsEnabled: boolean | null;\n  unpermissionedVrfEnabled: boolean | null;\n  enableBufferRelayers: boolean | null;\n  varianceToleranceMultiplier: types.BorshDecimalJSON | null;\n  slashingEnabled: boolean | null;\n  reward: string | null;\n  minStake: string | null;\n  oracleTimeout: number | null;\n  consecutiveFeedFailureLimit: string | null;\n  consecutiveOracleFailureLimit: string | null;\n}\n\nexport class OracleQueueSetConfigParams {\n  readonly name: Array<number> | null;\n  readonly metadata: Array<number> | null;\n  readonly unpermissionedFeedsEnabled: boolean | null;\n  readonly unpermissionedVrfEnabled: boolean | null;\n  readonly enableBufferRelayers: boolean | null;\n  readonly varianceToleranceMultiplier: types.BorshDecimal | null;\n  readonly slashingEnabled: boolean | null;\n  readonly reward: BN | null;\n  readonly minStake: BN | null;\n  readonly oracleTimeout: number | null;\n  readonly consecutiveFeedFailureLimit: BN | null;\n  readonly consecutiveOracleFailureLimit: BN | null;\n\n  constructor(fields: OracleQueueSetConfigParamsFields) {\n    this.name = fields.name;\n    this.metadata = fields.metadata;\n    this.unpermissionedFeedsEnabled = fields.unpermissionedFeedsEnabled;\n    this.unpermissionedVrfEnabled = fields.unpermissionedVrfEnabled;\n    this.enableBufferRelayers = fields.enableBufferRelayers;\n    this.varianceToleranceMultiplier =\n      (fields.varianceToleranceMultiplier &&\n        new types.BorshDecimal({ ...fields.varianceToleranceMultiplier })) ||\n      null;\n    this.slashingEnabled = fields.slashingEnabled;\n    this.reward = fields.reward;\n    this.minStake = fields.minStake;\n    this.oracleTimeout = fields.oracleTimeout;\n    this.consecutiveFeedFailureLimit = fields.consecutiveFeedFailureLimit;\n    this.consecutiveOracleFailureLimit = fields.consecutiveOracleFailureLimit;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct(\n      [\n        borsh.option(borsh.array(borsh.u8(), 32), 'name'),\n        borsh.option(borsh.array(borsh.u8(), 64), 'metadata'),\n        borsh.option(borsh.bool(), 'unpermissionedFeedsEnabled'),\n        borsh.option(borsh.bool(), 'unpermissionedVrfEnabled'),\n        borsh.option(borsh.bool(), 'enableBufferRelayers'),\n        borsh.option(\n          types.BorshDecimal.layout(),\n          'varianceToleranceMultiplier'\n        ),\n        borsh.option(borsh.bool(), 'slashingEnabled'),\n        borsh.option(borsh.u64(), 'reward'),\n        borsh.option(borsh.u64(), 'minStake'),\n        borsh.option(borsh.u32(), 'oracleTimeout'),\n        borsh.option(borsh.u64(), 'consecutiveFeedFailureLimit'),\n        borsh.option(borsh.u64(), 'consecutiveOracleFailureLimit'),\n      ],\n      property\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new OracleQueueSetConfigParams({\n      name: obj.name,\n      metadata: obj.metadata,\n      unpermissionedFeedsEnabled: obj.unpermissionedFeedsEnabled,\n      unpermissionedVrfEnabled: obj.unpermissionedVrfEnabled,\n      enableBufferRelayers: obj.enableBufferRelayers,\n      varianceToleranceMultiplier:\n        (obj.varianceToleranceMultiplier &&\n          types.BorshDecimal.fromDecoded(obj.varianceToleranceMultiplier)) ||\n        null,\n      slashingEnabled: obj.slashingEnabled,\n      reward: obj.reward,\n      minStake: obj.minStake,\n      oracleTimeout: obj.oracleTimeout,\n      consecutiveFeedFailureLimit: obj.consecutiveFeedFailureLimit,\n      consecutiveOracleFailureLimit: obj.consecutiveOracleFailureLimit,\n    });\n  }\n\n  static toEncodable(fields: OracleQueueSetConfigParamsFields) {\n    return {\n      name: fields.name,\n      metadata: fields.metadata,\n      unpermissionedFeedsEnabled: fields.unpermissionedFeedsEnabled,\n      unpermissionedVrfEnabled: fields.unpermissionedVrfEnabled,\n      enableBufferRelayers: fields.enableBufferRelayers,\n      varianceToleranceMultiplier:\n        (fields.varianceToleranceMultiplier &&\n          types.BorshDecimal.toEncodable(fields.varianceToleranceMultiplier)) ||\n        null,\n      slashingEnabled: fields.slashingEnabled,\n      reward: fields.reward,\n      minStake: fields.minStake,\n      oracleTimeout: fields.oracleTimeout,\n      consecutiveFeedFailureLimit: fields.consecutiveFeedFailureLimit,\n      consecutiveOracleFailureLimit: fields.consecutiveOracleFailureLimit,\n    };\n  }\n\n  toJSON(): OracleQueueSetConfigParamsJSON {\n    return {\n      name: this.name,\n      metadata: this.metadata,\n      unpermissionedFeedsEnabled: this.unpermissionedFeedsEnabled,\n      unpermissionedVrfEnabled: this.unpermissionedVrfEnabled,\n      enableBufferRelayers: this.enableBufferRelayers,\n      varianceToleranceMultiplier:\n        (this.varianceToleranceMultiplier &&\n          this.varianceToleranceMultiplier.toJSON()) ||\n        null,\n      slashingEnabled: this.slashingEnabled,\n      reward: (this.reward && this.reward.toString()) || null,\n      minStake: (this.minStake && this.minStake.toString()) || null,\n      oracleTimeout: this.oracleTimeout,\n      consecutiveFeedFailureLimit:\n        (this.consecutiveFeedFailureLimit &&\n          this.consecutiveFeedFailureLimit.toString()) ||\n        null,\n      consecutiveOracleFailureLimit:\n        (this.consecutiveOracleFailureLimit &&\n          this.consecutiveOracleFailureLimit.toString()) ||\n        null,\n    };\n  }\n\n  static fromJSON(\n    obj: OracleQueueSetConfigParamsJSON\n  ): OracleQueueSetConfigParams {\n    return new OracleQueueSetConfigParams({\n      name: obj.name,\n      metadata: obj.metadata,\n      unpermissionedFeedsEnabled: obj.unpermissionedFeedsEnabled,\n      unpermissionedVrfEnabled: obj.unpermissionedVrfEnabled,\n      enableBufferRelayers: obj.enableBufferRelayers,\n      varianceToleranceMultiplier:\n        (obj.varianceToleranceMultiplier &&\n          types.BorshDecimal.fromJSON(obj.varianceToleranceMultiplier)) ||\n        null,\n      slashingEnabled: obj.slashingEnabled,\n      reward: (obj.reward && new BN(obj.reward)) || null,\n      minStake: (obj.minStake && new BN(obj.minStake)) || null,\n      oracleTimeout: obj.oracleTimeout,\n      consecutiveFeedFailureLimit:\n        (obj.consecutiveFeedFailureLimit &&\n          new BN(obj.consecutiveFeedFailureLimit)) ||\n        null,\n      consecutiveOracleFailureLimit:\n        (obj.consecutiveOracleFailureLimit &&\n          new BN(obj.consecutiveOracleFailureLimit)) ||\n        null,\n    });\n  }\n\n  toEncodable() {\n    return OracleQueueSetConfigParams.toEncodable(this);\n  }\n}\n"]}