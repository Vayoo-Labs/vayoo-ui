{"version":3,"file":"LeaseWithdrawParams.js","sourceRoot":"","sources":["../../../../src/generated/types/LeaseWithdrawParams.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,EAAE,EAAE,MAAM,yBAAyB,CAAC,CAAC,wDAAwD;AAEtG,OAAO,KAAK,KAAK,MAAM,kBAAkB,CAAC;AAc1C,MAAM,OAAO,mBAAmB;IAK9B,YAAY,MAAiC;QAC3C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC9B,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,QAAiB;QAC7B,OAAO,KAAK,CAAC,MAAM,CACjB,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EACnE,QAAQ,CACT,CAAC;IACJ,CAAC;IAED,8DAA8D;IAC9D,MAAM,CAAC,WAAW,CAAC,GAAQ;QACzB,OAAO,IAAI,mBAAmB,CAAC;YAC7B,SAAS,EAAE,GAAG,CAAC,SAAS;YACxB,SAAS,EAAE,GAAG,CAAC,SAAS;YACxB,MAAM,EAAE,GAAG,CAAC,MAAM;SACnB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,MAAiC;QAClD,OAAO;YACL,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,MAAM,EAAE,MAAM,CAAC,MAAM;SACtB,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO;YACL,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;SAC/B,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,GAA4B;QAC1C,OAAO,IAAI,mBAAmB,CAAC;YAC7B,SAAS,EAAE,GAAG,CAAC,SAAS;YACxB,SAAS,EAAE,GAAG,CAAC,SAAS;YACxB,MAAM,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC;SAC3B,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;CACF","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface LeaseWithdrawParamsFields {\n  stateBump: number;\n  leaseBump: number;\n  amount: BN;\n}\n\nexport interface LeaseWithdrawParamsJSON {\n  stateBump: number;\n  leaseBump: number;\n  amount: string;\n}\n\nexport class LeaseWithdrawParams {\n  readonly stateBump: number;\n  readonly leaseBump: number;\n  readonly amount: BN;\n\n  constructor(fields: LeaseWithdrawParamsFields) {\n    this.stateBump = fields.stateBump;\n    this.leaseBump = fields.leaseBump;\n    this.amount = fields.amount;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct(\n      [borsh.u8('stateBump'), borsh.u8('leaseBump'), borsh.u64('amount')],\n      property\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new LeaseWithdrawParams({\n      stateBump: obj.stateBump,\n      leaseBump: obj.leaseBump,\n      amount: obj.amount,\n    });\n  }\n\n  static toEncodable(fields: LeaseWithdrawParamsFields) {\n    return {\n      stateBump: fields.stateBump,\n      leaseBump: fields.leaseBump,\n      amount: fields.amount,\n    };\n  }\n\n  toJSON(): LeaseWithdrawParamsJSON {\n    return {\n      stateBump: this.stateBump,\n      leaseBump: this.leaseBump,\n      amount: this.amount.toString(),\n    };\n  }\n\n  static fromJSON(obj: LeaseWithdrawParamsJSON): LeaseWithdrawParams {\n    return new LeaseWithdrawParams({\n      stateBump: obj.stateBump,\n      leaseBump: obj.leaseBump,\n      amount: new BN(obj.amount),\n    });\n  }\n\n  toEncodable() {\n    return LeaseWithdrawParams.toEncodable(this);\n  }\n}\n"]}