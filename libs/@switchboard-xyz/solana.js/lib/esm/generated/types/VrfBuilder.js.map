{"version":3,"file":"VrfBuilder.js","sourceRoot":"","sources":["../../../../src/generated/types/VrfBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface VrfBuilderFields {\n  /** The OracleAccountData that is producing the randomness. */\n  producer: PublicKey;\n  /** The current status of the VRF verification. */\n  status: types.VrfStatusKind;\n  /** The VRF proof sourced from the producer. */\n  reprProof: Array<number>;\n  proof: types.EcvrfProofZCFields;\n  yPoint: PublicKey;\n  stage: number;\n  stage1Out: types.EcvrfIntermediateFields;\n  r1: types.EdwardsPointZCFields;\n  r2: types.EdwardsPointZCFields;\n  stage3Out: types.EcvrfIntermediateFields;\n  hPoint: types.EdwardsPointZCFields;\n  sReduced: types.ScalarFields;\n  yPointBuilder: Array<types.FieldElementZCFields>;\n  yRistrettoPoint: types.EdwardsPointZCFields;\n  mulRound: number;\n  hashPointsRound: number;\n  mulTmp1: types.CompletedPointZCFields;\n  uPoint1: types.EdwardsPointZCFields;\n  uPoint2: types.EdwardsPointZCFields;\n  vPoint1: types.EdwardsPointZCFields;\n  vPoint2: types.EdwardsPointZCFields;\n  uPoint: types.EdwardsPointZCFields;\n  vPoint: types.EdwardsPointZCFields;\n  u1: types.FieldElementZCFields;\n  u2: types.FieldElementZCFields;\n  invertee: types.FieldElementZCFields;\n  y: types.FieldElementZCFields;\n  z: types.FieldElementZCFields;\n  p1Bytes: Array<number>;\n  p2Bytes: Array<number>;\n  p3Bytes: Array<number>;\n  p4Bytes: Array<number>;\n  cPrimeHashbuf: Array<number>;\n  m1: types.FieldElementZCFields;\n  m2: types.FieldElementZCFields;\n  /** The number of transactions remaining to verify the VRF proof. */\n  txRemaining: number;\n  /** Whether the VRF proof has been verified on-chain. */\n  verified: boolean;\n  /** The VRF proof verification result. Will be zeroized if still awaiting fulfillment. */\n  result: Array<number>;\n}\n\nexport interface VrfBuilderJSON {\n  /** The OracleAccountData that is producing the randomness. */\n  producer: string;\n  /** The current status of the VRF verification. */\n  status: types.VrfStatusJSON;\n  /** The VRF proof sourced from the producer. */\n  reprProof: Array<number>;\n  proof: types.EcvrfProofZCJSON;\n  yPoint: string;\n  stage: number;\n  stage1Out: types.EcvrfIntermediateJSON;\n  r1: types.EdwardsPointZCJSON;\n  r2: types.EdwardsPointZCJSON;\n  stage3Out: types.EcvrfIntermediateJSON;\n  hPoint: types.EdwardsPointZCJSON;\n  sReduced: types.ScalarJSON;\n  yPointBuilder: Array<types.FieldElementZCJSON>;\n  yRistrettoPoint: types.EdwardsPointZCJSON;\n  mulRound: number;\n  hashPointsRound: number;\n  mulTmp1: types.CompletedPointZCJSON;\n  uPoint1: types.EdwardsPointZCJSON;\n  uPoint2: types.EdwardsPointZCJSON;\n  vPoint1: types.EdwardsPointZCJSON;\n  vPoint2: types.EdwardsPointZCJSON;\n  uPoint: types.EdwardsPointZCJSON;\n  vPoint: types.EdwardsPointZCJSON;\n  u1: types.FieldElementZCJSON;\n  u2: types.FieldElementZCJSON;\n  invertee: types.FieldElementZCJSON;\n  y: types.FieldElementZCJSON;\n  z: types.FieldElementZCJSON;\n  p1Bytes: Array<number>;\n  p2Bytes: Array<number>;\n  p3Bytes: Array<number>;\n  p4Bytes: Array<number>;\n  cPrimeHashbuf: Array<number>;\n  m1: types.FieldElementZCJSON;\n  m2: types.FieldElementZCJSON;\n  /** The number of transactions remaining to verify the VRF proof. */\n  txRemaining: number;\n  /** Whether the VRF proof has been verified on-chain. */\n  verified: boolean;\n  /** The VRF proof verification result. Will be zeroized if still awaiting fulfillment. */\n  result: Array<number>;\n}\n\nexport class VrfBuilder {\n  /** The OracleAccountData that is producing the randomness. */\n  readonly producer: PublicKey;\n  /** The current status of the VRF verification. */\n  readonly status: types.VrfStatusKind;\n  /** The VRF proof sourced from the producer. */\n  readonly reprProof: Array<number>;\n  readonly proof: types.EcvrfProofZC;\n  readonly yPoint: PublicKey;\n  readonly stage: number;\n  readonly stage1Out: types.EcvrfIntermediate;\n  readonly r1: types.EdwardsPointZC;\n  readonly r2: types.EdwardsPointZC;\n  readonly stage3Out: types.EcvrfIntermediate;\n  readonly hPoint: types.EdwardsPointZC;\n  readonly sReduced: types.Scalar;\n  readonly yPointBuilder: Array<types.FieldElementZC>;\n  readonly yRistrettoPoint: types.EdwardsPointZC;\n  readonly mulRound: number;\n  readonly hashPointsRound: number;\n  readonly mulTmp1: types.CompletedPointZC;\n  readonly uPoint1: types.EdwardsPointZC;\n  readonly uPoint2: types.EdwardsPointZC;\n  readonly vPoint1: types.EdwardsPointZC;\n  readonly vPoint2: types.EdwardsPointZC;\n  readonly uPoint: types.EdwardsPointZC;\n  readonly vPoint: types.EdwardsPointZC;\n  readonly u1: types.FieldElementZC;\n  readonly u2: types.FieldElementZC;\n  readonly invertee: types.FieldElementZC;\n  readonly y: types.FieldElementZC;\n  readonly z: types.FieldElementZC;\n  readonly p1Bytes: Array<number>;\n  readonly p2Bytes: Array<number>;\n  readonly p3Bytes: Array<number>;\n  readonly p4Bytes: Array<number>;\n  readonly cPrimeHashbuf: Array<number>;\n  readonly m1: types.FieldElementZC;\n  readonly m2: types.FieldElementZC;\n  /** The number of transactions remaining to verify the VRF proof. */\n  readonly txRemaining: number;\n  /** Whether the VRF proof has been verified on-chain. */\n  readonly verified: boolean;\n  /** The VRF proof verification result. Will be zeroized if still awaiting fulfillment. */\n  readonly result: Array<number>;\n\n  constructor(fields: VrfBuilderFields) {\n    this.producer = fields.producer;\n    this.status = fields.status;\n    this.reprProof = fields.reprProof;\n    this.proof = new types.EcvrfProofZC({ ...fields.proof });\n    this.yPoint = fields.yPoint;\n    this.stage = fields.stage;\n    this.stage1Out = new types.EcvrfIntermediate({ ...fields.stage1Out });\n    this.r1 = new types.EdwardsPointZC({ ...fields.r1 });\n    this.r2 = new types.EdwardsPointZC({ ...fields.r2 });\n    this.stage3Out = new types.EcvrfIntermediate({ ...fields.stage3Out });\n    this.hPoint = new types.EdwardsPointZC({ ...fields.hPoint });\n    this.sReduced = new types.Scalar({ ...fields.sReduced });\n    this.yPointBuilder = fields.yPointBuilder.map(\n      item => new types.FieldElementZC({ ...item })\n    );\n    this.yRistrettoPoint = new types.EdwardsPointZC({\n      ...fields.yRistrettoPoint,\n    });\n    this.mulRound = fields.mulRound;\n    this.hashPointsRound = fields.hashPointsRound;\n    this.mulTmp1 = new types.CompletedPointZC({ ...fields.mulTmp1 });\n    this.uPoint1 = new types.EdwardsPointZC({ ...fields.uPoint1 });\n    this.uPoint2 = new types.EdwardsPointZC({ ...fields.uPoint2 });\n    this.vPoint1 = new types.EdwardsPointZC({ ...fields.vPoint1 });\n    this.vPoint2 = new types.EdwardsPointZC({ ...fields.vPoint2 });\n    this.uPoint = new types.EdwardsPointZC({ ...fields.uPoint });\n    this.vPoint = new types.EdwardsPointZC({ ...fields.vPoint });\n    this.u1 = new types.FieldElementZC({ ...fields.u1 });\n    this.u2 = new types.FieldElementZC({ ...fields.u2 });\n    this.invertee = new types.FieldElementZC({ ...fields.invertee });\n    this.y = new types.FieldElementZC({ ...fields.y });\n    this.z = new types.FieldElementZC({ ...fields.z });\n    this.p1Bytes = fields.p1Bytes;\n    this.p2Bytes = fields.p2Bytes;\n    this.p3Bytes = fields.p3Bytes;\n    this.p4Bytes = fields.p4Bytes;\n    this.cPrimeHashbuf = fields.cPrimeHashbuf;\n    this.m1 = new types.FieldElementZC({ ...fields.m1 });\n    this.m2 = new types.FieldElementZC({ ...fields.m2 });\n    this.txRemaining = fields.txRemaining;\n    this.verified = fields.verified;\n    this.result = fields.result;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct(\n      [\n        borsh.publicKey('producer'),\n        types.VrfStatus.layout('status'),\n        borsh.array(borsh.u8(), 80, 'reprProof'),\n        types.EcvrfProofZC.layout('proof'),\n        borsh.publicKey('yPoint'),\n        borsh.u32('stage'),\n        types.EcvrfIntermediate.layout('stage1Out'),\n        types.EdwardsPointZC.layout('r1'),\n        types.EdwardsPointZC.layout('r2'),\n        types.EcvrfIntermediate.layout('stage3Out'),\n        types.EdwardsPointZC.layout('hPoint'),\n        types.Scalar.layout('sReduced'),\n        borsh.array(types.FieldElementZC.layout(), 3, 'yPointBuilder'),\n        types.EdwardsPointZC.layout('yRistrettoPoint'),\n        borsh.u8('mulRound'),\n        borsh.u8('hashPointsRound'),\n        types.CompletedPointZC.layout('mulTmp1'),\n        types.EdwardsPointZC.layout('uPoint1'),\n        types.EdwardsPointZC.layout('uPoint2'),\n        types.EdwardsPointZC.layout('vPoint1'),\n        types.EdwardsPointZC.layout('vPoint2'),\n        types.EdwardsPointZC.layout('uPoint'),\n        types.EdwardsPointZC.layout('vPoint'),\n        types.FieldElementZC.layout('u1'),\n        types.FieldElementZC.layout('u2'),\n        types.FieldElementZC.layout('invertee'),\n        types.FieldElementZC.layout('y'),\n        types.FieldElementZC.layout('z'),\n        borsh.array(borsh.u8(), 32, 'p1Bytes'),\n        borsh.array(borsh.u8(), 32, 'p2Bytes'),\n        borsh.array(borsh.u8(), 32, 'p3Bytes'),\n        borsh.array(borsh.u8(), 32, 'p4Bytes'),\n        borsh.array(borsh.u8(), 16, 'cPrimeHashbuf'),\n        types.FieldElementZC.layout('m1'),\n        types.FieldElementZC.layout('m2'),\n        borsh.u32('txRemaining'),\n        borsh.bool('verified'),\n        borsh.array(borsh.u8(), 32, 'result'),\n      ],\n      property\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new VrfBuilder({\n      producer: obj.producer,\n      status: types.VrfStatus.fromDecoded(obj.status),\n      reprProof: obj.reprProof,\n      proof: types.EcvrfProofZC.fromDecoded(obj.proof),\n      yPoint: obj.yPoint,\n      stage: obj.stage,\n      stage1Out: types.EcvrfIntermediate.fromDecoded(obj.stage1Out),\n      r1: types.EdwardsPointZC.fromDecoded(obj.r1),\n      r2: types.EdwardsPointZC.fromDecoded(obj.r2),\n      stage3Out: types.EcvrfIntermediate.fromDecoded(obj.stage3Out),\n      hPoint: types.EdwardsPointZC.fromDecoded(obj.hPoint),\n      sReduced: types.Scalar.fromDecoded(obj.sReduced),\n      yPointBuilder: obj.yPointBuilder.map(\n        (\n          item: any /* eslint-disable-line @typescript-eslint/no-explicit-any */\n        ) => types.FieldElementZC.fromDecoded(item)\n      ),\n      yRistrettoPoint: types.EdwardsPointZC.fromDecoded(obj.yRistrettoPoint),\n      mulRound: obj.mulRound,\n      hashPointsRound: obj.hashPointsRound,\n      mulTmp1: types.CompletedPointZC.fromDecoded(obj.mulTmp1),\n      uPoint1: types.EdwardsPointZC.fromDecoded(obj.uPoint1),\n      uPoint2: types.EdwardsPointZC.fromDecoded(obj.uPoint2),\n      vPoint1: types.EdwardsPointZC.fromDecoded(obj.vPoint1),\n      vPoint2: types.EdwardsPointZC.fromDecoded(obj.vPoint2),\n      uPoint: types.EdwardsPointZC.fromDecoded(obj.uPoint),\n      vPoint: types.EdwardsPointZC.fromDecoded(obj.vPoint),\n      u1: types.FieldElementZC.fromDecoded(obj.u1),\n      u2: types.FieldElementZC.fromDecoded(obj.u2),\n      invertee: types.FieldElementZC.fromDecoded(obj.invertee),\n      y: types.FieldElementZC.fromDecoded(obj.y),\n      z: types.FieldElementZC.fromDecoded(obj.z),\n      p1Bytes: obj.p1Bytes,\n      p2Bytes: obj.p2Bytes,\n      p3Bytes: obj.p3Bytes,\n      p4Bytes: obj.p4Bytes,\n      cPrimeHashbuf: obj.cPrimeHashbuf,\n      m1: types.FieldElementZC.fromDecoded(obj.m1),\n      m2: types.FieldElementZC.fromDecoded(obj.m2),\n      txRemaining: obj.txRemaining,\n      verified: obj.verified,\n      result: obj.result,\n    });\n  }\n\n  static toEncodable(fields: VrfBuilderFields) {\n    return {\n      producer: fields.producer,\n      status: fields.status.toEncodable(),\n      reprProof: fields.reprProof,\n      proof: types.EcvrfProofZC.toEncodable(fields.proof),\n      yPoint: fields.yPoint,\n      stage: fields.stage,\n      stage1Out: types.EcvrfIntermediate.toEncodable(fields.stage1Out),\n      r1: types.EdwardsPointZC.toEncodable(fields.r1),\n      r2: types.EdwardsPointZC.toEncodable(fields.r2),\n      stage3Out: types.EcvrfIntermediate.toEncodable(fields.stage3Out),\n      hPoint: types.EdwardsPointZC.toEncodable(fields.hPoint),\n      sReduced: types.Scalar.toEncodable(fields.sReduced),\n      yPointBuilder: fields.yPointBuilder.map(item =>\n        types.FieldElementZC.toEncodable(item)\n      ),\n      yRistrettoPoint: types.EdwardsPointZC.toEncodable(fields.yRistrettoPoint),\n      mulRound: fields.mulRound,\n      hashPointsRound: fields.hashPointsRound,\n      mulTmp1: types.CompletedPointZC.toEncodable(fields.mulTmp1),\n      uPoint1: types.EdwardsPointZC.toEncodable(fields.uPoint1),\n      uPoint2: types.EdwardsPointZC.toEncodable(fields.uPoint2),\n      vPoint1: types.EdwardsPointZC.toEncodable(fields.vPoint1),\n      vPoint2: types.EdwardsPointZC.toEncodable(fields.vPoint2),\n      uPoint: types.EdwardsPointZC.toEncodable(fields.uPoint),\n      vPoint: types.EdwardsPointZC.toEncodable(fields.vPoint),\n      u1: types.FieldElementZC.toEncodable(fields.u1),\n      u2: types.FieldElementZC.toEncodable(fields.u2),\n      invertee: types.FieldElementZC.toEncodable(fields.invertee),\n      y: types.FieldElementZC.toEncodable(fields.y),\n      z: types.FieldElementZC.toEncodable(fields.z),\n      p1Bytes: fields.p1Bytes,\n      p2Bytes: fields.p2Bytes,\n      p3Bytes: fields.p3Bytes,\n      p4Bytes: fields.p4Bytes,\n      cPrimeHashbuf: fields.cPrimeHashbuf,\n      m1: types.FieldElementZC.toEncodable(fields.m1),\n      m2: types.FieldElementZC.toEncodable(fields.m2),\n      txRemaining: fields.txRemaining,\n      verified: fields.verified,\n      result: fields.result,\n    };\n  }\n\n  toJSON(): VrfBuilderJSON {\n    return {\n      producer: this.producer.toString(),\n      status: this.status.toJSON(),\n      reprProof: this.reprProof,\n      proof: this.proof.toJSON(),\n      yPoint: this.yPoint.toString(),\n      stage: this.stage,\n      stage1Out: this.stage1Out.toJSON(),\n      r1: this.r1.toJSON(),\n      r2: this.r2.toJSON(),\n      stage3Out: this.stage3Out.toJSON(),\n      hPoint: this.hPoint.toJSON(),\n      sReduced: this.sReduced.toJSON(),\n      yPointBuilder: this.yPointBuilder.map(item => item.toJSON()),\n      yRistrettoPoint: this.yRistrettoPoint.toJSON(),\n      mulRound: this.mulRound,\n      hashPointsRound: this.hashPointsRound,\n      mulTmp1: this.mulTmp1.toJSON(),\n      uPoint1: this.uPoint1.toJSON(),\n      uPoint2: this.uPoint2.toJSON(),\n      vPoint1: this.vPoint1.toJSON(),\n      vPoint2: this.vPoint2.toJSON(),\n      uPoint: this.uPoint.toJSON(),\n      vPoint: this.vPoint.toJSON(),\n      u1: this.u1.toJSON(),\n      u2: this.u2.toJSON(),\n      invertee: this.invertee.toJSON(),\n      y: this.y.toJSON(),\n      z: this.z.toJSON(),\n      p1Bytes: this.p1Bytes,\n      p2Bytes: this.p2Bytes,\n      p3Bytes: this.p3Bytes,\n      p4Bytes: this.p4Bytes,\n      cPrimeHashbuf: this.cPrimeHashbuf,\n      m1: this.m1.toJSON(),\n      m2: this.m2.toJSON(),\n      txRemaining: this.txRemaining,\n      verified: this.verified,\n      result: this.result,\n    };\n  }\n\n  static fromJSON(obj: VrfBuilderJSON): VrfBuilder {\n    return new VrfBuilder({\n      producer: new PublicKey(obj.producer),\n      status: types.VrfStatus.fromJSON(obj.status),\n      reprProof: obj.reprProof,\n      proof: types.EcvrfProofZC.fromJSON(obj.proof),\n      yPoint: new PublicKey(obj.yPoint),\n      stage: obj.stage,\n      stage1Out: types.EcvrfIntermediate.fromJSON(obj.stage1Out),\n      r1: types.EdwardsPointZC.fromJSON(obj.r1),\n      r2: types.EdwardsPointZC.fromJSON(obj.r2),\n      stage3Out: types.EcvrfIntermediate.fromJSON(obj.stage3Out),\n      hPoint: types.EdwardsPointZC.fromJSON(obj.hPoint),\n      sReduced: types.Scalar.fromJSON(obj.sReduced),\n      yPointBuilder: obj.yPointBuilder.map(item =>\n        types.FieldElementZC.fromJSON(item)\n      ),\n      yRistrettoPoint: types.EdwardsPointZC.fromJSON(obj.yRistrettoPoint),\n      mulRound: obj.mulRound,\n      hashPointsRound: obj.hashPointsRound,\n      mulTmp1: types.CompletedPointZC.fromJSON(obj.mulTmp1),\n      uPoint1: types.EdwardsPointZC.fromJSON(obj.uPoint1),\n      uPoint2: types.EdwardsPointZC.fromJSON(obj.uPoint2),\n      vPoint1: types.EdwardsPointZC.fromJSON(obj.vPoint1),\n      vPoint2: types.EdwardsPointZC.fromJSON(obj.vPoint2),\n      uPoint: types.EdwardsPointZC.fromJSON(obj.uPoint),\n      vPoint: types.EdwardsPointZC.fromJSON(obj.vPoint),\n      u1: types.FieldElementZC.fromJSON(obj.u1),\n      u2: types.FieldElementZC.fromJSON(obj.u2),\n      invertee: types.FieldElementZC.fromJSON(obj.invertee),\n      y: types.FieldElementZC.fromJSON(obj.y),\n      z: types.FieldElementZC.fromJSON(obj.z),\n      p1Bytes: obj.p1Bytes,\n      p2Bytes: obj.p2Bytes,\n      p3Bytes: obj.p3Bytes,\n      p4Bytes: obj.p4Bytes,\n      cPrimeHashbuf: obj.cPrimeHashbuf,\n      m1: types.FieldElementZC.fromJSON(obj.m1),\n      m2: types.FieldElementZC.fromJSON(obj.m2),\n      txRemaining: obj.txRemaining,\n      verified: obj.verified,\n      result: obj.result,\n    });\n  }\n\n  toEncodable() {\n    return VrfBuilder.toEncodable(this);\n  }\n}\n"]}