{"version":3,"file":"Error.js","sourceRoot":"","sources":["../../../../src/generated/types/Error.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,KAAK,MAAM,kBAAkB,CAAC;AAM1C,MAAM,OAAO,gBAAgB;IAA7B;QAGW,kBAAa,GAAG,CAAC,CAAC;QAClB,SAAI,GAAG,kBAAkB,CAAC;IAarC,CAAC;IAXC,MAAM;QACJ,OAAO;YACL,IAAI,EAAE,kBAAkB;SACzB,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO;YACL,gBAAgB,EAAE,EAAE;SACrB,CAAC;IACJ,CAAC;;AAfe,8BAAa,GAAG,CAAC,CAAC;AAClB,qBAAI,GAAG,kBAAkB,CAAC;AAqB5C,MAAM,OAAO,kBAAkB;IAA/B;QAGW,kBAAa,GAAG,CAAC,CAAC;QAClB,SAAI,GAAG,oBAAoB,CAAC;IAavC,CAAC;IAXC,MAAM;QACJ,OAAO;YACL,IAAI,EAAE,oBAAoB;SAC3B,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO;YACL,kBAAkB,EAAE,EAAE;SACvB,CAAC;IACJ,CAAC;;AAfe,gCAAa,GAAG,CAAC,CAAC;AAClB,uBAAI,GAAG,oBAAoB,CAAC;AAqB9C,MAAM,OAAO,oBAAoB;IAAjC;QAGW,kBAAa,GAAG,CAAC,CAAC;QAClB,SAAI,GAAG,sBAAsB,CAAC;IAazC,CAAC;IAXC,MAAM;QACJ,OAAO;YACL,IAAI,EAAE,sBAAsB;SAC7B,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO;YACL,oBAAoB,EAAE,EAAE;SACzB,CAAC;IACJ,CAAC;;AAfe,kCAAa,GAAG,CAAC,CAAC;AAClB,yBAAI,GAAG,sBAAsB,CAAC;AAqBhD,MAAM,OAAO,gBAAgB;IAA7B;QAGW,kBAAa,GAAG,CAAC,CAAC;QAClB,SAAI,GAAG,kBAAkB,CAAC;IAarC,CAAC;IAXC,MAAM;QACJ,OAAO;YACL,IAAI,EAAE,kBAAkB;SACzB,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO;YACL,gBAAgB,EAAE,EAAE;SACrB,CAAC;IACJ,CAAC;;AAfe,8BAAa,GAAG,CAAC,CAAC;AAClB,qBAAI,GAAG,kBAAkB,CAAC;AAiB5C,8DAA8D;AAC9D,MAAM,UAAU,WAAW,CAAC,GAAQ;IAClC,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;KACxC;IAED,IAAI,kBAAkB,IAAI,GAAG,EAAE;QAC7B,OAAO,IAAI,gBAAgB,EAAE,CAAC;KAC/B;IACD,IAAI,oBAAoB,IAAI,GAAG,EAAE;QAC/B,OAAO,IAAI,kBAAkB,EAAE,CAAC;KACjC;IACD,IAAI,sBAAsB,IAAI,GAAG,EAAE;QACjC,OAAO,IAAI,oBAAoB,EAAE,CAAC;KACnC;IACD,IAAI,kBAAkB,IAAI,GAAG,EAAE;QAC7B,OAAO,IAAI,gBAAgB,EAAE,CAAC;KAC/B;IAED,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AACzC,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,GAAoB;IAC3C,QAAQ,GAAG,CAAC,IAAI,EAAE;QAChB,KAAK,kBAAkB,CAAC,CAAC;YACvB,OAAO,IAAI,gBAAgB,EAAE,CAAC;SAC/B;QACD,KAAK,oBAAoB,CAAC,CAAC;YACzB,OAAO,IAAI,kBAAkB,EAAE,CAAC;SACjC;QACD,KAAK,sBAAsB,CAAC,CAAC;YAC3B,OAAO,IAAI,oBAAoB,EAAE,CAAC;SACnC;QACD,KAAK,kBAAkB,CAAC,CAAC;YACvB,OAAO,IAAI,gBAAgB,EAAE,CAAC;SAC/B;KACF;AACH,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,QAAiB;IACtC,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC;QACzB,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,kBAAkB,CAAC;QACpC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,oBAAoB,CAAC;QACtC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,sBAAsB,CAAC;QACxC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,kBAAkB,CAAC;KACrC,CAAC,CAAC;IACH,IAAI,QAAQ,KAAK,SAAS,EAAE;QAC1B,OAAO,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;KAChC;IACD,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface InvalidPublicKeyJSON {\n  kind: 'InvalidPublicKey';\n}\n\nexport class InvalidPublicKey {\n  static readonly discriminator = 0;\n  static readonly kind = 'InvalidPublicKey';\n  readonly discriminator = 0;\n  readonly kind = 'InvalidPublicKey';\n\n  toJSON(): InvalidPublicKeyJSON {\n    return {\n      kind: 'InvalidPublicKey',\n    };\n  }\n\n  toEncodable() {\n    return {\n      InvalidPublicKey: {},\n    };\n  }\n}\n\nexport interface SerializationErrorJSON {\n  kind: 'SerializationError';\n}\n\nexport class SerializationError {\n  static readonly discriminator = 1;\n  static readonly kind = 'SerializationError';\n  readonly discriminator = 1;\n  readonly kind = 'SerializationError';\n\n  toJSON(): SerializationErrorJSON {\n    return {\n      kind: 'SerializationError',\n    };\n  }\n\n  toEncodable() {\n    return {\n      SerializationError: {},\n    };\n  }\n}\n\nexport interface DeserializationErrorJSON {\n  kind: 'DeserializationError';\n}\n\nexport class DeserializationError {\n  static readonly discriminator = 2;\n  static readonly kind = 'DeserializationError';\n  readonly discriminator = 2;\n  readonly kind = 'DeserializationError';\n\n  toJSON(): DeserializationErrorJSON {\n    return {\n      kind: 'DeserializationError',\n    };\n  }\n\n  toEncodable() {\n    return {\n      DeserializationError: {},\n    };\n  }\n}\n\nexport interface InvalidDataErrorJSON {\n  kind: 'InvalidDataError';\n}\n\nexport class InvalidDataError {\n  static readonly discriminator = 3;\n  static readonly kind = 'InvalidDataError';\n  readonly discriminator = 3;\n  readonly kind = 'InvalidDataError';\n\n  toJSON(): InvalidDataErrorJSON {\n    return {\n      kind: 'InvalidDataError',\n    };\n  }\n\n  toEncodable() {\n    return {\n      InvalidDataError: {},\n    };\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function fromDecoded(obj: any): types.ErrorKind {\n  if (typeof obj !== 'object') {\n    throw new Error('Invalid enum object');\n  }\n\n  if ('InvalidPublicKey' in obj) {\n    return new InvalidPublicKey();\n  }\n  if ('SerializationError' in obj) {\n    return new SerializationError();\n  }\n  if ('DeserializationError' in obj) {\n    return new DeserializationError();\n  }\n  if ('InvalidDataError' in obj) {\n    return new InvalidDataError();\n  }\n\n  throw new Error('Invalid enum object');\n}\n\nexport function fromJSON(obj: types.ErrorJSON): types.ErrorKind {\n  switch (obj.kind) {\n    case 'InvalidPublicKey': {\n      return new InvalidPublicKey();\n    }\n    case 'SerializationError': {\n      return new SerializationError();\n    }\n    case 'DeserializationError': {\n      return new DeserializationError();\n    }\n    case 'InvalidDataError': {\n      return new InvalidDataError();\n    }\n  }\n}\n\nexport function layout(property?: string) {\n  const ret = borsh.rustEnum([\n    borsh.struct([], 'InvalidPublicKey'),\n    borsh.struct([], 'SerializationError'),\n    borsh.struct([], 'DeserializationError'),\n    borsh.struct([], 'InvalidDataError'),\n  ]);\n  if (property !== undefined) {\n    return ret.replicate(property);\n  }\n  return ret;\n}\n"]}