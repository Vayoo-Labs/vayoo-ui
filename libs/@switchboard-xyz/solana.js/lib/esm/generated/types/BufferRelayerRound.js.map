{"version":3,"file":"BufferRelayerRound.js","sourceRoot":"","sources":["../../../../src/generated/types/BufferRelayerRound.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC,CAAC,wDAAwD;AACrG,OAAO,EAAE,EAAE,EAAE,MAAM,yBAAyB,CAAC,CAAC,wDAAwD;AAEtG,OAAO,KAAK,KAAK,MAAM,kBAAkB,CAAC;AA4B1C,MAAM,OAAO,kBAAkB;IAY7B,YAAY,MAAgC;QAC1C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IAC1C,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,QAAiB;QAC7B,OAAO,KAAK,CAAC,MAAM,CACjB;YACE,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC;YACvB,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC;YACrB,KAAK,CAAC,GAAG,CAAC,eAAe,CAAC;YAC1B,KAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC;YAC/B,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC;SAChC,EACD,QAAQ,CACT,CAAC;IACJ,CAAC;IAED,8DAA8D;IAC9D,MAAM,CAAC,WAAW,CAAC,GAAQ;QACzB,OAAO,IAAI,kBAAkB,CAAC;YAC5B,UAAU,EAAE,GAAG,CAAC,UAAU;YAC1B,QAAQ,EAAE,GAAG,CAAC,QAAQ;YACtB,aAAa,EAAE,GAAG,CAAC,aAAa;YAChC,kBAAkB,EAAE,GAAG,CAAC,kBAAkB;YAC1C,YAAY,EAAE,GAAG,CAAC,YAAY;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,MAAgC;QACjD,OAAO;YACL,UAAU,EAAE,MAAM,CAAC,UAAU;YAC7B,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,aAAa,EAAE,MAAM,CAAC,aAAa;YACnC,kBAAkB,EAAE,MAAM,CAAC,kBAAkB;YAC7C,YAAY,EAAE,MAAM,CAAC,YAAY;SAClC,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO;YACL,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC5C,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;YACtD,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;SAC3C,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,GAA2B;QACzC,OAAO,IAAI,kBAAkB,CAAC;YAC5B,UAAU,EAAE,GAAG,CAAC,UAAU;YAC1B,QAAQ,EAAE,GAAG,CAAC,QAAQ;YACtB,aAAa,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC;YACxC,kBAAkB,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC;YAClD,YAAY,EAAE,IAAI,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC;SAC9C,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;CACF","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface BufferRelayerRoundFields {\n  /** Number of successful responses. */\n  numSuccess: number;\n  /** Number of error responses. */\n  numError: number;\n  /** Slot when the buffer relayer round was opened. */\n  roundOpenSlot: BN;\n  /** Timestamp when the buffer relayer round was opened. */\n  roundOpenTimestamp: BN;\n  /** The public key of the oracle fulfilling the buffer relayer update request. */\n  oraclePubkey: PublicKey;\n}\n\nexport interface BufferRelayerRoundJSON {\n  /** Number of successful responses. */\n  numSuccess: number;\n  /** Number of error responses. */\n  numError: number;\n  /** Slot when the buffer relayer round was opened. */\n  roundOpenSlot: string;\n  /** Timestamp when the buffer relayer round was opened. */\n  roundOpenTimestamp: string;\n  /** The public key of the oracle fulfilling the buffer relayer update request. */\n  oraclePubkey: string;\n}\n\nexport class BufferRelayerRound {\n  /** Number of successful responses. */\n  readonly numSuccess: number;\n  /** Number of error responses. */\n  readonly numError: number;\n  /** Slot when the buffer relayer round was opened. */\n  readonly roundOpenSlot: BN;\n  /** Timestamp when the buffer relayer round was opened. */\n  readonly roundOpenTimestamp: BN;\n  /** The public key of the oracle fulfilling the buffer relayer update request. */\n  readonly oraclePubkey: PublicKey;\n\n  constructor(fields: BufferRelayerRoundFields) {\n    this.numSuccess = fields.numSuccess;\n    this.numError = fields.numError;\n    this.roundOpenSlot = fields.roundOpenSlot;\n    this.roundOpenTimestamp = fields.roundOpenTimestamp;\n    this.oraclePubkey = fields.oraclePubkey;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct(\n      [\n        borsh.u32('numSuccess'),\n        borsh.u32('numError'),\n        borsh.u64('roundOpenSlot'),\n        borsh.i64('roundOpenTimestamp'),\n        borsh.publicKey('oraclePubkey'),\n      ],\n      property\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new BufferRelayerRound({\n      numSuccess: obj.numSuccess,\n      numError: obj.numError,\n      roundOpenSlot: obj.roundOpenSlot,\n      roundOpenTimestamp: obj.roundOpenTimestamp,\n      oraclePubkey: obj.oraclePubkey,\n    });\n  }\n\n  static toEncodable(fields: BufferRelayerRoundFields) {\n    return {\n      numSuccess: fields.numSuccess,\n      numError: fields.numError,\n      roundOpenSlot: fields.roundOpenSlot,\n      roundOpenTimestamp: fields.roundOpenTimestamp,\n      oraclePubkey: fields.oraclePubkey,\n    };\n  }\n\n  toJSON(): BufferRelayerRoundJSON {\n    return {\n      numSuccess: this.numSuccess,\n      numError: this.numError,\n      roundOpenSlot: this.roundOpenSlot.toString(),\n      roundOpenTimestamp: this.roundOpenTimestamp.toString(),\n      oraclePubkey: this.oraclePubkey.toString(),\n    };\n  }\n\n  static fromJSON(obj: BufferRelayerRoundJSON): BufferRelayerRound {\n    return new BufferRelayerRound({\n      numSuccess: obj.numSuccess,\n      numError: obj.numError,\n      roundOpenSlot: new BN(obj.roundOpenSlot),\n      roundOpenTimestamp: new BN(obj.roundOpenTimestamp),\n      oraclePubkey: new PublicKey(obj.oraclePubkey),\n    });\n  }\n\n  toEncodable() {\n    return BufferRelayerRound.toEncodable(this);\n  }\n}\n"]}