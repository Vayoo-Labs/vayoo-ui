{"version":3,"file":"SwitchboardPermission.js","sourceRoot":"","sources":["../../../../src/generated/types/SwitchboardPermission.ts"],"names":[],"mappings":"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","sourcesContent":["import * as borsh from '@coral-xyz/borsh';\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport interface PermitNoneJSON {\n  kind: 'PermitNone';\n}\n\nexport class PermitNone {\n  static readonly discriminator = 0;\n  static readonly kind = 'NONE';\n  readonly discriminator = 0;\n  readonly kind = 'PermitNone';\n\n  toJSON(): PermitNoneJSON {\n    return {\n      kind: 'PermitNone',\n    };\n  }\n\n  toEncodable() {\n    return {\n      PermitOracleHeartbeat: {},\n    };\n  }\n}\n\nexport interface PermitOracleHeartbeatJSON {\n  kind: 'PermitOracleHeartbeat';\n}\n\nexport class PermitOracleHeartbeat {\n  static readonly discriminator = 1;\n  static readonly kind = 'PermitOracleHeartbeat';\n  readonly discriminator = 1;\n  readonly kind = 'PermitOracleHeartbeat';\n\n  toJSON(): PermitOracleHeartbeatJSON {\n    return {\n      kind: 'PermitOracleHeartbeat',\n    };\n  }\n\n  toEncodable() {\n    return {\n      PermitOracleHeartbeat: {},\n    };\n  }\n}\n\nexport interface PermitOracleQueueUsageJSON {\n  kind: 'PermitOracleQueueUsage';\n}\n\nexport class PermitOracleQueueUsage {\n  static readonly discriminator = 2;\n  static readonly kind = 'PermitOracleQueueUsage';\n  readonly discriminator = 2;\n  readonly kind = 'PermitOracleQueueUsage';\n\n  toJSON(): PermitOracleQueueUsageJSON {\n    return {\n      kind: 'PermitOracleQueueUsage',\n    };\n  }\n\n  toEncodable() {\n    return {\n      PermitOracleQueueUsage: {},\n    };\n  }\n}\n\nexport interface PermitVrfRequestsJSON {\n  kind: 'PermitVrfRequests';\n}\n\nexport class PermitVrfRequests {\n  static readonly discriminator = 4;\n  static readonly kind = 'PermitVrfRequests';\n  readonly discriminator = 4;\n  readonly kind = 'PermitVrfRequests';\n\n  toJSON(): PermitVrfRequestsJSON {\n    return {\n      kind: 'PermitVrfRequests',\n    };\n  }\n\n  toEncodable() {\n    return {\n      PermitVrfRequests: {},\n    };\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function fromDecoded(obj: any): types.SwitchboardPermissionKind {\n  if (typeof obj !== 'object') {\n    throw new Error('Invalid enum object');\n  }\n\n  if ('PermitNone' in obj) {\n    return new PermitNone();\n  }\n  if ('PermitOracleHeartbeat' in obj) {\n    return new PermitOracleHeartbeat();\n  }\n  if ('PermitOracleQueueUsage' in obj) {\n    return new PermitOracleQueueUsage();\n  }\n  if ('PermitVrfRequests' in obj) {\n    return new PermitVrfRequests();\n  }\n\n  throw new Error('Invalid enum object');\n}\n\nexport function fromJSON(\n  obj: types.SwitchboardPermissionJSON\n): types.SwitchboardPermissionKind {\n  switch (obj.kind) {\n    case 'PermitNone': {\n      return new PermitNone();\n    }\n    case 'PermitOracleHeartbeat': {\n      return new PermitOracleHeartbeat();\n    }\n    case 'PermitOracleQueueUsage': {\n      return new PermitOracleQueueUsage();\n    }\n    case 'PermitVrfRequests': {\n      return new PermitVrfRequests();\n    }\n  }\n}\n\nexport function layout(property?: string) {\n  const ret = borsh.rustEnum([\n    // borsh.struct([], 'PermitNone'),\n    borsh.struct([], 'PermitOracleHeartbeat'),\n    borsh.struct([], 'PermitOracleQueueUsage'),\n    borsh.struct([], 'PermitVrfRequests'),\n  ]);\n  if (property !== undefined) {\n    return ret.replicate(property);\n  }\n  return ret;\n}\n"]}