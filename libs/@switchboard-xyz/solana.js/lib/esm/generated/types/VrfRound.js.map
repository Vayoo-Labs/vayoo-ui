{"version":3,"file":"VrfRound.js","sourceRoot":"","sources":["../../../../src/generated/types/VrfRound.ts"],"names":[],"mappings":"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","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface VrfRoundFields {\n  /** The alpha bytes used to calculate the VRF proof. */\n  alpha: Array<number>;\n  /** The number of bytes in the alpha buffer. */\n  alphaLen: number;\n  /** The Slot when the VRF round was opened. */\n  requestSlot: BN;\n  /** The unix timestamp when the VRF round was opened. */\n  requestTimestamp: BN;\n  /** The VRF round result. Will be zeroized if still awaiting fulfillment. */\n  result: Array<number>;\n  /** The number of builders who verified the VRF proof. */\n  numVerified: number;\n  /** Reserved for future info. */\n  ebuf: Array<number>;\n}\n\nexport interface VrfRoundJSON {\n  /** The alpha bytes used to calculate the VRF proof. */\n  alpha: Array<number>;\n  /** The number of bytes in the alpha buffer. */\n  alphaLen: number;\n  /** The Slot when the VRF round was opened. */\n  requestSlot: string;\n  /** The unix timestamp when the VRF round was opened. */\n  requestTimestamp: string;\n  /** The VRF round result. Will be zeroized if still awaiting fulfillment. */\n  result: Array<number>;\n  /** The number of builders who verified the VRF proof. */\n  numVerified: number;\n  /** Reserved for future info. */\n  ebuf: Array<number>;\n}\n\nexport class VrfRound {\n  /** The alpha bytes used to calculate the VRF proof. */\n  readonly alpha: Array<number>;\n  /** The number of bytes in the alpha buffer. */\n  readonly alphaLen: number;\n  /** The Slot when the VRF round was opened. */\n  readonly requestSlot: BN;\n  /** The unix timestamp when the VRF round was opened. */\n  readonly requestTimestamp: BN;\n  /** The VRF round result. Will be zeroized if still awaiting fulfillment. */\n  readonly result: Array<number>;\n  /** The number of builders who verified the VRF proof. */\n  readonly numVerified: number;\n  /** Reserved for future info. */\n  readonly ebuf: Array<number>;\n\n  constructor(fields: VrfRoundFields) {\n    this.alpha = fields.alpha;\n    this.alphaLen = fields.alphaLen;\n    this.requestSlot = fields.requestSlot;\n    this.requestTimestamp = fields.requestTimestamp;\n    this.result = fields.result;\n    this.numVerified = fields.numVerified;\n    this.ebuf = fields.ebuf;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct(\n      [\n        borsh.array(borsh.u8(), 256, 'alpha'),\n        borsh.u32('alphaLen'),\n        borsh.u64('requestSlot'),\n        borsh.i64('requestTimestamp'),\n        borsh.array(borsh.u8(), 32, 'result'),\n        borsh.u32('numVerified'),\n        borsh.array(borsh.u8(), 256, 'ebuf'),\n      ],\n      property\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new VrfRound({\n      alpha: obj.alpha,\n      alphaLen: obj.alphaLen,\n      requestSlot: obj.requestSlot,\n      requestTimestamp: obj.requestTimestamp,\n      result: obj.result,\n      numVerified: obj.numVerified,\n      ebuf: obj.ebuf,\n    });\n  }\n\n  static toEncodable(fields: VrfRoundFields) {\n    return {\n      alpha: fields.alpha,\n      alphaLen: fields.alphaLen,\n      requestSlot: fields.requestSlot,\n      requestTimestamp: fields.requestTimestamp,\n      result: fields.result,\n      numVerified: fields.numVerified,\n      ebuf: fields.ebuf,\n    };\n  }\n\n  toJSON(): VrfRoundJSON {\n    return {\n      alpha: this.alpha,\n      alphaLen: this.alphaLen,\n      requestSlot: this.requestSlot.toString(),\n      requestTimestamp: this.requestTimestamp.toString(),\n      result: this.result,\n      numVerified: this.numVerified,\n      ebuf: this.ebuf,\n    };\n  }\n\n  static fromJSON(obj: VrfRoundJSON): VrfRound {\n    return new VrfRound({\n      alpha: obj.alpha,\n      alphaLen: obj.alphaLen,\n      requestSlot: new BN(obj.requestSlot),\n      requestTimestamp: new BN(obj.requestTimestamp),\n      result: obj.result,\n      numVerified: obj.numVerified,\n      ebuf: obj.ebuf,\n    });\n  }\n\n  toEncodable() {\n    return VrfRound.toEncodable(this);\n  }\n}\n"]}