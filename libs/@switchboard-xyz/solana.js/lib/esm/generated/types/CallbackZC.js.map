{"version":3,"file":"CallbackZC.js","sourceRoot":"","sources":["../../../../src/generated/types/CallbackZC.ts"],"names":[],"mappings":"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","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface CallbackZCFields {\n  /** The program ID of the callback program being invoked. */\n  programId: PublicKey;\n  /** The accounts being used in the callback instruction. */\n  accounts: Array<types.AccountMetaZCFields>;\n  /** The number of accounts used in the callback */\n  accountsLen: number;\n  /** The serialized instruction data. */\n  ixData: Array<number>;\n  /** The number of serialized bytes in the instruction data. */\n  ixDataLen: number;\n}\n\nexport interface CallbackZCJSON {\n  /** The program ID of the callback program being invoked. */\n  programId: string;\n  /** The accounts being used in the callback instruction. */\n  accounts: Array<types.AccountMetaZCJSON>;\n  /** The number of accounts used in the callback */\n  accountsLen: number;\n  /** The serialized instruction data. */\n  ixData: Array<number>;\n  /** The number of serialized bytes in the instruction data. */\n  ixDataLen: number;\n}\n\nexport class CallbackZC {\n  /** The program ID of the callback program being invoked. */\n  readonly programId: PublicKey;\n  /** The accounts being used in the callback instruction. */\n  readonly accounts: Array<types.AccountMetaZC>;\n  /** The number of accounts used in the callback */\n  readonly accountsLen: number;\n  /** The serialized instruction data. */\n  readonly ixData: Array<number>;\n  /** The number of serialized bytes in the instruction data. */\n  readonly ixDataLen: number;\n\n  constructor(fields: CallbackZCFields) {\n    this.programId = fields.programId;\n    this.accounts = fields.accounts.map(\n      item => new types.AccountMetaZC({ ...item })\n    );\n    this.accountsLen = fields.accountsLen;\n    this.ixData = fields.ixData;\n    this.ixDataLen = fields.ixDataLen;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct(\n      [\n        borsh.publicKey('programId'),\n        borsh.array(types.AccountMetaZC.layout(), 32, 'accounts'),\n        borsh.u32('accountsLen'),\n        borsh.array(borsh.u8(), 1024, 'ixData'),\n        borsh.u32('ixDataLen'),\n      ],\n      property\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new CallbackZC({\n      programId: obj.programId,\n      accounts: obj.accounts.map(\n        (\n          item: any /* eslint-disable-line @typescript-eslint/no-explicit-any */\n        ) => types.AccountMetaZC.fromDecoded(item)\n      ),\n      accountsLen: obj.accountsLen,\n      ixData: obj.ixData,\n      ixDataLen: obj.ixDataLen,\n    });\n  }\n\n  static toEncodable(fields: CallbackZCFields) {\n    return {\n      programId: fields.programId,\n      accounts: fields.accounts.map(item =>\n        types.AccountMetaZC.toEncodable(item)\n      ),\n      accountsLen: fields.accountsLen,\n      ixData: fields.ixData,\n      ixDataLen: fields.ixDataLen,\n    };\n  }\n\n  toJSON(): CallbackZCJSON {\n    return {\n      programId: this.programId.toString(),\n      accounts: this.accounts.map(item => item.toJSON()),\n      accountsLen: this.accountsLen,\n      ixData: this.ixData,\n      ixDataLen: this.ixDataLen,\n    };\n  }\n\n  static fromJSON(obj: CallbackZCJSON): CallbackZC {\n    return new CallbackZC({\n      programId: new PublicKey(obj.programId),\n      accounts: obj.accounts.map(item => types.AccountMetaZC.fromJSON(item)),\n      accountsLen: obj.accountsLen,\n      ixData: obj.ixData,\n      ixDataLen: obj.ixDataLen,\n    });\n  }\n\n  toEncodable() {\n    return CallbackZC.toEncodable(this);\n  }\n}\n"]}