{"version":3,"file":"VrfLiteProveAndVerifyParams.js","sourceRoot":"","sources":["../../../../src/generated/types/VrfLiteProveAndVerifyParams.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,EAAE,EAAE,MAAM,yBAAyB,CAAC,CAAC,wDAAwD;AAEtG,OAAO,KAAK,KAAK,MAAM,kBAAkB,CAAC;AAgB1C,MAAM,OAAO,2BAA2B;IAMtC,YAAY,MAAyC;QACnD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAChC,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,QAAiB;QAC7B,OAAO,KAAK,CAAC,MAAM,CACjB;YACE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC;YAClC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;YACpB,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC;YACzB,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;SACtB,EACD,QAAQ,CACT,CAAC;IACJ,CAAC;IAED,8DAA8D;IAC9D,MAAM,CAAC,WAAW,CAAC,GAAQ;QACzB,OAAO,IAAI,2BAA2B,CAAC;YACrC,KAAK,EAAE,GAAG,CAAC,KAAK;YAChB,KAAK,EAAE,IAAI,UAAU,CACnB,GAAG,CAAC,KAAK,CAAC,MAAM,EAChB,GAAG,CAAC,KAAK,CAAC,UAAU,EACpB,GAAG,CAAC,KAAK,CAAC,MAAM,CACjB;YACD,YAAY,EAAE,GAAG,CAAC,YAAY;YAC9B,OAAO,EAAE,GAAG,CAAC,OAAO;SACrB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,MAAyC;QAC1D,OAAO;YACL,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,KAAK,EAAE,MAAM,CAAC,IAAI,CAChB,MAAM,CAAC,KAAK,CAAC,MAAM,EACnB,MAAM,CAAC,KAAK,CAAC,UAAU,EACvB,MAAM,CAAC,KAAK,CAAC,MAAM,CACpB;YACD,YAAY,EAAE,MAAM,CAAC,YAAY;YACjC,OAAO,EAAE,MAAM,CAAC,OAAO;SACxB,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YACtC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;SACjC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CACb,GAAoC;QAEpC,OAAO,IAAI,2BAA2B,CAAC;YACrC,KAAK,EAAE,GAAG,CAAC,KAAK;YAChB,KAAK,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACjC,YAAY,EAAE,GAAG,CAAC,YAAY;YAC9B,OAAO,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC;SAC7B,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,2BAA2B,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;CACF","sourcesContent":["import { SwitchboardProgram } from '../../SwitchboardProgram';\nimport { PublicKey } from '@solana/web3.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { BN } from '@switchboard-xyz/common'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as types from '../types'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport * as borsh from '@coral-xyz/borsh';\n\nexport interface VrfLiteProveAndVerifyParamsFields {\n  nonce: number | null;\n  proof: Uint8Array;\n  proofEncoded: string;\n  counter: BN;\n}\n\nexport interface VrfLiteProveAndVerifyParamsJSON {\n  nonce: number | null;\n  proof: Array<number>;\n  proofEncoded: string;\n  counter: string;\n}\n\nexport class VrfLiteProveAndVerifyParams {\n  readonly nonce: number | null;\n  readonly proof: Uint8Array;\n  readonly proofEncoded: string;\n  readonly counter: BN;\n\n  constructor(fields: VrfLiteProveAndVerifyParamsFields) {\n    this.nonce = fields.nonce;\n    this.proof = fields.proof;\n    this.proofEncoded = fields.proofEncoded;\n    this.counter = fields.counter;\n  }\n\n  static layout(property?: string) {\n    return borsh.struct(\n      [\n        borsh.option(borsh.u32(), 'nonce'),\n        borsh.vecU8('proof'),\n        borsh.str('proofEncoded'),\n        borsh.u128('counter'),\n      ],\n      property\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromDecoded(obj: any) {\n    return new VrfLiteProveAndVerifyParams({\n      nonce: obj.nonce,\n      proof: new Uint8Array(\n        obj.proof.buffer,\n        obj.proof.byteOffset,\n        obj.proof.length\n      ),\n      proofEncoded: obj.proofEncoded,\n      counter: obj.counter,\n    });\n  }\n\n  static toEncodable(fields: VrfLiteProveAndVerifyParamsFields) {\n    return {\n      nonce: fields.nonce,\n      proof: Buffer.from(\n        fields.proof.buffer,\n        fields.proof.byteOffset,\n        fields.proof.length\n      ),\n      proofEncoded: fields.proofEncoded,\n      counter: fields.counter,\n    };\n  }\n\n  toJSON(): VrfLiteProveAndVerifyParamsJSON {\n    return {\n      nonce: this.nonce,\n      proof: Array.from(this.proof.values()),\n      proofEncoded: this.proofEncoded,\n      counter: this.counter.toString(),\n    };\n  }\n\n  static fromJSON(\n    obj: VrfLiteProveAndVerifyParamsJSON\n  ): VrfLiteProveAndVerifyParams {\n    return new VrfLiteProveAndVerifyParams({\n      nonce: obj.nonce,\n      proof: Uint8Array.from(obj.proof),\n      proofEncoded: obj.proofEncoded,\n      counter: new BN(obj.counter),\n    });\n  }\n\n  toEncodable() {\n    return VrfLiteProveAndVerifyParams.toEncodable(this);\n  }\n}\n"]}