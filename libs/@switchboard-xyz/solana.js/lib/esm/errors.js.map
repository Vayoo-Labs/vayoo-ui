{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../src/errors.ts"],"names":[],"mappings":"AAGA,MAAM,OAAO,gCAAiC,SAAQ,KAAK;IACzD;QACE,KAAK,CAAC,yDAAyD,CAAC,CAAC;QACjE,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,gCAAgC,CAAC,SAAS,CAAC,CAAC;IAC1E,CAAC;CACF;AACD,MAAM,OAAO,+BAAgC,SAAQ,KAAK;IACxD;QACE,KAAK,CAAC,mEAAmE,CAAC,CAAC;QAC3E,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,+BAA+B,CAAC,SAAS,CAAC,CAAC;IACzE,CAAC;CACF;AACD,MAAM,OAAO,eAAgB,SAAQ,KAAK;IACxC;QACE,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC9D,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC;IACzD,CAAC;CACF;AACD,MAAM,OAAO,oBAAqB,SAAQ,KAAK;IAC7C,YAAY,KAAa,EAAE,SAAgC;QACzD,KAAK,CAAC,kBAAkB,KAAK,eAAe,SAAS,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACpE,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;IAC9D,CAAC;CACF;AACD,MAAM,OAAO,wBAAyB,SAAQ,KAAK;IACjD;QACE,KAAK,CAAC,2DAA2D,CAAC,CAAC;QACnE,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,CAAC;IAClE,CAAC;CACF;AACD,MAAM,OAAO,mBAAoB,SAAQ,KAAK;IAC5C;QACE,KAAK,CAAC,iDAAiD,CAAC,CAAC;QACzD,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,mBAAmB,CAAC,SAAS,CAAC,CAAC;IAC7D,CAAC;CACF;AACD,MAAM,OAAO,sBAAuB,SAAQ,KAAK;IAC/C,YAAY,QAAgB,EAAE,OAAe;QAC3C,KAAK,CACH,uDAAuD,QAAQ,qBAAqB,OAAO,EAAE,CAC9F,CAAC;QACF,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,CAAC;IAChE,CAAC;CACF;AACD,MAAM,OAAO,wBAAyB,SAAQ,KAAK;IACjD,YAAY,GAAW;QACrB,KAAK,CAAC,6BAA6B,GAAG,EAAE,CAAC,CAAC;QAC1C,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,CAAC;IAClE,CAAC;CACF;AACD,MAAM,OAAO,mCAAoC,SAAQ,wBAAwB;IAC/E,YAAY,OAAe;QACzB,KAAK,CAAC,oCAAoC,OAAO,GAAG,CAAC,CAAC;QACtD,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,mCAAmC,CAAC,SAAS,CAAC,CAAC;IAC7E,CAAC;CACF;AACD,MAAM,OAAO,+BAAgC,SAAQ,wBAAwB;IAC3E,YAAY,WAAmB;QAC7B,KAAK,CAAC,gCAAgC,WAAW,GAAG,CAAC,CAAC;QACtD,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,+BAA+B,CAAC,SAAS,CAAC,CAAC;IACzE,CAAC;CACF;AACD,MAAM,OAAO,qCAAsC,SAAQ,wBAAwB;IACjF,YAAY,QAAgB;QAC1B,KAAK,CAAC,yCAAyC,QAAQ,GAAG,CAAC,CAAC;QAC5D,MAAM,CAAC,cAAc,CACnB,IAAI,EACJ,qCAAqC,CAAC,SAAS,CAChD,CAAC;IACJ,CAAC;CACF;AACD,MAAM,OAAO,6BAA8B,SAAQ,KAAK;IACtD,YAAY,OAAiB;QAC3B,KAAK,CAAC,oBAAoB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjD,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,CAAC;IACvE,CAAC;CACF;AACD,MAAM,OAAO,kBAAmB,SAAQ,KAAK;IAC3C,YAAY,iBAA4B,EAAE,iBAA4B;QACpE,KAAK,CACH,iCAAiC,iBAAiB,cAAc,iBAAiB,EAAE,CACpF,CAAC;QACF,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,CAAC;IAC5D,CAAC;CACF;AACD,MAAM,OAAO,qBAAsB,SAAQ,KAAK;IAC9C,YAAY,QAAgB,EAAE,OAAe;QAC3C,KAAK,CAAC,gCAAgC,QAAQ,OAAO,OAAO,EAAE,CAAC,CAAC;QAChE,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAC/D,CAAC;CACF;AACD,MAAM,OAAO,cAAe,SAAQ,KAAK;IACvC,YAAY,aAAwB,EAAE,aAAwB;QAC5D,KAAK,CACH,qCAAqC,aAAa,cAAc,aAAa,EAAE,CAChF,CAAC;QACF,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC;IACxD,CAAC;CACF","sourcesContent":["import * as anchor from '@coral-xyz/anchor';\nimport { PublicKey } from '@solana/web3.js';\n\nexport class SwitchboardProgramIsBrowserError extends Error {\n  constructor() {\n    super(\"SwitchboardProgram can't sign and submit from browsers.\");\n    Object.setPrototypeOf(this, SwitchboardProgramIsBrowserError.prototype);\n  }\n}\nexport class SwitchboardProgramReadOnlyError extends Error {\n  constructor() {\n    super('SwitchboardProgram is in Read-Only mode, no keypair was provided.');\n    Object.setPrototypeOf(this, SwitchboardProgramReadOnlyError.prototype);\n  }\n}\nexport class ExistingKeypair extends Error {\n  constructor() {\n    super('Provided keypair corresponds to an existing account.');\n    Object.setPrototypeOf(this, ExistingKeypair.prototype);\n  }\n}\nexport class AccountNotFoundError extends Error {\n  constructor(label: string, publicKey: anchor.web3.PublicKey) {\n    super(`Failed to find ${label} at address ${publicKey.toBase58()}`);\n    Object.setPrototypeOf(this, AccountNotFoundError.prototype);\n  }\n}\nexport class InstructionsPackingError extends Error {\n  constructor() {\n    super('Each instruction group must fit into a single transaction');\n    Object.setPrototypeOf(this, InstructionsPackingError.prototype);\n  }\n}\nexport class NativeMintOnlyError extends Error {\n  constructor() {\n    super('Wrap/Unwrap can only be called on a native mint');\n    Object.setPrototypeOf(this, NativeMintOnlyError.prototype);\n  }\n}\nexport class InsufficientFundsError extends Error {\n  constructor(required: number, current: number) {\n    super(\n      `Insufficient funds to perform this action, required ${required}, current balance ${current}`\n    );\n    Object.setPrototypeOf(this, InsufficientFundsError.prototype);\n  }\n}\nexport class TransactionOverflowError extends Error {\n  constructor(msg: string) {\n    super(`TransactionOverflowError: ${msg}`);\n    Object.setPrototypeOf(this, TransactionOverflowError.prototype);\n  }\n}\nexport class TransactionInstructionOverflowError extends TransactionOverflowError {\n  constructor(numIxns: number) {\n    super(`number of instructions exceeded (${numIxns})`);\n    Object.setPrototypeOf(this, TransactionInstructionOverflowError.prototype);\n  }\n}\nexport class TransactionAccountOverflowError extends TransactionOverflowError {\n  constructor(numAccounts: number) {\n    super(`number of accounts exceeded (${numAccounts})`);\n    Object.setPrototypeOf(this, TransactionAccountOverflowError.prototype);\n  }\n}\nexport class TransactionSerializationOverflowError extends TransactionOverflowError {\n  constructor(numBytes: number) {\n    super(`serialized transaction size exceeded (${numBytes})`);\n    Object.setPrototypeOf(\n      this,\n      TransactionSerializationOverflowError.prototype\n    );\n  }\n}\nexport class TransactionMissingSignerError extends Error {\n  constructor(signers: string[]) {\n    super(`missing signers [${signers.join(', ')}]`);\n    Object.setPrototypeOf(this, TransactionMissingSignerError.prototype);\n  }\n}\nexport class IncorrectAuthority extends Error {\n  constructor(expectedAuthority: PublicKey, receivedAuthority: PublicKey) {\n    super(\n      `incorrect authority, expected ${expectedAuthority}, received ${receivedAuthority}`\n    );\n    Object.setPrototypeOf(this, IncorrectAuthority.prototype);\n  }\n}\nexport class AggregatorConfigError extends Error {\n  constructor(property: string, message: string) {\n    super(`failed to validate property '${property}' - ${message}`);\n    Object.setPrototypeOf(this, AggregatorConfigError.prototype);\n  }\n}\nexport class IncorrectOwner extends Error {\n  constructor(expectedOwner: PublicKey, receivedOwner: PublicKey) {\n    super(\n      `incorrect account owner, expected ${expectedOwner}, received ${receivedOwner}`\n    );\n    Object.setPrototypeOf(this, IncorrectOwner.prototype);\n  }\n}\n"]}