{"version":3,"file":"queue.js","sourceRoot":"","sources":["../../../src/json/queue.ts"],"names":[],"mappings":"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","sourcesContent":["import { QueueInitParams } from '../accounts';\nimport { loadKeypair } from '../utils';\n\nimport {\n  keypairToString,\n  parseBoolean,\n  parseNumber,\n  parseString,\n} from './utils';\n\nimport { Keypair } from '@solana/web3.js';\n\nexport type IQueueInitParams = Omit<QueueInitParams, 'authority'> & {\n  authority?: Keypair;\n};\n\nexport class QueueJson implements IQueueInitParams {\n  // queue params\n  name?: string;\n  metadata?: string;\n  reward: number;\n  minStake: number;\n  feedProbationPeriod?: number;\n  oracleTimeout?: number;\n  slashingEnabled?: boolean;\n  varianceToleranceMultiplier?: number;\n  consecutiveFeedFailureLimit?: number;\n  consecutiveOracleFailureLimit?: number;\n  queueSize: number;\n  unpermissionedFeeds?: boolean;\n  unpermissionedVrf?: boolean;\n  enableBufferRelayers?: boolean;\n\n  // accounts\n  authority?: Keypair;\n  keypair: Keypair;\n  dataBufferKeypair: Keypair;\n\n  constructor(object: Record<string, any>) {\n    this.name = parseString(object, 'name', '');\n    this.metadata = parseString(object, 'metadata', '');\n    this.reward = parseNumber(object, 'reward', 0);\n    this.minStake = parseNumber(object, 'minStake', 0);\n    this.feedProbationPeriod = parseNumber(\n      object,\n      'feedProbationPeriod',\n      undefined\n    );\n    this.oracleTimeout = parseNumber(object, 'oracleTimeout', undefined);\n    this.slashingEnabled = parseBoolean(object, 'slashingEnabled', undefined);\n    this.varianceToleranceMultiplier = parseNumber(\n      object,\n      'varianceToleranceMultiplier',\n      undefined\n    );\n    this.consecutiveFeedFailureLimit = parseNumber(\n      object,\n      'consecutiveFeedFailureLimit',\n      undefined\n    );\n    this.consecutiveOracleFailureLimit = parseNumber(\n      object,\n      'consecutiveOracleFailureLimit',\n      undefined\n    );\n    this.queueSize = parseNumber(object, 'queueSize', 100);\n    this.unpermissionedFeeds = parseBoolean(\n      object,\n      'unpermissionedFeeds',\n      undefined\n    );\n    this.unpermissionedVrf = parseBoolean(object, 'unpermissionedVrf', false);\n    this.enableBufferRelayers = parseBoolean(\n      object,\n      'enableBufferRelayers',\n      undefined\n    );\n\n    // accounts\n    const keypairPath = parseString(object, 'keypair');\n    this.keypair = keypairPath ? loadKeypair(keypairPath) : Keypair.generate();\n\n    const authorityPath = parseString(object, 'authorityKeypair');\n    this.authority = authorityPath ? loadKeypair(authorityPath) : undefined;\n\n    const dataBufferPath = parseString(object, 'dataBufferKeypair');\n    this.dataBufferKeypair = dataBufferPath\n      ? loadKeypair(dataBufferPath)\n      : Keypair.generate();\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      metadata: this.metadata,\n      reward: this.reward,\n      minStake: this.minStake,\n      feedProbationPeriod: this.feedProbationPeriod,\n      oracleTimeout: this.oracleTimeout,\n      slashingEnabled: this.slashingEnabled,\n      varianceToleranceMultiplier: this.varianceToleranceMultiplier,\n      consecutiveFeedFailureLimit: this.consecutiveFeedFailureLimit,\n      consecutiveOracleFailureLimit: this.consecutiveOracleFailureLimit,\n      queueSize: this.queueSize,\n      unpermissionedFeeds: this.unpermissionedFeeds,\n      unpermissionedVrf: this.unpermissionedVrf,\n      enableBufferRelayers: this.enableBufferRelayers,\n      authority: this.authority ? keypairToString(this.authority) : undefined,\n      keypair: keypairToString(this.keypair),\n      dataBufferKeypair: keypairToString(this.dataBufferKeypair),\n    };\n  }\n}\n"]}