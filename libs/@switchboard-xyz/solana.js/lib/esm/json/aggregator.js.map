{"version":3,"file":"aggregator.js","sourceRoot":"","sources":["../../../src/json/aggregator.ts"],"names":[],"mappings":"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","sourcesContent":["import { CreateQueueFeedParams } from '../accounts';\nimport { loadKeypair } from '../utils';\n\nimport { JobJson } from './job';\nimport {\n  keypairToString,\n  parseBoolean,\n  parseNumber,\n  parseString,\n} from './utils';\n\nimport { Keypair } from '@solana/web3.js';\n\nexport class AggregatorJson implements CreateQueueFeedParams {\n  // aggregator params\n  name: string;\n  metadata: string;\n  batchSize: number;\n  minRequiredOracleResults: number;\n  minRequiredJobResults: number;\n  minUpdateDelaySeconds: number;\n  startAfter: number;\n  expiration: number;\n  varianceThreshold: number;\n  forceReportPeriod: number;\n  historyLimit?: number;\n\n  disableCrank: boolean;\n  crankIndex?: number;\n\n  slidingWindow?: boolean;\n  basePriorityFee?: number;\n  priorityFeeBump?: number;\n  priorityFeeBumpPeriod?: number;\n  maxPriorityFeeMultiplier?: number;\n\n  // lease params\n  fundAmount: number;\n\n  // permission params\n  enable: boolean;\n\n  // accounts\n  keypair: Keypair;\n  authority?: Keypair;\n\n  // resources\n  jobs: Array<JobJson>;\n\n  constructor(object: Record<string, any>) {\n    this.name = parseString(object, 'name', '');\n    this.metadata = parseString(object, 'metadata', '');\n    this.batchSize = parseNumber(object, 'batchSize', 1);\n    this.minRequiredOracleResults = parseNumber(\n      object,\n      'minRequiredOracleResults',\n      1\n    );\n    this.minRequiredJobResults = parseNumber(\n      object,\n      'minRequiredJobResults',\n      1\n    );\n    this.minUpdateDelaySeconds = parseNumber(\n      object,\n      'minUpdateDelaySeconds',\n      30\n    );\n    this.startAfter = parseNumber(object, 'startAfter', 0);\n    this.expiration = parseNumber(object, 'expiration', 0);\n    this.varianceThreshold = parseNumber(object, 'varianceThreshold', 0);\n    this.forceReportPeriod = parseNumber(object, 'forceReportPeriod', 0);\n    this.historyLimit =\n      'historyLimit' in object\n        ? Number.parseInt(object.historyLimit)\n        : undefined;\n\n    this.disableCrank = parseBoolean(object, 'disableCrank', false);\n    this.crankIndex =\n      'crankIndex' in object ? Number(object.crankIndex) : undefined;\n\n    this.slidingWindow = parseBoolean(object, 'slidingWindow', undefined);\n\n    this.basePriorityFee =\n      'basePriorityFee' in object\n        ? Number.parseInt(object.basePriorityFee)\n        : undefined;\n    this.priorityFeeBump =\n      'priorityFeeBump' in object\n        ? Number.parseInt(object.priorityFeeBump)\n        : undefined;\n    this.priorityFeeBumpPeriod =\n      'priorityFeeBumpPeriod' in object\n        ? Number.parseInt(object.priorityFeeBumpPeriod)\n        : undefined;\n    this.maxPriorityFeeMultiplier =\n      'maxPriorityFeeMultiplier' in object\n        ? Number.parseInt(object.maxPriorityFeeMultiplier)\n        : undefined;\n\n    // lease\n    this.fundAmount = parseNumber(object, 'fundAmount', 0);\n\n    // permissions\n    this.enable = parseBoolean(object, 'enable', false);\n\n    // accounts\n    const keypairPath = parseString(object, 'keypair');\n    this.keypair = keypairPath ? loadKeypair(keypairPath) : Keypair.generate();\n\n    const authorityPath = parseString(object, 'authority');\n    this.authority = authorityPath ? loadKeypair(authorityPath) : undefined;\n\n    // resources\n    this.jobs = JobJson.loadMultiple(object);\n  }\n\n  static loadMultiple(object: Record<string, any>): Array<AggregatorJson> {\n    const aggregatorJsons: Array<AggregatorJson> = [];\n    if ('aggregators' in object && Array.isArray(object.aggregators)) {\n      for (const aggregator of object.aggregators) {\n        aggregatorJsons.push(new AggregatorJson(aggregator));\n      }\n    }\n\n    return aggregatorJsons;\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      metadata: this.metadata,\n      batchSize: this.batchSize,\n      minRequiredOracleResults: this.minRequiredOracleResults,\n      minRequiredJobResults: this.minRequiredJobResults,\n      minUpdateDelaySeconds: this.minUpdateDelaySeconds,\n      startAfter: this.startAfter,\n      expiration: this.expiration,\n      varianceThreshold: this.varianceThreshold,\n      forceReportPeriod: this.forceReportPeriod,\n      historyLimit: this.historyLimit,\n      disableCrank: this.disableCrank,\n      slidingWindow: this.slidingWindow,\n      basePriorityFee: this.basePriorityFee,\n      priorityFeeBump: this.priorityFeeBump,\n      priorityFeeBumpPeriod: this.priorityFeeBumpPeriod,\n      maxPriorityFeeMultiplier: this.maxPriorityFeeMultiplier,\n      fundAmount: this.fundAmount,\n      keypair: keypairToString(this.keypair),\n      authority: this.authority ? keypairToString(this.authority) : undefined,\n      jobs: this.jobs.map(job => job.toJSON()),\n    };\n  }\n}\n"]}