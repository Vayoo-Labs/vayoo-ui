{"version":3,"file":"big.js","sourceRoot":"","sources":["../../../src/utils/big.ts"],"names":[],"mappings":"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","sourcesContent":["import Big from \"big.js\";\nimport BN from \"bn.js\";\nimport Decimal from \"decimal.js\";\nimport { SwitchboardDecimal } from \"../SwitchboardDecimal\";\n\nexport class BigUtils {\n  public static safeDiv(number_: Big, denominator: Big, decimals = 20): Big {\n    const oldDp = Big.DP;\n    Big.DP = decimals;\n    const result = number_.div(denominator);\n    Big.DP = oldDp;\n    return result;\n  }\n\n  public static safeMul(...n: Big[]): Big {\n    if (n.length === 0) {\n      throw new Error(`need to provide elements to multiply ${n}`);\n    }\n\n    let result = new Big(1);\n    for (const x of n) {\n      result = result.mul(x);\n    }\n\n    return result;\n  }\n\n  public static safeNthRoot(big: Big, nthRoot: number, decimals = 20): Big {\n    if (nthRoot <= 0) {\n      throw new Error(`cannot take the nth root of a negative number`);\n    }\n\n    const oldDp = Big.DP;\n    Big.DP = decimals;\n\n    const decimal = BigUtils.toDecimal(big);\n    const frac = new Decimal(1).div(nthRoot);\n    const root: Decimal =\n      big.s === -1\n        ? decimal.abs().pow(frac).mul(new Decimal(big.s))\n        : decimal.pow(frac);\n\n    const result: Big = BigUtils.fromDecimal(root);\n\n    Big.DP = oldDp;\n\n    return result;\n  }\n\n  public static safeSqrt(n: Big, decimals = 20): Big {\n    const oldDp = Big.DP;\n    Big.DP = decimals;\n    const result = n.sqrt();\n    Big.DP = oldDp;\n    return result;\n  }\n\n  public static safePow(n: Big, exp: number, decimals = 20): Big {\n    const oldDp = Big.DP;\n    Big.DP = decimals;\n\n    const oldPrecision = Decimal.precision;\n    Decimal.set({ precision: decimals });\n    const base = BigUtils.toDecimal(n);\n    const value = base.pow(exp);\n    const result = BigUtils.fromDecimal(value);\n    Decimal.set({ precision: oldPrecision });\n\n    Big.DP = oldDp;\n    return result;\n  }\n\n  public static fromBN(n: BN, decimals = 0): Big {\n    const big = new SwitchboardDecimal(n, decimals).toBig();\n    return big;\n  }\n\n  public static toDecimal(big: Big, decimals = 20): Decimal {\n    const decimal = new Decimal(big.toFixed(decimals, 0));\n    return decimal;\n  }\n\n  public static fromDecimal(decimal: Decimal, decimals = 20): Big {\n    if (decimal.isNaN()) {\n      throw new TypeError(`cannot convert NaN decimal.js to Big.js`);\n    }\n\n    if (!decimal.isFinite()) {\n      throw new TypeError(`cannot convert INF decimal.js to Big.js`);\n    }\n\n    const big = new Big(decimal.toFixed(decimals, 0));\n    return big;\n  }\n}\n"]}