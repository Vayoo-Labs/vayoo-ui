{"version":3,"file":"json.js","sourceRoot":"","sources":["../../../src/utils/json.ts"],"names":[],"mappings":";;;;;;AAAA,oDAAyB;AACzB,kDAAuB;AACvB,8DAA2D;AAC3D,qCAAsC;AAEtC,SAAS,kBAAkB,CAAC,GAAQ;IAClC,MAAM,SAAS,GAAG,gBAAG,CAAC,MAAM,CAAC;IAC7B,gBAAG,CAAC,MAAM,GAAG,IAAI,CAAC;IAClB,IAAI;QACF,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC3B,gBAAG,CAAC,MAAM,GAAG,SAAS,CAAC;QACvB,OAAO,GAAG,CAAC;KACZ;IAAC,MAAM,GAAE;IACV,gBAAG,CAAC,MAAM,GAAG,SAAS,CAAC;IACvB,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;AACxB,CAAC;AAED,SAAgB,aAAa,CAAC,GAAQ,EAAE,KAAU;IAChD,IACE,OAAO,KAAK,KAAK,QAAQ;QACzB,OAAO,KAAK,KAAK,QAAQ;QACzB,OAAO,KAAK,KAAK,SAAS,EAC1B;QACA,OAAO,KAAK,CAAC;KACd;IAED,SAAS;IACT,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;KACzB;IAED,KAAK;IACL,IAAI,eAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QAClB,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;KACzB;IAED,8BAA8B;IAC9B,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,UAAU,EAAE;QACxC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAClD,OAAO,IAAA,mBAAU,EAAC,KAAK,CAAC,CAAC;SAC1B;KACF;IAED,sBAAsB;IACtB,IACE,KAAK,YAAY,uCAAkB;QACnC,CAAC,KAAK;YACJ,OAAO,KAAK,KAAK,QAAQ;YACzB,UAAU,IAAI,KAAK;YACnB,OAAO,IAAI,KAAK,CAAC,EACnB;QACA,MAAM,UAAU,GAAG,IAAI,uCAAkB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACvE,OAAO,kBAAkB,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;KAC/C;IAED,SAAS;IACT,IAAI,KAAK,YAAY,gBAAG,EAAE;QACxB,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;KAClC;IAED,SAAS;IACT,IAAI,UAAU,IAAI,KAAK,IAAI,OAAO,KAAK,CAAC,QAAQ,KAAK,UAAU,EAAE;QAC/D,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;KACzB;IAED,WAAW;IACX,IAAI,UAAU,IAAI,KAAK,IAAI,OAAO,KAAK,CAAC,QAAQ,KAAK,UAAU,EAAE;QAC/D,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;KACzB;IAED,kCAAkC;IAClC,OAAO,KAAK,CAAC;AACf,CAAC;AAvDD,sCAuDC","sourcesContent":["import Big from \"big.js\";\nimport BN from \"bn.js\";\nimport { SwitchboardDecimal } from \"../SwitchboardDecimal\";\nimport { buf2String } from \"./string\";\n\nfunction big2NumberOrString(big: Big): number | string {\n  const oldStrict = Big.strict;\n  Big.strict = true;\n  try {\n    const num = big.toNumber();\n    Big.strict = oldStrict;\n    return num;\n  } catch {}\n  Big.strict = oldStrict;\n  return big.toString();\n}\n\nexport function jsonReplacers(key: any, value: any): any {\n  if (\n    typeof value === \"string\" ||\n    typeof value === \"number\" ||\n    typeof value === \"boolean\"\n  ) {\n    return value;\n  }\n\n  // bigint\n  if (typeof value === \"bigint\") {\n    return value.toString();\n  }\n\n  // BN\n  if (BN.isBN(value)) {\n    return value.toNumber();\n  }\n\n  // name and metadata replacers\n  if (key === \"name\" || key === \"metadata\") {\n    if (Array.isArray(value) || Buffer.isBuffer(value)) {\n      return buf2String(value);\n    }\n  }\n\n  // Switchboard Decimal\n  if (\n    value instanceof SwitchboardDecimal ||\n    (value &&\n      typeof value === \"object\" &&\n      \"mantissa\" in value &&\n      \"scale\" in value)\n  ) {\n    const swbDecimal = new SwitchboardDecimal(value.mantissa, value.scale);\n    return big2NumberOrString(swbDecimal.toBig());\n  }\n\n  // big.js\n  if (value instanceof Big) {\n    return big2NumberOrString(value);\n  }\n\n  // pubkey\n  if (\"toBase58\" in value && typeof value.toBase58 === \"function\") {\n    return value.toBase58();\n  }\n\n  // toString\n  if (\"toString\" in value && typeof value.toString === \"function\") {\n    return value.toString();\n  }\n\n  // Fall through for nested objects\n  return value;\n}\n"]}